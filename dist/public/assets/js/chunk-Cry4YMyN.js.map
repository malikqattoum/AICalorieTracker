{"version":3,"file":"chunk-Cry4YMyN.js","sources":["../../../../client/node_modules/@tanstack/query-core/build/modern/subscribable.js","../../../../client/node_modules/@tanstack/query-core/build/modern/utils.js","../../../../client/node_modules/@tanstack/query-core/build/modern/focusManager.js","../../../../client/node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../../../client/node_modules/@tanstack/query-core/build/modern/thenable.js","../../../../client/node_modules/@tanstack/query-core/build/modern/retryer.js","../../../../client/node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../../../client/node_modules/@tanstack/query-core/build/modern/removable.js","../../../../client/node_modules/@tanstack/query-core/build/modern/query.js","../../../../client/node_modules/@tanstack/query-core/build/modern/queryCache.js","../../../../client/node_modules/@tanstack/query-core/build/modern/mutation.js","../../../../client/node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../../../client/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../../../client/node_modules/@tanstack/query-core/build/modern/queryClient.js","../../../../client/node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../../../client/node_modules/@tanstack/query-core/build/modern/mutationObserver.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    const aItemsSet = new Set(aItems);\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        if (key === \"promise\" && !this.options.experimental_prefetchInRender && this.#currentThenable.status === \"pending\") {\n          this.#currentThenable.reject(\n            new Error(\n              \"experimental_prefetchInRender feature flag is not enabled\"\n            )\n          );\n        }\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map"],"names":["_focused","_cleanup","_setup","_a","_online","_b","_gcTimeout","_c","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","_Query_instances","dispatch_fn","_d","_queries","_e","_observers","_mutationCache","_Mutation_instances","_f","_mutations","_scopes","_mutationId","_g","_queryCache","_queryDefaults","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","_QueryObserver_instances","executeFetch_fn","updateStaleTimeout_fn","computeRefetchInterval_fn","updateRefetchInterval_fn","updateTimers_fn","clearStaleTimeout_fn","clearRefetchInterval_fn","updateQuery_fn","notify_fn","_i","_currentMutation","_j","Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","isValidTimeout","value","Infinity","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","aItemsSet","equalItems","i","has","shallowEqualObjects","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","replaceData","prevData","data","structuralSharing","addToEnd","items","item","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","shouldThrowError","throwOnError","params","focusManager","super","__privateAdd","__privateSet","onFocus","addEventListener","removeEventListener","__privateGet","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","WeakMap","onlineManager","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","pendingThenable","resolve","thenable","_resolve","_reject","finalize","assign","catch","reason","defaultRetryDelay","failureCount","min","canFetch","networkMode","CancelledError","revert","silent","createRetryer","config","continueFn","isRetryCancelled","isResolved","canContinue","canRun","canStart","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","onCancel","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","destroy","clearGcTimeout","scheduleGc","gcTime","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","defaultOptions","setOptions","observers","client","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","__privateMethod","manual","setState","setStateOptions","reset","some","observer","isDisabled","getObserversCount","isStatic","getCurrentResult","isStaleByTime","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","includes","notify","removeObserver","filter","invalidate","fetch","_h","_k","_l","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","abort","onSuccess","onSettled","onError","WeakSet","action","fetchState","newState","reducer","onQueryUpdate","QueryCache","Map","build","defaultQueryOptions","getQueryDefaults","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","queries","event","Mutation","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","_m","_n","_o","_p","_q","_r","_s","_t","mutationFn","restored","onMutate","runNext","onMutationUpdate","MutationCache","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryObserver","bindMethods","shouldFetchOnMount","updateResult","shouldFetchOn","refetchOnWindowFocus","prevOptions","prevQuery","mounted","shouldFetchOptionally","nextRefetchInterval","getOptimisticResult","createResult","optimisticResult","shouldAssignObserverCurrentProperties","trackResult","onPropTracked","Proxy","target","trackProp","experimental_prefetchInRender","Reflect","getCurrentQuery","fetchOptimistic","prevResult","prevResultState","prevResultOptions","queryInitialState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","skipSelect","placeholderData","select","selectError","isPending","isError","isLoading","nextResult","isSuccess","isInitialLoading","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","isEnabled","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","shouldNotifyListeners","time","refetchInterval","nextInterval","setInterval","refetchIntervalInBackground","clearInterval","notifyOptions","retryOnMount","shouldLoadOnMount","refetchOnMount","field","MutationObserver","_MutationObserver_instances","_mutateOptions","updateResult_fn","mutate","isIdle"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}