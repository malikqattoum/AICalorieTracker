{"version":3,"mappings":"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","names":["cn","inputs","twMerge","clsx","TooltipProvider","TooltipPrimitive","React","className","sideOffset","props","ref","jsx","TooltipPrimitive.Content","displayName","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","NotFound","children","jsxs","AlertCircle","currentEnv","window","location","hostname","includes","API_URL","development","production","staging","CONFIG","enforceHTTPS","tokenValidation","minLength","maxLength","requireBearerPrefix","allowRefreshTokens","maxTokenAge","refreshBuffer","headers","Pragma","Expires","logWarning","message","data","TOKEN_STORAGE_KEYS","ACCESS_TOKEN","REFRESH_TOKEN","TOKEN_METADATA_KEY","setAccessToken","token","localStorage","setItem","metadata","expiresAt","Date","now","issuedAt","lastChecked","JSON","stringify","error","Error","setRefreshToken","getAccessToken","getItem","getRefreshToken","clearTokens","removeItem","hasValidAccessToken","isTokenExpired","updateTokensFromResponse","responseData","tokens","accessToken","refreshToken","decodeJWT","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse","targetToken","payload","exp","currentTime","Math","floor","isExpired","toISOString","getTokenMetadata","metadataStr","isTokenExpiringSoon","bufferMinutes","bufferSeconds","expiringSoon","validateTokenForRequest","isTokenRevoked","verifyTokenSignature","validateSecureStorage","cleanupExpiredTokens","cleaned","cleanupAllAuthData","secret","parts","length","part","test","validateTokenFormat","tokenMetadata","validateHttpsUrl","url","isHttps","URL","protocol","addSecurityHeaders","securityHeaders","Object","entries","forEach","key","value","config","header","typ","iat","tokenAge","refreshAttemptCount","isRefreshing","lastRefreshTime","calculateBackoffDelay","attemptNumber","exponentialDelay","pow","jitter","random","min","performTokenRefresh","async","waitTime","Promise","resolve","setTimeout","waitDelay","newToken","res","fetch","method","body","ok","errorMessage","json","catch","status","refreshAccessToken","backoffDelay","throwIfResNotOk","text","statusText","apiRequest","cleanupError","retryCount","maxRetries","tokenValid","undefined","credentials","retryHeaders","refreshError","getQueryFn","on401","unauthorizedBehavior","context","queryKey","queryClient","QueryClient","defaultOptions","queries","queryFn","refetchInterval","refetchOnWindowFocus","staleTime","Infinity","retry","mutations","count","toastTimeouts","Map","addToRemoveQueue","toastId","has","timeout","delete","dispatch","type","set","reducer","state","action","toasts","toast","t","id","open","filter","listeners","memoryState","listener","Number","MAX_SAFE_INTEGER","dismiss","onOpenChange","update","useToast","setState","push","index","indexOf","splice","ToastProvider","ToastPrimitives","ToastViewport","ToastPrimitives.Viewport","toastVariants","cva","variants","variant","default","destructive","defaultVariants","Toast","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","AuthErrorType","INVALID_CREDENTIALS","TOKEN_EXPIRED","TOKEN_INVALID","NETWORK_ERROR","RATE_LIMITED","ACCOUNT_LOCKED","ACCOUNT_SUSPENDED","SESSION_EXPIRED","REFRESH_TOKEN_FAILED","TOKEN_REVOKED","SECURITY_VIOLATION","SERVER_ERROR","UNKNOWN_ERROR","VALIDATION_ERROR","PERMISSION_DENIED","RecoveryStrategy","NONE","RETRY","RELOGIN","CONTACT_SUPPORT","CLEAR_CACHE","errorState","analytics","retryDelay","retryBackoff","enableAnalytics","enableLogging","enableRecovery","createAuthError","options","userMessage","getUserMessage","severity","getErrorSeverity","recovery","getRecoveryStrategy","timestamp","retryable","isRetryable","existing","get","frequency","lastOccurrence","affectedUsers","errorType","updateErrorAnalytics","code","details","ErrorSeverity","logAuthError","customMessage","parseApiError","response","request","initialState","activeErrors","globalError","errorHistory","isLoading","recoveryInProgress","errorSettings","errorReducer","errorId","newErrors","ErrorContext","createContext","ErrorProvider","initialSettings","useReducer","generateErrorId","useCallback","getTime","substr","addError","removeError","setGlobalError","addToHistory","setLoading","loading","setRecoveryInProgress","inProgress","updateSettings","settings","clearAllErrors","clearHistory","getErrorByType","Array","from","values","find","getErrorsBySeverity","hasError","size","getErrorCount","getRecoveryErrors","contextValue","actions","Provider","useErrorContext","useContext","useErrorHandler","handleError","recoverySuccess","simulateRecovery","recoveryError","showErrorNotification","dismissError","dismissAllErrors","hasActiveErrors","hasGlobalError","isRecovering","z","username","password","email","confirmPassword","firstName","lastName","refine","path","AuthContext","AuthProvider","navigate","useLocation","useQueryClient","setIsRefreshing","useState","authError","setAuthError","tokenCleanupTriggered","setTokenCleanupTriggered","user","useQuery","loginMutation","useMutation","mutationFn","onSuccess","setQueryData","title","description","onError","altText","onClick","mutateAsync","variables","registerMutation","logoutMutation","removeQueries","refreshMutation","setQueryDefaults","useEffect","authErrorObj","initializeSession","handleTokenCleanup","sessionError","intervalId","setInterval","handleBeforeUnload","addEventListener","clearInterval","removeEventListener","useAuth","buttonVariants","dark","accent","outline","secondary","ghost","link","sm","lg","icon","Button","asChild","Comp","Slot","MobileMenu","currentPath","onLogout","onClose","userInitials","charAt","handleLinkClick","Link","href","Trophy","BookOpen","UserIcon","BarChart3","handleLogout","LanguageSwitcher","i18n","useTranslation","changeLanguage","e","lng","target","document","dir","language","onChange","Header","isMobileMenuOpen","setIsMobileMenuOpen","mutate","Fragment","Leaf","User","toggleMobileMenu","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Footer","currentYear","getFullYear","useCamera","webcamRef","useRef","isOpen","setIsOpen","isCameraReady","setIsCameraReady","capturedImage","setCapturedImage","setError","openCamera","closeCamera","err","captureImage","current","imageSrc","getScreenshot","resetImage","Progress","ProgressPrimitive.Root","ProgressPrimitive.Indicator","style","transform","EnhancedResultsDisplay","results","onBack","onUpdate","editingIndex","setEditingIndex","portionSize","setPortionSize","showDetails","setShowDetails","ArrowLeft","Activity","fallbackData","foodName","nutritionalInfo","healthScore","Heart","calories","Scale","estimatedWeight","referenceObject","protein","carbs","fat","analysisMetadata","processingTime","modelVersion","Edit","foods","totalFoods","averageConfidence","toFixed","food","toggleDetails","newShowDetails","Info","handleEdit","handleSave","original","ratio","updatedFood","round","Check","confidence","category","CameraView","onCapture","isAnalyzing","localIsCameraReady","setLocalIsCameraReady","localError","multiMode","setMultiMode","capturedFoods","setCapturedFoods","isProcessing","setIsProcessing","analysisResult","setAnalysisResult","handleCloseResults","src","alt","Webcam","audio","screenshotFormat","videoConstraints","width","height","facingMode","onUserMedia","onUserMediaError","Loader2","disabled","imageData","startsWith","endpoint","enablePortionEstimation","enable3DEstimation","confidenceThreshold","referenceObjects","restaurantMode","errorData","result","processedResult","success","enhancedResult","isArray","foodData","Eye","Camera","toggleMultiMode","ProgressPrimitive","Switch","SwitchPrimitives.Root","SwitchPrimitives.Thumb","CameraUploadCard","fileInputRef","uploadedImage","setUploadedImage","multiFoodMode","setMultiFoodMode","multiFoodResult","setMultiFoodResult","isCameraOpen","analyzeImageMutation","analysis","invalidateQueries","estimatedCalories","analyzeMultiFood","isPending","checked","onCheckedChange","htmlFor","minHeight","analyzeImage","resetUpload","handleUploadClick","click","Upload","file","files","reader","FileReader","onload","event","readAsDataURL","accept","idx","fiber","NutritionChart","maxValue","color","percentage","max","RecentResultsCard","analyses","imgSrc","resolveImageSrc","normalized","pop","imageUrl","currentTarget","dataset","fallbackTried","fname","analysisTimestamp","formatDistanceToNow","addSuffix","parseFloat","estimatedProtein","estimatedCarbs","estimatedFat","OverviewCard","stats","daysOfWeek","caloriesByDay","tabIndex","Flame","averageCalories","BarChart2","mealsTracked","PieChart","averageProtein","CalendarCheck","healthiestDay","streak","i","cals","maxStreak","consumed","reduce","a","b","percent","SwitchPrimitives","THEMES","light","ChartContext","useChart","ChartContainer","uniqueId","chartId","ChartStyle","RechartsPrimitive.ResponsiveContainer","colorConfig","theme","dangerouslySetInnerHTML","__html","prefix","itemConfig","active","indicator","hideLabel","hideIndicator","label","labelFormatter","labelClassName","formatter","nameKey","labelKey","tooltipLabel","item","dataKey","name","getPayloadConfigFromPayload","nestLabel","indicatorColor","toLocaleString","payloadPayload","configLabelKey","hideIcon","verticalAlign","backgroundColor","MEDICAL_CONDITIONS","AnalyticsCard","selectedCondition","onConditionChange","macrosByDay","opt","day","maxCalories","today","getDay","isPastOrToday","barClass","substring","ResponsiveContainer","LineChart","macros","clinicalFlag","margin","top","right","left","bottom","XAxis","YAxis","Tooltip","contentStyle","background","border","Legend","Line","dot","cx","cy","r","clinicalMacroFlag","Protein","Carbs","Fat","totalProtein","totalCarbs","totalFat","total","pct","val","domain","tickFormatter","v","bestDay","bestScore","avgConsistency","p","f","score","abs","MealTrendsCard","dailyTotals","date","format","chartData","keys","sort","LineChartIcon","row","HomePage","medicalCondition","setMedicalCondition","AuthErrorBoundary","Component","constructor","super","arguments","this","errorInfo","handleReset","handleGoHome","getDerivedStateFromError","componentDidCatch","render","fallback","AlertTriangle","RefreshCw","Home","Input","labelVariants","Label","LabelPrimitive.Root","LabelPrimitive","Form","FormProvider","FormFieldContext","FormField","Controller","useFormField","fieldContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","formItemId","formDescriptionId","formMessageId","FormItem","FormLabel","FormControl","FormMessage","String","Separator","orientation","decorative","SeparatorPrimitive.Root","SeparatorPrimitive","loginSchema","registerSchema","AuthPage","activeTab","setActiveTab","loginForm","useForm","resolver","zodResolver","defaultValues","registerForm","Redirect","to","onSubmit","handleSubmit","formData","control","field","placeholder","Mail","Apple","Utensils","ChevronRight","HistoryPage","groupedAnalyses","groups","sortedDates","ChevronLeft","Calendar","LandingPage","content","setContent","then","hero","subtitle","image","features","desc","pricingCta","testimonials","role","avatar","quote","featureList","featureListDesc","featureListImage","finalCta","Sparkles","ArrowRight","Zap","Star","CheckCircle","testimonial","_","Shield","Twitter","Facebook","Instagram","Github","TryItPage","tryItContent","setTryItContent","Tabs","TabsPrimitive","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","PricingPage","billingInterval","setBillingInterval","pricingContent","setPricingContent","parsed","tiers","price","monthly","yearly","discount","featured","defaultValue","onValueChange","tier","feature","CreditCard","rx","AboutPage","Brain","Salad","TrendingUp","Textarea","contactSchema","subject","ContactPage","isSubmitting","setIsSubmitting","isSubmitted","setIsSubmitted","form","Phone","MapPin","Send","question","answer","faq","TermsPage","PrivacyPage","Trigger","SelectPrimitive","Icon","ScrollUpButton","ScrollDownButton","Portal","Content","Viewport","Item","ItemIndicator","ItemText","ChevronDownIcon","ChevronDown","ChevronUpIcon","ChevronUp","CheckIcon","Select","SelectValue","SelectTrigger","SelectScrollUpButton","SelectScrollDownButton","SelectContent","position","SelectItem","SmartMealSuggestionsCard","fallbackSuggestions","suggestions","suggestion","MealPlanCard","mealPlan","isMealPlanLoading","mealPlanError","fetchMealPlan","goal","l","toUpperCase","meals","dayPlan","adaptation","meal","snacks","snack","j","totalCalories","MealPlanPage","setGoal","setIsLoading","setMealPlan","mealPlanData","mealPlanLoading","refetch","plan","daily","breakfast","lunch","dinner","classNames","showOutsideDays","DayPicker","months","month","caption","caption_label","nav","nav_button","nav_button_previous","nav_button_next","table","head_row","head_cell","cell","day_range_end","day_selected","day_today","day_outside","day_disabled","day_range_middle","day_hidden","components","IconLeft","IconRight","MealCalendarPage","selectedDate","setSelectedDate","plannedMeals","setPlannedMeals","isModalOpen","setIsModalOpen","currentMeal","setCurrentMeal","editingMeal","setEditingMeal","fetchPlannedMeals","year","getMonth","startDate","endDate","openModal","mealType","mealName","recipe","notes","closeModal","handleInputChange","prev","parseInt","mealsForSelectedDate","toDateString","mealOrder","aKey","toLowerCase","bKey","mode","selected","onSelect","mealId","confirm","handleDeleteMeal","toLocaleDateString","blob","createObjectURL","createElement","download","appendChild","remove","revokeObjectURL","getElementById","FormData","append","addAuthHeader","display","rows","mealData","userId","RecipeImportPage","importUrl","setImportUrl","selectedFile","setSelectedFile","importedRecipes","setImportedRecipes","isFetchingRecipes","setIsFetchingRecipes","editingRecipe","setEditingRecipe","viewingRecipe","setViewingRecipe","fetchImportedRecipes","isViewModalOpen","setIsViewModalOpen","isEditModalOpen","setIsEditModalOpen","currentRecipeForm","setCurrentRecipeForm","closeEditModal","handleEditFormChange","handleEditFormJsonChange","parsedJson","renderNutritionInfo","nutrition","nutritionData","availableFields","unit","UploadCloud","base64ImageData","onerror","recipeName","sourceUrl","rel","sourceImageUrl","rawImageData","parsedNutrition","instructions","openViewModal","openEditModal","ingredients","Edit3","recipeId","handleDeleteRecipe","Trash2","ing","quantity","closeViewModal","accountSchema","referralCode","optional","personalInfoSchema","age","gender","weight","ACTIVITY_LEVELS","Users","multiplier","Mountain","Rocket","GOALS","TrendingDown","bgColor","borderColor","ringColor","Minus","goalDetailsSchema","targetWeight","timeline","badgeVariants","Badge","DIETARY_PREFERENCES","Globe","Fish","Wheat","COMMON_ALLERGIES","AI_ASSISTANT_NAMES","ALL_STEPS","component","onStepCompleted","onNext","required","updateData","isCompleted","alert","Ruler","Weight","selectedLevel","setSelectedLevel","activityLevel","level","IconComponent","isSelected","handleSelectLevel","levelId","handleContinue","selectedGoal","setSelectedGoal","primaryGoal","Target","handleSelectGoal","goalId","selectedPreferences","setSelectedPreferences","dietaryPreferences","selectedAllergies","setSelectedAllergies","allergies","preference","handleTogglePreference","preferenceId","newPreferences","allergy","handleToggleAllergy","allergyId","newAllergies","handleSkip","aiMealSuggestions","setAiMealSuggestions","aiChatAssistantName","setAiChatAssistantName","handleAssistantNameChange","Bot","ChefHat","MessageCircle","Lightbulb","enabled","notificationsEnabled","setNotificationsEnabled","permissionStatus","setPermissionStatus","Bell","Clock","permission","Notification","requestPermission","isCompleting","setIsCompleting","setLocation","getGoalDisplay","getActivityLevelDisplay","sedentary","moderate","pref","missingFields","validGoals","__vitePreload","tokenManager","__VITE_PRELOAD__","OnboardingPage","STEPS","step","currentStep","setCurrentStep","onboardingData","setOnboardingData","completedSteps","setCompletedSteps","Set","onboardingCompleted","goToNext","progressPercentage","handleStepCompleted","markStepCompleted","stepIndex","CurrentStepComponent","AnimatePresence","motion","div","initial","opacity","x","animate","exit","transition","duration","newData","goToPrevious","skipStep","Table","TableHeader","TableBody","TableRow","TableHead","TableCell","Dialog","DialogPrimitive","DialogPortal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogFooter","DialogTitle","DialogPrimitive.Title","Headers","requestOptions","apiPost","AIConfigPanel","configs","setConfigs","setFormData","aiConfigs","updateConfigMutation","activateProviderMutation","initialFormData","provider","apiKey","modelName","temperature","maxTokens","promptTemplate","handleFormChange","handleSaveConfig","trim","handleActivateProvider","Settings","isActive","hasApiKey","Key","openai","Save","gemini","AITestingPanel","testImage","setTestImage","testResult","setTestResult","isTestingAI","setIsTestingAI","activeConfig","DialogPrimitive.Description","alertVariants","Alert","AlertDescription","ScrollArea","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","ScrollAreaPrimitive","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","EnhancedSystemMonitor","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","alertFilters","setAlertFilters","resolved","systemMetrics","serviceStatus","systemAlerts","params","URLSearchParams","systemLogs","restartServiceMutation","serviceName","resolveAlertMutation","alertId","formatBytes","bytes","units","unitIndex","formatUptime","seconds","days","hours","minutes","Gauge","application","uptime","responseTime","userSessions","ai","costPerHour","Cpu","cpu","usage","cores","memory","used","available","cached","HardDrive","disk","readSpeed","writeSpeed","network","connections","Download","bytesIn","bytesOut","Database","database","activeQueries","queryTime","cacheHitRate","apiCalls","successRate","averageLatency","queueLength","Server","service","dependencies","dep","healthy","warning","critical","offline","getStatusColor","low","medium","high","resolvedBy","resolvedAt","getSeverityColor","log","debug","info","warn","fatal","getLogLevelColor","AdvancedUserManagement","searchTerm","setSearchTerm","filterRole","setFilterRole","filterPremium","setFilterPremium","selectedUser","setSelectedUser","editUser","setEditUser","showCreateDialog","setShowCreateDialog","showBulkActions","setShowBulkActions","selectedUsers","setSelectedUsers","users","userStats","createUserMutation","userData","updateUserMutation","bulkOperationMutation","operation","userIds","filteredUsers","exportUsers","csvContent","isPremium","registrationDate","Blob","UserPlus","totalUsers","newUsersThisWeek","Crown","premiumUsers","activeToday","avgRevenue","Search","handleSelectAll","handleUserSelect","lastLoginAt","newUsersThisMonth","newUsersLastMonth","growthRate","dailyActiveUsers","weeklyActiveUsers","avgSessionDuration","totalMeals","CreateUserForm","preventDefault","COLORS","AnalyticsDashboard","timeRange","setTimeRange","BarChart","exportAnalytics","userGrowth","mealAnalytics","sum","DollarSign","revenueData","revenue","premium","AreaChart","CartesianGrid","strokeDasharray","Area","stackId","fillOpacity","topFoods","Bar","userRetention","cohort","retention","rate","Pie","featureUsage","labelLine","outerRadius","entry","Cell","aiProviderStats","cost","PaymentManagement","statusFilter","setStatusFilter","selectedSubscription","setSelectedSubscription","showRefundDialog","setShowRefundDialog","refundAmount","setRefundAmount","refundReason","setRefundReason","referralSettings","setReferralSettings","commission_percent","is_recurring","metrics","metricsLoading","subscriptions","subscriptionsLoading","refetchSubscriptions","transactions","transactionsLoading","paymentMethods","cancelSubscriptionMutation","subscriptionId","refundPaymentMutation","updateReferralSettings","getStatusBadge","XCircle","exportData","planName","amount","createdAt","totalRevenue","monthlyRevenue","activeSubscriptions","canceledSubscriptions","churnRate","yearlyRevenue","averageRevenuePerUser","lifetimeValue","totalSubscriptions","subscription","interval","currency","currentPeriodEnd","cancelAt","transaction","brand","last4","expMonth","padStart","expYear","isDefault","currentPeriodStart","transactionId","reason","SettingsPanel","setSettings","hasChanges","setHasChanges","appSettings","updateSettingsMutation","section","testEmailMutation","handleSettingsChange","handleSaveSection","general","siteName","supportEmail","siteDescription","maintenanceMode","registrationEnabled","emailVerificationRequired","Code","defaultProvider","maxAnalysesPerDay","analysisTimeout","enableAutoAnalysis","payment","stripeEnabled","monthlyPrice","yearlyPrice","trialDays","smtpHost","smtpPort","smtpUsername","smtpPassword","fromAddress","fromName","Lock","security","passwordMinLength","sessionTimeout","maxLoginAttempts","lockoutDuration","twoFactorEnabled","notifications","emailEnabled","pushEnabled","slackWebhook","discordWebhook","storage","maxFileSize","retentionDays","allowedTypes","performance","cacheEnabled","compressionEnabled","rateLimitEnabled","cacheTtl","BackupSystem","selectedBackupType","setSelectedBackupType","backupName","setBackupName","uploadProgress","setUploadProgress","isCreatingBackup","setIsCreatingBackup","backupStats","backups","refetchBackups","createBackupMutation","deleteBackupMutation","backupId","apiDelete","restoreBackupMutation","totalBackups","totalSize","lastBackup","storageUsed","storageLimit","backup","full","logs","handleDownloadBackup","downloadUrl","Copy","getTypeBadge","defaultChecked","SecurityCenter","selectedSeverity","setSelectedSeverity","selectedTimeRange","setSelectedTimeRange","securityMetrics","securityEvents","refetchEvents","blockedIPs","refetchBlockedIPs","blockIPMutation","unblockIPMutation","ipId","resolveEventMutation","eventId","getSeverityBadge","getEventIcon","login_attempt","failed_login","suspicious_activity","password_change","admin_action","api_abuse","totalEvents","criticalEvents","Ban","failedLogins","suspiciousActivities","activeThreats","ip","ipAddress","attempts","blockedAt","investigating","blocked","pending","UserX","userAgent","blockedBy","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","NotificationCenter","selectedType","setSelectedType","selectedStatus","setSelectedStatus","isCreating","setIsCreating","newNotification","setNewNotification","priority","channels","recipients","notificationStats","refetchNotifications","templates","createNotificationMutation","sendNotificationMutation","notificationId","Plus","totalSent","totalScheduled","averageOpenRate","averageClickRate","failedDeliveries","activeSubscribers","notification","urgent","draft","scheduled","sent","failed","openRate","channel","template","variable","AdvancedDashboard","dashboardStats","refetchStats","recentActivity","getActivityIcon","user_registration","premium_upgrade","ai_analysis","system_alert","security_event","getUsageColor","acknowledged","newToday","totalAnalyses","averageResponseTime","costToday","Monitor","system","cpuUsage","memoryUsage","activeConnections","diskUsage","threatsBlocked","lastIncident","activity","ActivityLogger","filters","setFilters","activityStats","activityLogs","search","exportLogsMutation","removeChild","getCategoryIcon","auth","admin","formatTimeAgo","time","diffInMinutes","totalActivities","activitiesLast24h","failedAttempts","uniqueIPs","activitiesLast7d","userEmail","city","country","FileText","topActions","topUsers","Filter","ReportGenerator","reportConfig","setReportConfig","start","end","sections","userMetrics","financialMetrics","aiMetrics","customCharts","includeCharts","includeRawData","emailRecipients","newTemplate","setNewTemplate","schedule","emailList","setEmailList","generatedReports","refetchReports","generateReportMutation","createTemplateMutation","templateId","apiPut","handleConfigChange","handleSectionToggle","getTypeIcon","financial","custom","formatFileSize","onBlur","handleEmailRecipientsChange","emails","handleGenerateReport","lastGenerated","report","completed","generatedAt","generatedBy","fileSize","progress","some","AdminPanel","selectedTab","setSelectedTab","userSearch","setUserSearch","mealSearch","setMealSearch","statsSearch","setStatsSearch","editUserData","setEditUserData","showDeleteDialog","setShowDeleteDialog","deleteUserId","setDeleteUserId","showConfigDialog","setShowConfigDialog","currentConfig","setCurrentConfig","isEditingConfig","setIsEditingConfig","refetchUsers","isLoadingUsers","refetchMeals","isLoadingMeals","isLoadingStats","fetchedAppConfigs","refetchAppConfigs","isLoadingAppConfigs","createAppConfigMutation","updateAppConfigMutation","deleteAppConfigMutation","u","filteredMeals","m","filteredStats","s","stat","ContentEditor","openNewConfigDialog","openEditConfigDialog","contentItems","setContentItems","all","fetchedContents","currentItems","fetched","fc","handleContentChange","newValue","saveContent","NutritionCoachChatbot","messages","setMessages","input","setInput","inputRef","msg","msgs","reply","focus","sendMessage","autoFocus","ChatbotPage","AchievementsPage","selectedCategory","setSelectedCategory","achievements","maxProgress","unlocked","unlockedDate","categories","Award","filteredAchievements","unlockedCount","totalProgress","averageProgress","achievement","handleShare","navigator","share","clipboard","writeText","Share2","NutritionEducationPage","bookmarkedTips","setBookmarkedTips","completedTips","setCompletedTips","nutritionTips","difficulty","readTime","tags","bookmarked","Beef","Droplets","filteredTips","useMemo","tip","matchesSearch","tag","matchesCategory","completedCount","totalTips","getDifficultyColor","Bookmark","BookmarkCheck","toggleBookmark","tipId","newSet","add","markAsCompleted","tips","CheckboxPrimitive","Avatar","AvatarPrimitive.Root","AvatarPrimitive","AvatarPrimitive.Image","AvatarFallback","AvatarPrimitive.Fallback","ProfilePage","commissions","commissionsLoading","streakDays","joinDate","totalEarned","pendingAmount","commission","origin","readOnly","subscriptionPlans","popular","featureIndex","PremiumAnalyticsDashboard","healthScores","setHealthScores","predictions","setPredictions","patternAnalysis","setPatternAnalysis","realTimeData","setRealTimeData","fitness","consistency","overall","predicted","trend","pattern","correlation","strength","metric","fetchData","getTrendIcon","prediction","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","angle","Radar","PremiumAnalyticsPage","showPremiumFeatures","setShowPremiumFeatures","premiumFeatures","benefits","benefit","benefitIndex","pricingPlans","period","rating","ProtectedRoute","Route","RedirectToLogin","Router","App","ThemeProvider","attribute","defaultTheme","Toaster","use","Backend","initReactI18next","init","fallbackLng","supportedLngs","backend","loadPath","interpolation","escapeValue","createRoot","QueryClientProvider","client"],"ignoreList":[],"sources":["../../../../client/src/lib/utils.ts","../../../../client/src/components/ui/tooltip.tsx","../../../../client/src/components/ui/card.tsx","../../../../client/src/pages/not-found.tsx","../../../../client/src/lib/config.ts","../../../../client/src/lib/tokenManager.ts","../../../../client/src/lib/queryClient.ts","../../../../client/src/hooks/use-toast.ts","../../../../client/src/components/ui/toast.tsx","../../../../client/src/lib/errorHandling.ts","../../../../client/src/contexts/ErrorContext.tsx","../../../../client/src/hooks/use-auth.tsx","../../../../client/src/components/ui/button.tsx","../../../../client/src/components/layout/mobile-menu.tsx","../../../../client/src/components/layout/language-switcher.tsx","../../../../client/src/components/layout/header.tsx","../../../../client/src/components/layout/footer.tsx","../../../../client/src/hooks/use-camera.tsx","../../../../client/src/components/ui/progress.tsx","../../../../client/src/components/camera/enhanced-results-display.tsx","../../../../client/src/components/camera/camera-view.tsx","../../../../client/src/components/ui/switch.tsx","../../../../client/src/components/dashboard/camera-upload-card.tsx","../../../../client/src/components/dashboard/nutrition-chart.tsx","../../../../client/src/components/dashboard/recent-results-card.tsx","../../../../client/src/components/dashboard/overview-card.tsx","../../../../client/src/components/ui/chart.tsx","../../../../client/src/components/dashboard/analytics-card.tsx","../../../../client/src/components/dashboard/meal-trends-card.tsx","../../../../client/src/pages/home-page.tsx","../../../../client/src/components/auth/auth-error-boundary.tsx","../../../../client/src/components/ui/input.tsx","../../../../client/src/components/ui/label.tsx","../../../../client/src/components/ui/form.tsx","../../../../client/src/components/ui/separator.tsx","../../../../client/src/pages/auth-page.tsx","../../../../client/src/pages/history-page.tsx","../../../../client/src/pages/landing-page.tsx","../../../../client/src/pages/try-it-page.tsx","../../../../client/src/components/ui/tabs.tsx","../../../../client/src/pages/pricing-page.tsx","../../../../client/src/pages/about-page.tsx","../../../../client/src/components/ui/textarea.tsx","../../../../client/src/pages/contact-page.tsx","../../../../client/src/pages/terms-page.tsx","../../../../client/src/pages/privacy-page.tsx","../../../../client/src/components/ui/select.tsx","../../../../client/src/components/dashboard/smart-meal-suggestions-card.tsx","../../../../client/src/components/dashboard/meal-plan-card.tsx","../../../../client/src/pages/meal-plan-page.tsx","../../../../client/src/components/ui/calendar.tsx","../../../../client/src/pages/meal-calendar-page.tsx","../../../../client/src/pages/recipe-import-page.tsx","../../../../client/src/components/onboarding/account-creation-step.tsx","../../../../client/src/components/onboarding/personal-info-step.tsx","../../../../client/src/components/onboarding/activity-level-step.tsx","../../../../client/src/components/onboarding/goal-setting-step.tsx","../../../../client/src/components/ui/badge.tsx","../../../../client/src/components/onboarding/diet-preferences-step.tsx","../../../../client/src/components/onboarding/ai-personalization-step.tsx","../../../../client/src/pages/onboarding-page.tsx","../../../../client/src/components/onboarding/welcome-step.tsx","../../../../client/src/components/onboarding/notifications-step.tsx","../../../../client/src/components/onboarding/final-summary-step.tsx","../../../../client/src/components/ui/table.tsx","../../../../client/src/components/ui/dialog.tsx","../../../../client/src/lib/apiRequest.ts","../../../../client/src/components/admin/ai-config-panel.tsx","../../../../client/src/components/ui/alert.tsx","../../../../client/src/components/ui/scroll-area.tsx","../../../../client/src/components/admin/enhanced-system-monitor.tsx","../../../../client/src/components/admin/advanced-user-management.tsx","../../../../client/src/components/admin/analytics-dashboard.tsx","../../../../client/src/components/admin/payment-management.tsx","../../../../client/src/components/admin/settings-panel.tsx","../../../../client/src/components/admin/backup-system.tsx","../../../../client/src/components/admin/security-center.tsx","../../../../client/src/components/ui/checkbox.tsx","../../../../client/src/components/admin/notification-center.tsx","../../../../client/src/components/admin/advanced-dashboard.tsx","../../../../client/src/components/admin/activity-logger.tsx","../../../../client/src/components/admin/report-generator.tsx","../../../../client/src/pages/admin-panel.tsx","../../../../client/src/components/nutrition-coach-chatbot.tsx","../../../../client/src/pages/chatbot.tsx","../../../../client/src/pages/achievements-page.tsx","../../../../client/src/pages/nutrition-education-page.tsx","../../../../client/src/components/ui/avatar.tsx","../../../../client/src/pages/profile-page.tsx","../../../../client/src/components/premium/PremiumAnalyticsDashboard.tsx","../../../../client/src/pages/PremiumAnalytics.tsx","../../../../client/src/lib/protected-route.tsx","../../../../client/src/App.tsx","../../../../client/src/components/ui/toaster.tsx","../../../../client/src/lib/i18n.ts","../../../../client/src/main.tsx"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","// API Configuration for Web App\r\nconst API_CONFIG = {\r\n  // Development API URL - Use HTTP for development, HTTPS for security in production\r\n  development: 'http://localhost:3002',\r\n\r\n  // Production API URL\r\n  production: 'https://api.aicalorietracker.com',\r\n\r\n  // Staging API URL\r\n  staging: 'https://staging-api.aicalorietracker.com',\r\n};\r\n\r\n// Get current environment\r\nconst getEnvironment = () => {\r\n  if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {\r\n    return 'development';\r\n  }\r\n  \r\n  // Check for staging environment\r\n  if (typeof window !== 'undefined' && window.location.hostname.includes('staging')) {\r\n    return 'staging';\r\n  }\r\n  \r\n  return 'production';\r\n};\r\n\r\nconst currentEnv = getEnvironment();\r\n\r\n// Export API URL based on environment\r\nexport const API_URL = API_CONFIG[currentEnv as keyof typeof API_CONFIG];\r\n\r\n// Feature flags for enhanced food recognition\r\nexport const FEATURES = {\r\n  enhancedFoodRecognition: true,\r\n  multiItemRecognition: true,\r\n  portionSizeEstimation: true,\r\n  restaurantMenuRecognition: true,\r\n  nutritionalDatabase: true,\r\n  healthScoring: true,\r\n  confidenceThreshold: 0.7,\r\n  maxImageSize: 10 * 1024 * 1024, // 10MB\r\n  supportedImageFormats: ['image/jpeg', 'image/png', 'image/webp'],\r\n  referenceObjects: ['hand', 'credit_card', 'smartphone', 'coin'],\r\n  enable3DEstimation: false,\r\n  enableOfflineMode: false,\r\n  enableBarcodeScanning: true,\r\n  enableNutritionAnalysis: true,\r\n  enableHealthScoring: true,\r\n  enablePortionEstimation: true,\r\n  enableConfidenceDisplay: true,\r\n  enableProcessingTimeDisplay: true,\r\n  enableModelVersionDisplay: true,\r\n  enableErrorHandling: true,\r\n  enableFallbackMode: true,\r\n  enableRetryMechanism: true,\r\n  maxRetryAttempts: 3,\r\n  retryDelay: 1000, // 1 second\r\n  timeout: 30000, // 30 seconds\r\n  cacheResults: true,\r\n  cacheExpiration: 5 * 60 * 1000, // 5 minutes\r\n  enableAnalytics: true,\r\n  enableLogging: true,\r\n  enableDebugMode: false,\r\n};\r\n\r\n// Camera configuration\r\nexport const CAMERA_CONFIG = {\r\n  videoConstraints: {\r\n    width: { ideal: 1280 },\r\n    height: { ideal: 720 },\r\n    facingMode: 'environment',\r\n    frameRate: { ideal: 30 }\r\n  },\r\n  imageConstraints: {\r\n    width: 1280,\r\n    height: 720,\r\n    quality: 0.8,\r\n    format: 'image/jpeg'\r\n  },\r\n  maxImageSize: 10 * 1024 * 1024, // 10MB\r\n  supportedFormats: ['image/jpeg', 'image/png', 'image/webp'],\r\n  maxFileSize: 10 * 1024 * 1024, // 10MB\r\n  maxFileSizeDisplay: '10MB'\r\n};\r\n\r\n// Enhanced food recognition configuration\r\nexport const ENHANCED_FOOD_RECOGNITION_CONFIG = {\r\n  // API endpoints\r\n  endpoints: {\r\n    single: '/api/user/enhanced-food-recognition/analyze-single',\r\n    multi: '/api/user/enhanced-food-recognition/analyze-multi',\r\n    barcode: '/api/user/enhanced-food-recognition/barcode-scan',\r\n    restaurant: '/api/user/enhanced-food-recognition/restaurant-menu'\r\n  },\r\n  \r\n  // Default options\r\n  defaultOptions: {\r\n    enablePortionEstimation: true,\r\n    enable3DEstimation: false,\r\n    confidenceThreshold: 0.7,\r\n    referenceObjects: ['hand', 'credit_card', 'smartphone'],\r\n    restaurantMode: false,\r\n    enableHealthScoring: true,\r\n    enableNutritionAnalysis: true,\r\n    enableConfidenceDisplay: true,\r\n    enableProcessingTimeDisplay: true,\r\n    enableModelVersionDisplay: true,\r\n    enableErrorHandling: true,\r\n    enableFallbackMode: true,\r\n    enableRetryMechanism: true,\r\n    maxRetryAttempts: 3,\r\n    retryDelay: 1000,\r\n    timeout: 30000,\r\n    cacheResults: true,\r\n    cacheExpiration: 5 * 60 * 1000\r\n  },\r\n  \r\n  // Supported languages\r\n  supportedLanguages: ['en', 'es', 'fr', 'de', 'it', 'pt', 'ru', 'ja', 'ko', 'zh'],\r\n  \r\n  // Supported cuisines\r\n  supportedCuisines: [\r\n    'american', 'italian', 'mexican', 'chinese', 'japanese', 'korean', \r\n    'thai', 'indian', 'mediterranean', 'french', 'german', 'spanish'\r\n  ],\r\n  \r\n  // Confidence levels\r\n  confidenceLevels: {\r\n    high: 0.8,\r\n    medium: 0.6,\r\n    low: 0.4\r\n  },\r\n  \r\n  // Portion size estimation\r\n  portionSizeConfig: {\r\n    referenceObjects: {\r\n      hand: { avgWidth: 8.5, avgHeight: 18, avgDepth: 2.5 }, // cm\r\n      credit_card: { width: 8.56, height: 5.4, depth: 0.76 }, // cm\r\n      smartphone: { width: 6.5, height: 13, depth: 0.8 }, // cm\r\n      coin: { diameter: 2.4, thickness: 0.2 } // cm\r\n    },\r\n    maxPortionSize: 2000, // grams\r\n    minPortionSize: 10, // grams\r\n    defaultPortionSize: 100, // grams\r\n    enable3DEstimation: false,\r\n    enableWeightEstimation: true,\r\n    enableVolumeEstimation: true\r\n  },\r\n  \r\n  // Health scoring\r\n  healthScoringConfig: {\r\n    enableScoring: true,\r\n    maxScore: 100,\r\n    minScore: 0,\r\n    factors: {\r\n      nutritionBalance: 0.4,\r\n      calorieDensity: 0.3,\r\n      processingLevel: 0.2,\r\n      additives: 0.1\r\n    },\r\n    thresholds: {\r\n      excellent: 90,\r\n      good: 75,\r\n      fair: 60,\r\n      poor: 45,\r\n      veryPoor: 0\r\n    }\r\n  },\r\n  \r\n  // Nutrition analysis\r\n  nutritionAnalysisConfig: {\r\n    enableAnalysis: true,\r\n    macronutrients: ['calories', 'protein', 'carbs', 'fat', 'fiber', 'sugar', 'sodium'],\r\n    micronutrients: ['vitamins', 'minerals'],\r\n    allergens: ['gluten', 'dairy', 'nuts', 'soy', 'eggs', 'fish', 'shellfish', 'sesame'],\r\n    enableAllergenDetection: true,\r\n    enableMicronutrientAnalysis: true,\r\n    enableDailyValueCalculation: true,\r\n    dailyValues: {\r\n      calories: 2000,\r\n      protein: 50, // grams\r\n      carbs: 300, // grams\r\n      fat: 65, // grams\r\n      fiber: 25, // grams\r\n      sugar: 50, // grams\r\n      sodium: 2300 // mg\r\n    }\r\n  },\r\n  \r\n  // Error handling\r\n  errorHandlingConfig: {\r\n    enableErrorHandling: true,\r\n    enableFallbackMode: true,\r\n    enableRetryMechanism: true,\r\n    maxRetryAttempts: 3,\r\n    retryDelay: 1000,\r\n    timeout: 30000,\r\n    enableLogging: true,\r\n    enableAnalytics: true,\r\n    enableDebugMode: false,\r\n    errorMessages: {\r\n      networkError: 'Network error. Please check your connection and try again.',\r\n      timeoutError: 'Request timed out. Please try again.',\r\n      processingError: 'Failed to process image. Please try again.',\r\n      confidenceError: 'Low confidence in detection. Please try a clearer image.',\r\n      sizeError: 'Image too large. Please use a smaller image.',\r\n      formatError: 'Unsupported image format. Please use JPEG, PNG, or WebP.',\r\n      permissionError: 'Camera permission denied. Please enable camera access.',\r\n      unknownError: 'An unexpected error occurred. Please try again.'\r\n    }\r\n  }\r\n};\r\n\r\n// Security configuration\r\nexport const SECURITY_CONFIG = {\r\n  // HTTPS enforcement - environment-aware\r\n  enforceHTTPS: currentEnv !== 'development',\r\n  \r\n  // Token validation\r\n  tokenValidation: {\r\n    minLength: 10,\r\n    maxLength: 2048,\r\n    requireBearerPrefix: false,\r\n    allowRefreshTokens: true,\r\n    maxTokenAge: 15 * 60 * 1000, // 15 minutes\r\n    refreshBuffer: 5 * 60 * 1000, // 5 minutes before expiry\r\n  },\r\n  \r\n  // Rate limiting\r\n  rateLimit: {\r\n    api: {\r\n      max: 100,\r\n      windowMs: 15 * 60 * 1000, // 15 minutes\r\n    },\r\n    auth: {\r\n      max: 5,\r\n      windowMs: 15 * 60 * 1000, // 15 minutes\r\n    }\r\n  },\r\n  \r\n  // Security headers\r\n  headers: {\r\n    'X-Content-Type-Options': 'nosniff',\r\n    'X-Frame-Options': 'DENY',\r\n    'X-XSS-Protection': '1; mode=block',\r\n    'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload',\r\n    'Content-Security-Policy': \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://api.openai.com https://generativelanguage.googleapis.com; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'self'; worker-src 'self'; child-src 'self'; frame-ancestors 'none'; form-action 'self'; manifest-src 'self'; base-uri 'self'\",\r\n    'Referrer-Policy': 'strict-origin-when-cross-origin',\r\n    'Permissions-Policy': 'camera=(), microphone=(), geolocation=()',\r\n    'Cache-Control': 'no-store, no-cache, must-revalidate, proxy-revalidate',\r\n    'Pragma': 'no-cache',\r\n    'Expires': '0'\r\n  },\r\n  \r\n  // CORS configuration\r\n  cors: {\r\n    allowedOrigins: [\r\n      'http://localhost:3000',\r\n      'http://localhost:5173',\r\n      'http://localhost:4173',\r\n      'https://aicalorietracker.com',\r\n      'https://www.aicalorietracker.com',\r\n      'https://staging.aicalorietracker.com'\r\n    ],\r\n    allowedMethods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\r\n    allowedHeaders: [\r\n      'Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Authorization',\r\n      'X-API-Key', 'X-CSRF-Token', 'X-Session-ID'\r\n    ],\r\n    exposedHeaders: ['X-Total-Count', 'X-RateLimit-Limit', 'X-RateLimit-Remaining'],\r\n    credentials: true,\r\n    maxAge: 86400 // 24 hours\r\n  },\r\n  \r\n  // Request validation\r\n  requestValidation: {\r\n    maxBodySize: '10mb',\r\n    maxUploadSize: '5mb',\r\n    allowedFileTypes: ['image/jpeg', 'image/png', 'image/webp', 'application/pdf'],\r\n    sanitizeInput: true,\r\n    validateTokenFormat: true,\r\n    checkForSQLInjection: true,\r\n    checkForXSS: true\r\n  },\r\n  \r\n  // Security logging\r\n  logging: {\r\n    enableSecurityLogging: true,\r\n    logAuthenticationAttempts: true,\r\n    logSecurityViolations: true,\r\n    logSuspiciousActivity: true,\r\n    logTokenValidation: true,\r\n    logRequestValidation: true\r\n  }\r\n};\r\n\r\n// Export all configurations\r\nexport const CONFIG = {\r\n  api: API_URL,\r\n  features: FEATURES,\r\n  camera: CAMERA_CONFIG,\r\n  enhancedFoodRecognition: ENHANCED_FOOD_RECOGNITION_CONFIG,\r\n  security: SECURITY_CONFIG\r\n};\r\n\r\n// Utility functions\r\nexport const isDevelopment = currentEnv === 'development';\r\nexport const isProduction = currentEnv === 'production';\r\nexport const isStaging = currentEnv === 'staging';\r\n\r\n// Debug logging\r\nexport const log = (message: string, data?: any) => {\r\n  if (FEATURES.enableLogging && isDevelopment) {\r\n    console.log(`[${new Date().toISOString()}] ${message}`, data || '');\r\n  }\r\n};\r\n\r\nexport const logError = (message: string, error?: any) => {\r\n  if (FEATURES.enableLogging) {\r\n    console.error(`[${new Date().toISOString()}] ERROR: ${message}`, error || '');\r\n  }\r\n};\r\n\r\nexport const logInfo = (message: string, data?: any) => {\r\n  if (FEATURES.enableLogging) {\r\n    console.info(`[${new Date().toISOString()}] INFO: ${message}`, data || '');\r\n  }\r\n};\r\n\r\nexport const logWarning = (message: string, data?: any) => {\r\n  if (FEATURES.enableLogging) {\r\n    console.warn(`[${new Date().toISOString()}] WARNING: ${message}`, data || '');\r\n  }\r\n};\r\n\r\n// Export default configuration\r\nexport default CONFIG;","// Token management utilities\r\nimport { logError, logInfo, logWarning } from './config';\r\nimport { validateTokenFormat } from './queryClient';\r\n\r\nexport const TOKEN_STORAGE_KEYS = {\r\n  ACCESS_TOKEN: 'accessToken',\r\n  REFRESH_TOKEN: 'refreshToken',\r\n} as const;\r\n\r\n// Token metadata for tracking expiration\r\ninterface TokenMetadata {\r\n  expiresAt: number;\r\n  issuedAt: number;\r\n  lastChecked: number;\r\n}\r\n\r\nconst TOKEN_METADATA_KEY = 'tokenMetadata';\r\n\r\n/**\r\n * Store access token in localStorage with metadata\r\n */\r\nexport const setAccessToken = (token: string): void => {\r\n  try {\r\n    localStorage.setItem(TOKEN_STORAGE_KEYS.ACCESS_TOKEN, token);\r\n    // Store metadata for expiration tracking\r\n    const metadata: TokenMetadata = {\r\n      expiresAt: Date.now() + (14 * 60 * 1000), // Assume 14 minutes expiry\r\n      issuedAt: Date.now(),\r\n      lastChecked: Date.now(),\r\n    };\r\n    localStorage.setItem(TOKEN_METADATA_KEY, JSON.stringify(metadata));\r\n    logInfo('Access token stored successfully');\r\n  } catch (error) {\r\n    logError('Failed to store access token', error);\r\n    throw new Error('Failed to store authentication token');\r\n  }\r\n};\r\n\r\n/**\r\n * Store refresh token in localStorage\r\n */\r\nexport const setRefreshToken = (token: string): void => {\r\n  try {\r\n    localStorage.setItem(TOKEN_STORAGE_KEYS.REFRESH_TOKEN, token);\r\n    logInfo('Refresh token stored successfully');\r\n  } catch (error) {\r\n    logError('Failed to store refresh token', error);\r\n    throw new Error('Failed to store refresh token');\r\n  }\r\n};\r\n\r\n/**\r\n * Get access token from localStorage\r\n */\r\nexport const getAccessToken = (): string | null => {\r\n  try {\r\n    return localStorage.getItem(TOKEN_STORAGE_KEYS.ACCESS_TOKEN);\r\n  } catch (error) {\r\n    logError('Failed to retrieve access token', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Get refresh token from localStorage\r\n */\r\nexport const getRefreshToken = (): string | null => {\r\n  try {\r\n    return localStorage.getItem(TOKEN_STORAGE_KEYS.REFRESH_TOKEN);\r\n  } catch (error) {\r\n    logError('Failed to retrieve refresh token', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Remove both access and refresh tokens from localStorage\r\n */\r\nexport const clearTokens = (): void => {\r\n  try {\r\n    localStorage.removeItem(TOKEN_STORAGE_KEYS.ACCESS_TOKEN);\r\n    localStorage.removeItem(TOKEN_STORAGE_KEYS.REFRESH_TOKEN);\r\n    localStorage.removeItem(TOKEN_METADATA_KEY);\r\n    logInfo('All tokens cleared successfully');\r\n  } catch (error) {\r\n    logError('Failed to clear tokens', error);\r\n    throw new Error('Failed to clear authentication tokens');\r\n  }\r\n};\r\n\r\n/**\r\n * Check if user has valid access token\r\n */\r\nexport const hasValidAccessToken = (): boolean => {\r\n  console.log('[TOKEN DEBUG] Checking if user has valid access token');\r\n\r\n  const token = getAccessToken();\r\n  console.log('[TOKEN DEBUG] Retrieved access token:', token ? 'Token exists' : 'No token');\r\n\r\n  if (!token) {\r\n    console.log('[TOKEN DEBUG] No access token found');\r\n    return false;\r\n  }\r\n\r\n  // Check if token is expired\r\n  const isExpired = isTokenExpired();\r\n  console.log('[TOKEN DEBUG] Token expired check:', isExpired);\r\n\r\n  if (isExpired) {\r\n    console.log('[TOKEN DEBUG] Access token is expired');\r\n    logWarning('Access token is expired');\r\n    return false;\r\n  }\r\n\r\n  console.log('[TOKEN DEBUG] Access token is valid');\r\n  return true;\r\n};\r\n\r\n/**\r\n * Check if user has refresh token\r\n */\r\nexport const hasRefreshToken = (): boolean => {\r\n  return !!getRefreshToken();\r\n};\r\n\r\n/**\r\n * Update tokens from login/register response\r\n */\r\nexport const updateTokensFromResponse = (responseData: any): void => {\r\n  try {\r\n    console.log('[TOKEN DEBUG] Updating tokens from response:', {\r\n      hasTokens: !!responseData.tokens,\r\n      hasToken: !!responseData.token,\r\n      responseKeys: Object.keys(responseData)\r\n    });\r\n\r\n    if (responseData.tokens && responseData.tokens.accessToken && responseData.tokens.refreshToken) {\r\n      console.log('[TOKEN DEBUG] Storing new format tokens - access token length:', responseData.tokens.accessToken.length);\r\n      setAccessToken(responseData.tokens.accessToken);\r\n      setRefreshToken(responseData.tokens.refreshToken);\r\n      logInfo('Tokens updated from response with new format');\r\n    } else if (responseData.token) {\r\n      console.log('[TOKEN DEBUG] Storing old format token - token length:', responseData.token.length);\r\n      // Fallback for old format\r\n      setAccessToken(responseData.token);\r\n      logInfo('Token updated from response with old format');\r\n    } else {\r\n      console.log('[TOKEN DEBUG] No valid tokens found in response');\r\n      logWarning('No valid tokens found in response data');\r\n      throw new Error('No valid tokens received from server');\r\n    }\r\n  } catch (error) {\r\n    console.log('[TOKEN DEBUG] Failed to update tokens from response:', error);\r\n    logError('Failed to update tokens from response', error);\r\n    throw new Error('Failed to store authentication tokens');\r\n  }\r\n};\r\n\r\n/**\r\n * Decode JWT token to extract payload\r\n */\r\nconst decodeJWT = (token: string): any => {\r\n  try {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n        .join('')\r\n    );\r\n    return JSON.parse(jsonPayload);\r\n  } catch (error) {\r\n    logError('Failed to decode JWT token', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Check if token is expired based on JWT payload\r\n */\r\nexport const isTokenExpired = (token?: string): boolean => {\r\n  try {\r\n    const targetToken = token || getAccessToken();\r\n    if (!targetToken) return true;\r\n\r\n    const payload = decodeJWT(targetToken);\r\n    if (!payload || !payload.exp) {\r\n      logWarning('Token payload missing expiration information');\r\n      return true;\r\n    }\r\n\r\n    const currentTime = Math.floor(Date.now() / 1000);\r\n    const isExpired = payload.exp < currentTime;\r\n    \r\n    if (isExpired) {\r\n      logWarning(`Token expired at ${new Date(payload.exp * 1000).toISOString()}`);\r\n    }\r\n    \r\n    return isExpired;\r\n  } catch (error) {\r\n    logError('Failed to check token expiration', error);\r\n    // If we can't check expiration, assume it's expired for safety\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n * Get token metadata for tracking\r\n */\r\nexport const getTokenMetadata = (): TokenMetadata | null => {\r\n  try {\r\n    const metadataStr = localStorage.getItem(TOKEN_METADATA_KEY);\r\n    if (!metadataStr) return null;\r\n    \r\n    const metadata = JSON.parse(metadataStr);\r\n    // Update last checked time\r\n    metadata.lastChecked = Date.now();\r\n    localStorage.setItem(TOKEN_METADATA_KEY, JSON.stringify(metadata));\r\n    \r\n    return metadata;\r\n  } catch (error) {\r\n    logError('Failed to retrieve token metadata', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Check if token is about to expire (within buffer time)\r\n */\r\nexport const isTokenExpiringSoon = (bufferMinutes: number = 5): boolean => {\r\n  try {\r\n    const token = getAccessToken();\r\n    if (!token) return true;\r\n\r\n    const payload = decodeJWT(token);\r\n    if (!payload || !payload.exp) return true;\r\n\r\n    const currentTime = Math.floor(Date.now() / 1000);\r\n    const bufferSeconds = bufferMinutes * 60;\r\n    const expiringSoon = payload.exp < (currentTime + bufferSeconds);\r\n    \r\n    if (expiringSoon) {\r\n      logWarning(`Token expiring soon at ${new Date(payload.exp * 1000).toISOString()}`);\r\n    }\r\n    \r\n    return expiringSoon;\r\n  } catch (error) {\r\n    logError('Failed to check if token is expiring soon', error);\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n * Validate token before including in requests\r\n */\r\nexport const validateTokenForRequest = (): boolean => {\r\n  console.log('[TOKEN DEBUG] Starting token validation for request');\r\n\r\n  if (!hasValidAccessToken()) {\r\n    console.log('[TOKEN DEBUG] hasValidAccessToken() returned false');\r\n    logWarning('Invalid access token for request');\r\n    return false;\r\n  }\r\n\r\n  // Enhanced validation with browser-compatible checks\r\n  const token = getAccessToken();\r\n  console.log('[TOKEN DEBUG] Retrieved token from storage:', token ? 'Token exists' : 'No token');\r\n\r\n  if (!token) {\r\n    console.log('[TOKEN DEBUG] No token found in storage');\r\n    return false;\r\n  }\r\n\r\n  // Check if token is revoked\r\n  if (isTokenRevoked(token)) {\r\n    console.log('[TOKEN DEBUG] Token is revoked');\r\n    logWarning('Token has been revoked');\r\n    return false;\r\n  }\r\n\r\n  // Validate token structure (signature verification handled server-side)\r\n  const secret = process.env.JWT_SECRET || 'fallback-secret-key';\r\n  console.log('[TOKEN DEBUG] Checking token signature with secret length:', secret.length);\r\n\r\n  if (!verifyTokenSignature(token, secret)) {\r\n    console.log('[TOKEN DEBUG] Token signature validation failed');\r\n    logWarning('Token structure validation failed');\r\n    return false;\r\n  }\r\n\r\n  // Validate secure storage\r\n  console.log('[TOKEN DEBUG] Checking secure storage validation');\r\n  if (!validateSecureStorage()) {\r\n    console.log('[TOKEN DEBUG] Secure storage validation failed');\r\n    logWarning('Secure storage validation failed');\r\n    return false;\r\n  }\r\n\r\n  console.log('[TOKEN DEBUG] Token validation passed successfully');\r\n  return true;\r\n};\r\n\r\n/**\r\n * Cleanup expired tokens automatically\r\n */\r\nexport const cleanupExpiredTokens = (): void => {\r\n  try {\r\n    const accessToken = getAccessToken();\r\n    const refreshToken = getRefreshToken();\r\n    \r\n    let cleaned = false;\r\n    \r\n    if (accessToken && isTokenExpired(accessToken)) {\r\n      logInfo('Cleaning up expired access token');\r\n      localStorage.removeItem(TOKEN_STORAGE_KEYS.ACCESS_TOKEN);\r\n      localStorage.removeItem(TOKEN_METADATA_KEY);\r\n      cleaned = true;\r\n    }\r\n    \r\n    if (refreshToken && isTokenExpired(refreshToken)) {\r\n      logInfo('Cleaning up expired refresh token');\r\n      localStorage.removeItem(TOKEN_STORAGE_KEYS.REFRESH_TOKEN);\r\n      cleaned = true;\r\n    }\r\n    \r\n    if (cleaned) {\r\n      logInfo('Expired tokens cleaned up successfully');\r\n    }\r\n  } catch (error) {\r\n    logError('Failed to cleanup expired tokens', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Get remaining time until token expires (in milliseconds)\r\n */\r\nexport const getTokenTimeRemaining = (): number => {\r\n  try {\r\n    const token = getAccessToken();\r\n    if (!token) return 0;\r\n\r\n    const payload = decodeJWT(token);\r\n    if (!payload || !payload.exp) return 0;\r\n\r\n    const currentTime = Math.floor(Date.now() / 1000);\r\n    return Math.max(0, (payload.exp - currentTime) * 1000);\r\n  } catch (error) {\r\n    logError('Failed to get token time remaining', error);\r\n    return 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Force cleanup of all authentication data\r\n */\r\nexport const cleanupAllAuthData = (): void => {\r\n  try {\r\n    clearTokens();\r\n    // Clear any other auth-related data\r\n    localStorage.removeItem('authState');\r\n    localStorage.removeItem('userPreferences');\r\n    logInfo('All authentication data cleaned up successfully');\r\n  } catch (error) {\r\n    logError('Failed to cleanup all auth data', error);\r\n    throw new Error('Failed to cleanup authentication data');\r\n  }\r\n};\r\n\r\n/**\r\n * Verify token signature using browser-compatible validation\r\n * Note: Full cryptographic verification should only be done server-side\r\n */\r\nexport const verifyTokenSignature = (token: string, secret: string): boolean => {\r\n  try {\r\n    // Browser-compatible validation - only check basic structure\r\n    // Full signature verification should be handled server-side\r\n    if (!token || typeof token !== 'string') {\r\n      logWarning('Token is not a valid string');\r\n      return false;\r\n    }\r\n\r\n    // Check if token has proper JWT structure (header.payload.signature)\r\n    const parts = token.split('.');\r\n    if (parts.length !== 3) {\r\n      logWarning('Token does not have proper JWT structure');\r\n      return false;\r\n    }\r\n\r\n    // Validate each part is base64url encoded\r\n    for (const part of parts) {\r\n      if (!/^[A-Za-z0-9_-]*$/.test(part)) {\r\n        logWarning('Token contains invalid base64url characters');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Note: We skip actual cryptographic verification for security reasons\r\n    // The server should handle full JWT verification\r\n    logInfo('Token structure validation passed (signature verification skipped for browser compatibility)');\r\n    return true;\r\n  } catch (error) {\r\n    logError('Token signature validation failed', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Comprehensive token validation including format and structure\r\n */\r\nexport const validateTokenComprehensive = (token: string): { valid: boolean; errors: string[] } => {\r\n  const errors: string[] = [];\r\n\r\n  // Format validation\r\n  if (!validateTokenFormat(token)) {\r\n    errors.push('Token format validation failed');\r\n  }\r\n\r\n  // Structure validation (signature verification handled server-side)\r\n  const secret = process.env.JWT_SECRET || 'fallback-secret-key';\r\n  if (!verifyTokenSignature(token, secret)) {\r\n    errors.push('Token structure validation failed');\r\n  }\r\n\r\n  return {\r\n    valid: errors.length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n/**\r\n * Secure token storage validation with encryption check\r\n */\r\nexport const validateSecureStorage = (): boolean => {\r\n  try {\r\n    const accessToken = getAccessToken();\r\n    const refreshToken = getRefreshToken();\r\n    \r\n    // Check if tokens exist\r\n    if (!accessToken || !refreshToken) {\r\n      logWarning('Missing tokens in storage');\r\n      return false;\r\n    }\r\n    \r\n    // Validate token format\r\n    if (!validateTokenFormat(accessToken) || !validateTokenFormat(refreshToken)) {\r\n      logWarning('Invalid token format in storage');\r\n      return false;\r\n    }\r\n    \r\n    // Check if tokens are expired\r\n    if (isTokenExpired(accessToken) || isTokenExpired(refreshToken)) {\r\n      logWarning('Expired tokens found in storage');\r\n      return false;\r\n    }\r\n    \r\n    // Additional security checks\r\n    const tokenMetadata = getTokenMetadata();\r\n    if (!tokenMetadata) {\r\n      logWarning('Missing token metadata');\r\n      return false;\r\n    }\r\n    \r\n    // Check if token metadata is consistent with token\r\n    const now = Date.now();\r\n    if (tokenMetadata.expiresAt < now) {\r\n      logWarning('Token metadata indicates expired token');\r\n      return false;\r\n    }\r\n    \r\n    logInfo('Token storage validation passed');\r\n    return true;\r\n  } catch (error) {\r\n    logError('Token storage validation failed', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Enhanced token revocation checking mechanism\r\n */\r\nexport const isTokenRevoked = (token: string): boolean => {\r\n  try {\r\n    // In a real implementation, this would check against a revocation list\r\n    // For now, we'll check if the token is expired or has invalid format\r\n    \r\n    if (!validateTokenFormat(token)) {\r\n      return true;\r\n    }\r\n    \r\n    if (isTokenExpired(token)) {\r\n      return true;\r\n    }\r\n    \r\n    // Additional revocation checks could be added here\r\n    // For example, checking against a database of revoked tokens\r\n    \r\n    return false;\r\n  } catch (error) {\r\n    logError('Token revocation check failed', error);\r\n    return true; // Assume revoked if we can't verify\r\n  }\r\n};","import { QueryClient, QueryFunction, QueryFunctionContext } from \"@tanstack/react-query\";\nimport {\n  getAccessToken,\n  getRefreshToken,\n  setAccessToken,\n  clearTokens,\n  isTokenExpired,\n  isTokenExpiringSoon,\n  validateTokenForRequest,\n  cleanupExpiredTokens\n} from './tokenManager';\nimport { CONFIG, logError, logInfo, logWarning } from './config';\n\n// Utility function to validate URL for HTTPS enforcement\nexport const validateHttpsUrl = (url: string): boolean => {\n  // Allow HTTP in development environment for local development\n  if (!CONFIG.security.enforceHTTPS) {\n    logInfo('HTTPS enforcement disabled - allowing HTTP URLs for development');\n    return true;\n  }\n\n  try {\n    const parsedUrl = new URL(url);\n    const isHttps = parsedUrl.protocol === 'https:';\n\n    if (!isHttps) {\n      logWarning(`HTTPS required but HTTP URL detected: ${url}`);\n    }\n\n    return isHttps;\n  } catch (error) {\n    logError('Invalid URL format for HTTPS validation', error);\n    return false;\n  }\n};\n\n// Utility function to add security headers to fetch requests\nexport const addSecurityHeaders = (headers: Record<string, string> = {}): Record<string, string> => {\n  const securityHeaders = CONFIG.security.headers;\n  \n  Object.entries(securityHeaders).forEach(([key, value]) => {\n    headers[key] = value;\n  });\n  \n  return headers;\n};\n\n// Utility function to add Authorization header to fetch requests\nexport const addAuthHeader = (headers: Record<string, string> = {}): Record<string, string> => {\n  const token = getAccessToken();\n\n  console.log('[DEBUG] Retrieved token:', token ? 'Token exists' : 'No token');\n\n  // Simplified validation: only check if token exists and is not expired\n  if (token && !isTokenExpired(token)) {\n    console.log('[DEBUG] Adding authorization header with token');\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    console.log('[DEBUG] Not adding authorization header:', token ? 'Token expired' : 'No token');\n    if (token) {\n      // Token exists but is expired, attempt cleanup\n      logWarning('Expired token detected, attempting cleanup');\n      try {\n        cleanupExpiredTokens();\n      } catch (cleanupError) {\n        logError('Failed to cleanup expired token', cleanupError);\n      }\n    }\n  }\n\n  return headers;\n};\n\n// Enhanced token validation with format checks\nexport const validateTokenFormat = (token: string): boolean => {\n  console.log('[TOKEN DEBUG] Starting token format validation');\n\n  if (!token) {\n    console.log('[TOKEN DEBUG] Token is null or empty');\n    return false;\n  }\n\n  console.log('[TOKEN DEBUG] Token length:', token.length);\n\n  const config = CONFIG.security.tokenValidation;\n\n  // Check length requirements\n  if (token.length < config.minLength || token.length > config.maxLength) {\n    console.log(`[TOKEN DEBUG] Token length validation failed: ${token.length} characters (min: ${config.minLength}, max: ${config.maxLength})`);\n    logWarning(`Token length validation failed: ${token.length} characters`);\n    return false;\n  }\n\n  // Check for Bearer prefix if required\n  if (config.requireBearerPrefix && !token.startsWith('Bearer ')) {\n    console.log('[TOKEN DEBUG] Token missing required Bearer prefix');\n    logWarning('Token missing required Bearer prefix');\n    return false;\n  }\n\n  // Basic JWT structure validation\n  const parts = token.split('.');\n  console.log('[TOKEN DEBUG] Token parts after split:', parts.length);\n\n  if (parts.length !== 3) {\n    console.log('[TOKEN DEBUG] Invalid JWT structure - not 3 parts');\n    logWarning('Invalid JWT token structure');\n    return false;\n  }\n\n  // Check header and payload are valid base64\n  try {\n    console.log('[TOKEN DEBUG] Attempting to parse JWT header and payload');\n    const header = JSON.parse(atob(parts[0]));\n    const payload = JSON.parse(atob(parts[1]));\n\n    console.log('[TOKEN DEBUG] JWT header:', header);\n    console.log('[TOKEN DEBUG] JWT payload exp:', payload.exp, 'iat:', payload.iat);\n\n    // Check required JWT claims\n    if (!header.typ || header.typ !== 'JWT') {\n      console.log('[TOKEN DEBUG] Invalid JWT header type:', header.typ);\n      logWarning('Invalid JWT header type');\n      return false;\n    }\n\n    if (!payload.exp || !payload.iat) {\n      console.log('[TOKEN DEBUG] JWT missing required claims - exp:', payload.exp, 'iat:', payload.iat);\n      logWarning('JWT missing required expiration or issued at claims');\n      return false;\n    }\n\n    // Check token age\n    const now = Math.floor(Date.now() / 1000);\n    const tokenAge = now - payload.iat;\n    console.log('[TOKEN DEBUG] Token age:', tokenAge, 'seconds, max allowed:', config.maxTokenAge / 1000);\n\n    if (tokenAge > config.maxTokenAge / 1000) {\n      console.log('[TOKEN DEBUG] Token too old');\n      logWarning(`Token too old: ${tokenAge} seconds`);\n      return false;\n    }\n\n  } catch (error) {\n    console.log('[TOKEN DEBUG] JWT parsing failed:', error);\n    logWarning('JWT token parsing failed', error);\n    return false;\n  }\n\n  console.log('[TOKEN DEBUG] Token format validation passed');\n  return true;\n};\n\n// Enhanced constants for token refresh handling\nconst MAX_REFRESH_ATTEMPTS = 3;\nconst BASE_RETRY_DELAY = 1000; // 1 second base delay\nconst MAX_RETRY_DELAY = 10000; // 10 seconds max delay\nconst JITTER_FACTOR = 0.1; // 10% jitter to prevent thundering herd\n\n// Track refresh attempts to prevent infinite loops\nlet refreshAttemptCount = 0;\nlet isRefreshing = false;\nlet lastRefreshTime = 0;\nconst MIN_REFRESH_INTERVAL = 5000; // 5 seconds minimum between refresh attempts\n\n// Helper function to refresh access token with retry logic\nexport const refreshAccessToken = async (): Promise<string | null> => {\n  const refreshToken = getRefreshToken();\n  \n  if (!refreshToken) {\n    logError('Token refresh failed: No refresh token available');\n    return null;\n  }\n  \n  try {\n    logInfo('Attempting to refresh access token');\n    \n    const res = await fetch('/api/auth/refresh', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ refreshToken }),\n    });\n    \n    if (!res.ok) {\n      const errorData = await res.json().catch(() => ({}));\n      const errorMessage = errorData.message || 'Failed to refresh token';\n      logError(`Token refresh failed: ${errorMessage}`, { status: res.status });\n      throw new Error(errorMessage);\n    }\n    \n    const data = await res.json();\n    setAccessToken(data.accessToken);\n    refreshAttemptCount = 0; // Reset counter on successful refresh\n    logInfo('Access token refreshed successfully');\n    return data.accessToken;\n  } catch (error) {\n    // If refresh fails, clear tokens and log the error\n    clearTokens();\n    refreshAttemptCount = 0; // Reset counter on failure\n    logError('Token refresh failed, clearing tokens', error);\n    throw error;\n  }\n};\n\n// Calculate exponential backoff delay with jitter\nconst calculateBackoffDelay = (attemptNumber: number): number => {\n  const exponentialDelay = BASE_RETRY_DELAY * Math.pow(2, attemptNumber - 1);\n  const jitter = exponentialDelay * JITTER_FACTOR * Math.random();\n  return Math.min(exponentialDelay + jitter, MAX_RETRY_DELAY);\n};\n\n// Enhanced helper function to handle token refresh with retry limit and backoff\nexport const performTokenRefresh = async (): Promise<string | null> => {\n  const now = Date.now();\n\n  // Prevent too frequent refresh attempts\n  if (now - lastRefreshTime < MIN_REFRESH_INTERVAL) {\n    const waitTime = MIN_REFRESH_INTERVAL - (now - lastRefreshTime);\n    logInfo(`Waiting ${waitTime}ms before next refresh attempt`);\n    await new Promise(resolve => setTimeout(resolve, waitTime));\n  }\n\n  if (isRefreshing) {\n    logInfo('Token refresh already in progress, waiting...');\n    // Wait for current refresh to complete with backoff\n    const waitDelay = calculateBackoffDelay(refreshAttemptCount);\n    await new Promise(resolve => setTimeout(resolve, waitDelay));\n    return getAccessToken();\n  }\n\n  if (refreshAttemptCount >= MAX_REFRESH_ATTEMPTS) {\n    logError(`Maximum refresh attempts (${MAX_REFRESH_ATTEMPTS}) exceeded`);\n    throw new Error('Maximum refresh attempts exceeded');\n  }\n\n  isRefreshing = true;\n  refreshAttemptCount++;\n  lastRefreshTime = now;\n\n  try {\n    const newToken = await refreshAccessToken();\n    // Reset counter on successful refresh\n    refreshAttemptCount = 0;\n    return newToken;\n  } catch (error) {\n    // Add exponential backoff delay before next attempt\n    const backoffDelay = calculateBackoffDelay(refreshAttemptCount);\n    logWarning(`Token refresh failed, waiting ${backoffDelay}ms before retry`, error);\n    await new Promise(resolve => setTimeout(resolve, backoffDelay));\n    throw error;\n  } finally {\n    isRefreshing = false;\n  }\n};\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  // Cleanup expired tokens before making request\n  try {\n    cleanupExpiredTokens();\n  } catch (cleanupError) {\n    logError('Failed to cleanup expired tokens before request', cleanupError);\n  }\n\n  // HTTPS enforcement check\n  if (!validateHttpsUrl(url)) {\n    throw new Error('HTTPS is required for all API requests. Please use a secure connection.');\n  }\n\n  // Get token from token manager\n  const token = getAccessToken();\n\n  // Check if token exists for protected routes\n  if (!token && !url.includes('/auth/login') && !url.includes('/auth/register') && !url.includes('/auth/refresh')) {\n    throw new Error('Authentication required. Please log in to continue.');\n  }\n\n  const headers: Record<string, string> = {};\n\n  // Add security headers\n  addSecurityHeaders(headers);\n\n  // Add content-type for requests with data\n  if (data) {\n    headers[\"Content-Type\"] = \"application/json\";\n  }\n\n  // Add authorization header if token exists and is valid\n  if (token) {\n    // Enhanced token format validation\n    if (!validateTokenFormat(token)) {\n      logWarning('Token format validation failed, attempting cleanup');\n      try {\n        cleanupExpiredTokens();\n      } catch (cleanupError) {\n        logError('Failed to cleanup invalid token', cleanupError);\n      }\n      throw new Error('Authentication token format is invalid. Please log in again.');\n    }\n\n    // Add retry logic for token validation\n    let retryCount = 0;\n    const maxRetries = 1;\n    let tokenValid = false;\n    while (retryCount <= maxRetries && !tokenValid) {\n      if (validateTokenForRequest()) {\n        tokenValid = true;\n      } else if (retryCount < maxRetries) {\n        await new Promise(resolve => setTimeout(resolve, 100));\n        retryCount++;\n      }\n    }\n\n    if (tokenValid) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n      // Token is invalid after retry, throw error\n      throw new Error('Authentication token is invalid. Please log in again.');\n    }\n  }\n\n  let res = await fetch(url, {\n    method,\n    headers,\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  // Enhanced 401 error handling with better error categorization\n  if (res.status === 401 && !url.includes('/auth/refresh')) {\n    logInfo(`Received 401 error for ${method} ${url}, attempting token refresh`);\n\n    try {\n      const newToken = await performTokenRefresh();\n      if (newToken) {\n        // Retry the original request with the new token\n        const retryHeaders = { ...headers };\n        retryHeaders[\"Authorization\"] = `Bearer ${newToken}`;\n\n        logInfo(`Retrying ${method} ${url} with new token`);\n        res = await fetch(url, {\n          method,\n          headers: retryHeaders,\n          body: data ? JSON.stringify(data) : undefined,\n          credentials: \"include\",\n        });\n\n        // If retry still fails with 401, it means the refresh token is also expired\n        if (res.status === 401) {\n          logError('Token refresh succeeded but retry still failed with 401 - session likely expired');\n          clearTokens(); // Clear invalid tokens\n          throw new Error('Session expired. Please log in again.');\n        }\n\n        // Handle other retry errors (network issues, server errors)\n        if (!res.ok) {\n          const errorText = await res.text().catch(() => 'Unknown error');\n          logError(`Retry failed with status ${res.status} for ${method} ${url}: ${errorText}`);\n          throw new Error(`Request failed after token refresh: ${res.status} ${res.statusText}`);\n        }\n\n        logInfo(`Retry successful for ${method} ${url}`);\n        await throwIfResNotOk(res);\n        return res;\n      }\n    } catch (refreshError) {\n      // Categorize refresh errors\n      if (refreshError instanceof Error) {\n        if (refreshError.message.includes('Maximum refresh attempts exceeded')) {\n          logError(`Token refresh failed for ${method} ${url}: Max attempts exceeded`);\n          clearTokens();\n          throw new Error('Session expired. Please log in again.');\n        } else if (refreshError.message.includes('Network') || refreshError.message.includes('fetch')) {\n          logError(`Token refresh failed for ${method} ${url}: Network error`, refreshError);\n          throw new Error('Network error during authentication. Please check your connection and try again.');\n        } else {\n          logError(`Token refresh failed for ${method} ${url}: ${refreshError.message}`, refreshError);\n          clearTokens();\n          throw new Error('Session expired. Please log in again.');\n        }\n      } else {\n        logError(`Token refresh failed for ${method} ${url}: Unknown error`, refreshError);\n        clearTokens();\n        throw new Error('Session expired. Please log in again.');\n      }\n    }\n  }\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async (context: QueryFunctionContext) => {\n    const { queryKey } = context;\n\n    // Cleanup expired tokens before making query\n    try {\n      cleanupExpiredTokens();\n    } catch (cleanupError) {\n      logError('Failed to cleanup expired tokens before query', cleanupError);\n    }\n\n    // HTTPS enforcement check for queries\n    if (typeof queryKey[0] === 'string' && !validateHttpsUrl(queryKey[0])) {\n      if (unauthorizedBehavior === \"returnNull\") {\n        return null;\n      }\n      throw new Error('HTTPS is required for all API requests. Please use a secure connection.');\n    }\n\n    // Get token from token manager\n    const token = getAccessToken();\n\n    const headers: Record<string, string> = {};\n\n    // Add security headers for queries\n    addSecurityHeaders(headers);\n\n    // Add authorization header if token exists and is valid\n    if (token) {\n      // Enhanced token format validation for queries\n      if (!validateTokenFormat(token)) {\n        logWarning('Token format validation failed for query, attempting cleanup');\n        try {\n          cleanupExpiredTokens();\n        } catch (cleanupError) {\n          logError('Failed to cleanup invalid token for query', cleanupError);\n        }\n        if (unauthorizedBehavior === \"returnNull\") {\n          return null;\n        }\n        throw new Error('Authentication token format is invalid. Please log in again.');\n      }\n\n      if (validateTokenForRequest()) {\n        headers[\"Authorization\"] = `Bearer ${token}`;\n      } else {\n        // Token is invalid, handle according to unauthorizedBehavior\n        if (unauthorizedBehavior === \"returnNull\") {\n          return null;\n        }\n        throw new Error('Authentication token is invalid. Please log in again.');\n      }\n    }\n\n    let res = await fetch(queryKey[0] as string, {\n      headers,\n      credentials: \"include\",\n    });\n\n    // Enhanced 401 error handling for queries with better error categorization\n    if (res.status === 401 && typeof queryKey[0] === 'string' && !queryKey[0].includes('/auth/refresh')) {\n      logInfo(`Received 401 error for query ${queryKey[0]}, attempting token refresh`);\n\n      try {\n        const newToken = await performTokenRefresh();\n        if (newToken) {\n          // Retry the original query with the new token\n          const retryHeaders = { ...headers };\n          retryHeaders[\"Authorization\"] = `Bearer ${newToken}`;\n\n          logInfo(`Retrying query ${queryKey[0]} with new token`);\n          res = await fetch(queryKey[0] as string, {\n            headers: retryHeaders,\n            credentials: \"include\",\n          });\n\n          // If retry still fails with 401, it means the refresh token is also expired\n          if (res.status === 401) {\n            logError(`Token refresh succeeded but query retry still failed with 401 for ${queryKey[0]}`);\n            clearTokens(); // Clear invalid tokens\n            if (unauthorizedBehavior === \"returnNull\") {\n              return null;\n            }\n            throw new Error('Session expired. Please log in again.');\n          }\n\n          // Handle other retry errors (network issues, server errors)\n          if (!res.ok) {\n            const errorText = await res.text().catch(() => 'Unknown error');\n            logError(`Query retry failed with status ${res.status} for ${queryKey[0]}: ${errorText}`);\n            if (unauthorizedBehavior === \"returnNull\") {\n              return null;\n            }\n            throw new Error(`Query failed after token refresh: ${res.status} ${res.statusText}`);\n          }\n        }\n      } catch (refreshError) {\n        // Categorize refresh errors for queries\n        if (refreshError instanceof Error) {\n          if (refreshError.message.includes('Maximum refresh attempts exceeded')) {\n            logError(`Token refresh failed for query ${queryKey[0]}: Max attempts exceeded`);\n            clearTokens();\n            if (unauthorizedBehavior === \"returnNull\") {\n              return null;\n            }\n            throw new Error('Session expired. Please log in again.');\n          } else if (refreshError.message.includes('Network') || refreshError.message.includes('fetch')) {\n            logError(`Token refresh failed for query ${queryKey[0]}: Network error`, refreshError);\n            if (unauthorizedBehavior === \"returnNull\") {\n              return null;\n            }\n            throw new Error('Network error during authentication. Please check your connection and try again.');\n          } else {\n            logError(`Token refresh failed for query ${queryKey[0]}: ${refreshError.message}`, refreshError);\n            clearTokens();\n            if (unauthorizedBehavior === \"returnNull\") {\n              return null;\n            }\n            throw new Error('Session expired. Please log in again.');\n          }\n        } else {\n          logError(`Token refresh failed for query ${queryKey[0]}: Unknown error`, refreshError);\n          clearTokens();\n          if (unauthorizedBehavior === \"returnNull\") {\n            return null;\n          }\n          throw new Error('Session expired. Please log in again.');\n        }\n      }\n    }\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"returnNull\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","// Comprehensive error handling for authentication failures\r\n\r\nimport { logError, logInfo, logWarning } from './config';\r\n\r\n// Authentication error types\r\nexport enum AuthErrorType {\r\n  INVALID_CREDENTIALS = 'INVALID_CREDENTIALS',\r\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\r\n  TOKEN_INVALID = 'TOKEN_INVALID',\r\n  NETWORK_ERROR = 'NETWORK_ERROR',\r\n  RATE_LIMITED = 'RATE_LIMITED',\r\n  ACCOUNT_LOCKED = 'ACCOUNT_LOCKED',\r\n  ACCOUNT_SUSPENDED = 'ACCOUNT_SUSPENDED',\r\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\r\n  REFRESH_TOKEN_FAILED = 'REFRESH_TOKEN_FAILED',\r\n  TOKEN_REVOKED = 'TOKEN_REVOKED',\r\n  SECURITY_VIOLATION = 'SECURITY_VIOLATION',\r\n  SERVER_ERROR = 'SERVER_ERROR',\r\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\r\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\r\n  PERMISSION_DENIED = 'PERMISSION_DENIED'\r\n}\r\n\r\n// Error severity levels\r\nexport enum ErrorSeverity {\r\n  LOW = 'LOW',\r\n  MEDIUM = 'MEDIUM',\r\n  HIGH = 'HIGH',\r\n  CRITICAL = 'CRITICAL'\r\n}\r\n\r\n// Error recovery strategies\r\nexport enum RecoveryStrategy {\r\n  NONE = 'NONE',\r\n  RETRY = 'RETRY',\r\n  REFRESH_TOKEN = 'REFRESH_TOKEN',\r\n  RELOGIN = 'RELOGIN',\r\n  CONTACT_SUPPORT = 'CONTACT_SUPPORT',\r\n  CLEAR_CACHE = 'CLEAR_CACHE'\r\n}\r\n\r\n// Authentication error interface\r\nexport interface AuthError {\r\n  type: AuthErrorType;\r\n  message: string;\r\n  userMessage: string;\r\n  severity: ErrorSeverity;\r\n  recovery: RecoveryStrategy;\r\n  timestamp: Date;\r\n  code?: string;\r\n  details?: any;\r\n  retryable?: boolean;\r\n  retryCount?: number;\r\n  retryDelay?: number;\r\n}\r\n\r\n// Error analytics interface\r\nexport interface ErrorAnalytics {\r\n  errorType: AuthErrorType;\r\n  frequency: number;\r\n  lastOccurrence: Date;\r\n  affectedUsers: string[];\r\n  commonPatterns?: string[];\r\n}\r\n\r\n// Error tracking state\r\ninterface ErrorState {\r\n  errors: Map<string, AuthError>;\r\n  analytics: Map<AuthErrorType, ErrorAnalytics>;\r\n  recoveryAttempts: Map<string, number>;\r\n}\r\n\r\n// Global error state\r\nconst errorState: ErrorState = {\r\n  errors: new Map(),\r\n  analytics: new Map(),\r\n  recoveryAttempts: new Map()\r\n};\r\n\r\n// Error configuration\r\ninterface ErrorConfig {\r\n  maxRetries: number;\r\n  retryDelay: number;\r\n  retryBackoff: number;\r\n  enableAnalytics: boolean;\r\n  enableLogging: boolean;\r\n  enableRecovery: boolean;\r\n}\r\n\r\nconst defaultConfig: ErrorConfig = {\r\n  maxRetries: 3,\r\n  retryDelay: 1000,\r\n  retryBackoff: 2,\r\n  enableAnalytics: true,\r\n  enableLogging: true,\r\n  enableRecovery: true\r\n};\r\n\r\nlet config: ErrorConfig = { ...defaultConfig };\r\n\r\n/**\r\n * Create a standardized authentication error\r\n */\r\nexport function createAuthError(\r\n  type: AuthErrorType,\r\n  message: string,\r\n  options: Partial<AuthError> = {}\r\n): AuthError {\r\n  const error: AuthError = {\r\n    type,\r\n    message,\r\n    userMessage: getUserMessage(type, options.userMessage),\r\n    severity: getErrorSeverity(type),\r\n    recovery: getRecoveryStrategy(type),\r\n    timestamp: new Date(),\r\n    retryable: isRetryable(type),\r\n    retryCount: 0,\r\n    retryDelay: config.retryDelay,\r\n    ...options\r\n  };\r\n\r\n  // Update error state\r\n  if (config.enableAnalytics) {\r\n    updateErrorAnalytics(error);\r\n  }\r\n\r\n  // Log the error\r\n  if (config.enableLogging) {\r\n    logAuthError(error);\r\n  }\r\n\r\n  return error;\r\n}\r\n\r\n/**\r\n * Get user-friendly error message\r\n */\r\nfunction getUserMessage(type: AuthErrorType, customMessage?: string): string {\r\n  if (customMessage) return customMessage;\r\n\r\n  const messages: Record<AuthErrorType, string> = {\r\n    [AuthErrorType.INVALID_CREDENTIALS]: 'Invalid username or password. Please check your credentials and try again.',\r\n    [AuthErrorType.TOKEN_EXPIRED]: 'Your session has expired. Please log in again.',\r\n    [AuthErrorType.TOKEN_INVALID]: 'Invalid authentication token. Please log in again.',\r\n    [AuthErrorType.NETWORK_ERROR]: 'Network connection error. Please check your internet connection and try again.',\r\n    [AuthErrorType.RATE_LIMITED]: 'Too many login attempts. Please wait a few minutes before trying again.',\r\n    [AuthErrorType.ACCOUNT_LOCKED]: 'Your account has been locked due to too many failed attempts. Please try again later or contact support.',\r\n    [AuthErrorType.ACCOUNT_SUSPENDED]: 'Your account has been suspended. Please contact support for assistance.',\r\n    [AuthErrorType.SESSION_EXPIRED]: 'Your session has expired. Please log in again to continue.',\r\n    [AuthErrorType.REFRESH_TOKEN_FAILED]: 'Failed to refresh your session. Please log in again.',\r\n    [AuthErrorType.TOKEN_REVOKED]: 'Your access has been revoked. Please log in again.',\r\n    [AuthErrorType.SECURITY_VIOLATION]: 'Security violation detected. Your session has been terminated for your protection.',\r\n    [AuthErrorType.SERVER_ERROR]: 'Server error occurred. Please try again later.',\r\n    [AuthErrorType.UNKNOWN_ERROR]: 'An unexpected error occurred. Please try again.',\r\n    [AuthErrorType.VALIDATION_ERROR]: 'Invalid input. Please check your information and try again.',\r\n    [AuthErrorType.PERMISSION_DENIED]: 'You do not have permission to perform this action.'\r\n  };\r\n\r\n  return messages[type] || 'An authentication error occurred. Please try again.';\r\n}\r\n\r\n/**\r\n * Get error severity based on type\r\n */\r\nfunction getErrorSeverity(type: AuthErrorType): ErrorSeverity {\r\n  const severityMap: Record<AuthErrorType, ErrorSeverity> = {\r\n    [AuthErrorType.INVALID_CREDENTIALS]: ErrorSeverity.MEDIUM,\r\n    [AuthErrorType.TOKEN_EXPIRED]: ErrorSeverity.MEDIUM,\r\n    [AuthErrorType.TOKEN_INVALID]: ErrorSeverity.HIGH,\r\n    [AuthErrorType.NETWORK_ERROR]: ErrorSeverity.LOW,\r\n    [AuthErrorType.RATE_LIMITED]: ErrorSeverity.MEDIUM,\r\n    [AuthErrorType.ACCOUNT_LOCKED]: ErrorSeverity.HIGH,\r\n    [AuthErrorType.ACCOUNT_SUSPENDED]: ErrorSeverity.CRITICAL,\r\n    [AuthErrorType.SESSION_EXPIRED]: ErrorSeverity.MEDIUM,\r\n    [AuthErrorType.REFRESH_TOKEN_FAILED]: ErrorSeverity.HIGH,\r\n    [AuthErrorType.TOKEN_REVOKED]: ErrorSeverity.HIGH,\r\n    [AuthErrorType.SECURITY_VIOLATION]: ErrorSeverity.CRITICAL,\r\n    [AuthErrorType.SERVER_ERROR]: ErrorSeverity.HIGH,\r\n    [AuthErrorType.UNKNOWN_ERROR]: ErrorSeverity.HIGH,\r\n    [AuthErrorType.VALIDATION_ERROR]: ErrorSeverity.LOW,\r\n    [AuthErrorType.PERMISSION_DENIED]: ErrorSeverity.MEDIUM\r\n  };\r\n\r\n  return severityMap[type] || ErrorSeverity.MEDIUM;\r\n}\r\n\r\n/**\r\n * Get recovery strategy based on error type\r\n */\r\nfunction getRecoveryStrategy(type: AuthErrorType): RecoveryStrategy {\r\n  const strategyMap: Record<AuthErrorType, RecoveryStrategy> = {\r\n    [AuthErrorType.INVALID_CREDENTIALS]: RecoveryStrategy.RELOGIN,\r\n    [AuthErrorType.TOKEN_EXPIRED]: RecoveryStrategy.REFRESH_TOKEN,\r\n    [AuthErrorType.TOKEN_INVALID]: RecoveryStrategy.RELOGIN,\r\n    [AuthErrorType.NETWORK_ERROR]: RecoveryStrategy.RETRY,\r\n    [AuthErrorType.RATE_LIMITED]: RecoveryStrategy.NONE,\r\n    [AuthErrorType.ACCOUNT_LOCKED]: RecoveryStrategy.CONTACT_SUPPORT,\r\n    [AuthErrorType.ACCOUNT_SUSPENDED]: RecoveryStrategy.CONTACT_SUPPORT,\r\n    [AuthErrorType.SESSION_EXPIRED]: RecoveryStrategy.RELOGIN,\r\n    [AuthErrorType.REFRESH_TOKEN_FAILED]: RecoveryStrategy.RELOGIN,\r\n    [AuthErrorType.TOKEN_REVOKED]: RecoveryStrategy.RELOGIN,\r\n    [AuthErrorType.SECURITY_VIOLATION]: RecoveryStrategy.CONTACT_SUPPORT,\r\n    [AuthErrorType.SERVER_ERROR]: RecoveryStrategy.RETRY,\r\n    [AuthErrorType.UNKNOWN_ERROR]: RecoveryStrategy.RETRY,\r\n    [AuthErrorType.VALIDATION_ERROR]: RecoveryStrategy.NONE,\r\n    [AuthErrorType.PERMISSION_DENIED]: RecoveryStrategy.NONE\r\n  };\r\n\r\n  return strategyMap[type] || RecoveryStrategy.NONE;\r\n}\r\n\r\n/**\r\n * Check if error is retryable\r\n */\r\nfunction isRetryable(type: AuthErrorType): boolean {\r\n  const retryableTypes = [\r\n    AuthErrorType.NETWORK_ERROR,\r\n    AuthErrorType.SERVER_ERROR,\r\n    AuthErrorType.UNKNOWN_ERROR,\r\n    AuthErrorType.TOKEN_EXPIRED,\r\n    AuthErrorType.REFRESH_TOKEN_FAILED\r\n  ];\r\n\r\n  return retryableTypes.includes(type);\r\n}\r\n\r\n/**\r\n * Log authentication error\r\n */\r\nfunction logAuthError(error: AuthError): void {\r\n  const logData = {\r\n    type: error.type,\r\n    message: error.message,\r\n    severity: error.severity,\r\n    timestamp: error.timestamp.toISOString(),\r\n    code: error.code,\r\n    details: error.details,\r\n    retryCount: error.retryCount\r\n  };\r\n\r\n  switch (error.severity) {\r\n    case ErrorSeverity.LOW:\r\n      logWarning(`Authentication warning: ${error.message}`, logData);\r\n      break;\r\n    case ErrorSeverity.MEDIUM:\r\n      logWarning(`Authentication error: ${error.message}`, logData);\r\n      break;\r\n    case ErrorSeverity.HIGH:\r\n      logError(`Authentication error: ${error.message}`, logData);\r\n      break;\r\n    case ErrorSeverity.CRITICAL:\r\n      logError(`Critical authentication error: ${error.message}`, logData);\r\n      break;\r\n  }\r\n}\r\n\r\n/**\r\n * Update error analytics\r\n */\r\nfunction updateErrorAnalytics(error: AuthError): void {\r\n  const existing = errorState.analytics.get(error.type);\r\n  \r\n  if (existing) {\r\n    existing.frequency++;\r\n    existing.lastOccurrence = error.timestamp;\r\n    if (!existing.affectedUsers.includes('current-user')) {\r\n      existing.affectedUsers.push('current-user');\r\n    }\r\n  } else {\r\n    errorState.analytics.set(error.type, {\r\n      errorType: error.type,\r\n      frequency: 1,\r\n      lastOccurrence: error.timestamp,\r\n      affectedUsers: ['current-user']\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Get error analytics\r\n */\r\nexport function getErrorAnalytics(): Map<AuthErrorType, ErrorAnalytics> {\r\n  return new Map(errorState.analytics);\r\n}\r\n\r\n/**\r\n * Handle authentication error with recovery\r\n */\r\nexport async function handleAuthError(\r\n  error: AuthError,\r\n  context?: any\r\n): Promise<AuthError | null> {\r\n  const errorId = `${error.type}-${error.timestamp.getTime()}`;\r\n  errorState.errors.set(errorId, error);\r\n\r\n  // Check if we should retry\r\n  if (error.retryable && error.retryCount! < config.maxRetries) {\r\n    return await retryWithErrorHandling(error, context);\r\n  }\r\n\r\n  // Apply recovery strategy\r\n  switch (error.recovery) {\r\n    case RecoveryStrategy.RETRY:\r\n      return await retryWithErrorHandling(error, context);\r\n    \r\n    case RecoveryStrategy.REFRESH_TOKEN:\r\n      return await handleTokenRefresh(error, context);\r\n    \r\n    case RecoveryStrategy.RELOGIN:\r\n      return await handleRelogin(error, context);\r\n    \r\n    case RecoveryStrategy.CLEAR_CACHE:\r\n      return await handleCacheClear(error, context);\r\n    \r\n    case RecoveryStrategy.CONTACT_SUPPORT:\r\n      return await handleContactSupport(error, context);\r\n    \r\n    default:\r\n      return error;\r\n  }\r\n}\r\n\r\n/**\r\n * Retry with error handling and backoff\r\n */\r\nasync function retryWithErrorHandling(\r\n  error: AuthError,\r\n  context?: any\r\n): Promise<AuthError | null> {\r\n  const errorId = `${error.type}-${error.timestamp.getTime()}`;\r\n  const currentAttempt = errorState.recoveryAttempts.get(errorId) || 0;\r\n  \r\n  if (currentAttempt >= config.maxRetries) {\r\n    return error;\r\n  }\r\n\r\n  errorState.recoveryAttempts.set(errorId, currentAttempt + 1);\r\n  \r\n  // Calculate delay with exponential backoff\r\n  const delay = error.retryDelay! * Math.pow(config.retryBackoff, currentAttempt);\r\n  \r\n  logInfo(`Retrying authentication operation (attempt ${currentAttempt + 1}/${config.maxRetries}) after ${delay}ms`);\r\n  \r\n  await new Promise(resolve => setTimeout(resolve, delay));\r\n  \r\n  // Here you would typically retry the original operation\r\n  // For now, we'll simulate a retry result\r\n  const retryResult = await simulateRetry(error, context);\r\n  \r\n  if (retryResult.success) {\r\n    logInfo('Authentication retry successful');\r\n    errorState.recoveryAttempts.delete(errorId);\r\n    return null;\r\n  } else {\r\n    const newError = {\r\n      ...error,\r\n      retryCount: currentAttempt + 1,\r\n      retryDelay: delay * config.retryBackoff\r\n    };\r\n    \r\n    errorState.errors.set(errorId, newError);\r\n    return newError;\r\n  }\r\n}\r\n\r\n/**\r\n * Handle token refresh\r\n */\r\nasync function handleTokenRefresh(\r\n  error: AuthError,\r\n  context?: any\r\n): Promise<AuthError | null> {\r\n  logInfo('Attempting token refresh due to authentication error');\r\n  \r\n  try {\r\n    // This would integrate with your token refresh logic\r\n    const refreshSuccess = await simulateTokenRefresh();\r\n    \r\n    if (refreshSuccess) {\r\n      logInfo('Token refresh successful');\r\n      return null;\r\n    } else {\r\n      return createAuthError(\r\n        AuthErrorType.REFRESH_TOKEN_FAILED,\r\n        'Token refresh failed',\r\n        { details: context }\r\n      );\r\n    }\r\n  } catch (refreshError) {\r\n    logError('Token refresh failed with exception', refreshError);\r\n    return createAuthError(\r\n      AuthErrorType.REFRESH_TOKEN_FAILED,\r\n      'Token refresh failed with exception',\r\n      { details: refreshError }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Handle relogin scenario\r\n */\r\nasync function handleRelogin(\r\n  error: AuthError,\r\n  context?: any\r\n): Promise<AuthError | null> {\r\n  logInfo('Authentication error requires relogin');\r\n  \r\n  // This would trigger the relogin flow\r\n  // For now, we'll return the error to indicate relogin is needed\r\n  return error;\r\n}\r\n\r\n/**\r\n * Handle cache clear scenario\r\n */\r\nasync function handleCacheClear(\r\n  error: AuthError,\r\n  context?: any\r\n): Promise<AuthError | null> {\r\n  logInfo('Clearing authentication cache due to error');\r\n  \r\n  try {\r\n    // Clear any cached authentication data\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      sessionStorage.removeItem('authState');\r\n    }\r\n    \r\n    logInfo('Authentication cache cleared successfully');\r\n    return null;\r\n  } catch (clearError) {\r\n    logError('Failed to clear authentication cache', clearError);\r\n    return error;\r\n  }\r\n}\r\n\r\n/**\r\n * Handle contact support scenario\r\n */\r\nasync function handleContactSupport(\r\n  error: AuthError,\r\n  context?: any\r\n): Promise<AuthError | null> {\r\n  logInfo('Authentication error requires contacting support');\r\n  \r\n  // This would trigger support contact flow\r\n  // For now, we'll return the error to indicate support contact is needed\r\n  return error;\r\n}\r\n\r\n/**\r\n * Simulate retry operation (for demonstration)\r\n */\r\nasync function simulateRetry(error: AuthError, context?: any): Promise<{ success: boolean }> {\r\n  // Simulate network delay\r\n  await new Promise(resolve => setTimeout(resolve, 100));\r\n  \r\n  // Simulate occasional success\r\n  return { success: Math.random() > 0.5 };\r\n}\r\n\r\n/**\r\n * Simulate token refresh (for demonstration)\r\n */\r\nasync function simulateTokenRefresh(): Promise<boolean> {\r\n  // Simulate network delay\r\n  await new Promise(resolve => setTimeout(resolve, 200));\r\n  \r\n  // Simulate occasional success\r\n  return Math.random() > 0.3;\r\n}\r\n\r\n/**\r\n * Parse error from API response\r\n */\r\nexport function parseApiError(error: any): AuthError {\r\n  if (error.response) {\r\n    // Handle HTTP errors\r\n    const status = error.response.status;\r\n    const data = error.response.data;\r\n    \r\n    switch (status) {\r\n      case 400:\r\n        return createAuthError(\r\n          AuthErrorType.VALIDATION_ERROR,\r\n          data.message || 'Invalid request data',\r\n          { details: data }\r\n        );\r\n      case 401:\r\n        return createAuthError(\r\n          AuthErrorType.INVALID_CREDENTIALS,\r\n          data.message || 'Invalid authentication credentials',\r\n          { details: data }\r\n        );\r\n      case 403:\r\n        return createAuthError(\r\n          AuthErrorType.PERMISSION_DENIED,\r\n          data.message || 'Access denied',\r\n          { details: data }\r\n        );\r\n      case 429:\r\n        return createAuthError(\r\n          AuthErrorType.RATE_LIMITED,\r\n          data.message || 'Too many requests',\r\n          { details: data }\r\n        );\r\n      case 419:\r\n        return createAuthError(\r\n          AuthErrorType.SESSION_EXPIRED,\r\n          data.message || 'Session expired',\r\n          { details: data }\r\n        );\r\n      case 500:\r\n      case 502:\r\n      case 503:\r\n        return createAuthError(\r\n          AuthErrorType.SERVER_ERROR,\r\n          data.message || 'Server error',\r\n          { details: data }\r\n        );\r\n      default:\r\n        return createAuthError(\r\n          AuthErrorType.UNKNOWN_ERROR,\r\n          data.message || `HTTP error ${status}`,\r\n          { details: data, code: `HTTP_${status}` }\r\n        );\r\n    }\r\n  } else if (error.request) {\r\n    // Handle network errors\r\n    return createAuthError(\r\n      AuthErrorType.NETWORK_ERROR,\r\n      'Network error occurred',\r\n      { details: error.message }\r\n    );\r\n  } else {\r\n    // Handle other errors\r\n    return createAuthError(\r\n      AuthErrorType.UNKNOWN_ERROR,\r\n      error.message || 'Unknown authentication error',\r\n      { details: error }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Configure error handling\r\n */\r\nexport function configureErrorHandling(newConfig: Partial<ErrorConfig>): void {\r\n  config = { ...config, ...newConfig };\r\n  logInfo('Error handling configuration updated', config);\r\n}\r\n\r\n/**\r\n * Get current error state\r\n */\r\nexport function getErrorState(): ErrorState {\r\n  return {\r\n    errors: new Map(errorState.errors),\r\n    analytics: new Map(errorState.analytics),\r\n    recoveryAttempts: new Map(errorState.recoveryAttempts)\r\n  };\r\n}\r\n\r\n/**\r\n * Clear error state (useful for testing)\r\n */\r\nexport function clearErrorState(): void {\r\n  errorState.errors.clear();\r\n  errorState.analytics.clear();\r\n  errorState.recoveryAttempts.clear();\r\n  logInfo('Error state cleared');\r\n}\r\n\r\n// Export helper functions\r\nexport {\r\n  getUserMessage,\r\n  getErrorSeverity,\r\n  getRecoveryStrategy,\r\n  isRetryable\r\n};\r\n","// Global error state management context\r\nimport React, { createContext, useContext, useReducer, useCallback, ReactNode } from 'react';\r\nimport { AuthError, AuthErrorType, ErrorSeverity, RecoveryStrategy } from '../lib/errorHandling';\r\n\r\n// Error state interface\r\ninterface ErrorState {\r\n  activeErrors: Map<string, AuthError>;\r\n  globalError: AuthError | null;\r\n  errorHistory: AuthError[];\r\n  isLoading: boolean;\r\n  recoveryInProgress: boolean;\r\n  errorSettings: {\r\n    enableAnalytics: boolean;\r\n    enableLogging: boolean;\r\n    enableRecovery: boolean;\r\n    maxRetries: number;\r\n    retryDelay: number;\r\n  };\r\n}\r\n\r\n// Error action types\r\ntype ErrorAction =\r\n  | { type: 'ADD_ERROR'; payload: { errorId: string; error: AuthError } }\r\n  | { type: 'REMOVE_ERROR'; payload: string }\r\n  | { type: 'SET_GLOBAL_ERROR'; payload: AuthError | null }\r\n  | { type: 'ADD_TO_HISTORY'; payload: AuthError }\r\n  | { type: 'SET_LOADING'; payload: boolean }\r\n  | { type: 'SET_RECOVERY_IN_PROGRESS'; payload: boolean }\r\n  | { type: 'UPDATE_SETTINGS'; payload: Partial<ErrorState['errorSettings']> }\r\n  | { type: 'CLEAR_ALL_ERRORS' }\r\n  | { type: 'CLEAR_HISTORY' };\r\n\r\n// Initial error state\r\nconst initialState: ErrorState = {\r\n  activeErrors: new Map(),\r\n  globalError: null,\r\n  errorHistory: [],\r\n  isLoading: false,\r\n  recoveryInProgress: false,\r\n  errorSettings: {\r\n    enableAnalytics: true,\r\n    enableLogging: true,\r\n    enableRecovery: true,\r\n    maxRetries: 3,\r\n    retryDelay: 1000\r\n  }\r\n};\r\n\r\n// Error reducer\r\nfunction errorReducer(state: ErrorState, action: ErrorAction): ErrorState {\r\n  switch (action.type) {\r\n    case 'ADD_ERROR':\r\n      return {\r\n        ...state,\r\n        activeErrors: new Map(state.activeErrors).set(action.payload.errorId, action.payload.error)\r\n      };\r\n\r\n    case 'REMOVE_ERROR':\r\n      const newErrors = new Map(state.activeErrors);\r\n      newErrors.delete(action.payload);\r\n      return {\r\n        ...state,\r\n        activeErrors: newErrors\r\n      };\r\n\r\n    case 'SET_GLOBAL_ERROR':\r\n      return {\r\n        ...state,\r\n        globalError: action.payload\r\n      };\r\n\r\n    case 'ADD_TO_HISTORY':\r\n      return {\r\n        ...state,\r\n        errorHistory: [action.payload, ...state.errorHistory].slice(0, 100) // Keep last 100 errors\r\n      };\r\n\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n\r\n    case 'SET_RECOVERY_IN_PROGRESS':\r\n      return {\r\n        ...state,\r\n        recoveryInProgress: action.payload\r\n      };\r\n\r\n    case 'UPDATE_SETTINGS':\r\n      return {\r\n        ...state,\r\n        errorSettings: {\r\n          ...state.errorSettings,\r\n          ...action.payload\r\n        }\r\n      };\r\n\r\n    case 'CLEAR_ALL_ERRORS':\r\n      return {\r\n        ...state,\r\n        activeErrors: new Map(),\r\n        globalError: null\r\n      };\r\n\r\n    case 'CLEAR_HISTORY':\r\n      return {\r\n        ...state,\r\n        errorHistory: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Error context\r\ninterface ErrorContextType {\r\n  state: ErrorState;\r\n  actions: {\r\n    addError: (error: AuthError, errorId?: string) => string;\r\n    removeError: (errorId: string) => void;\r\n    setGlobalError: (error: AuthError | null) => void;\r\n    addToHistory: (error: AuthError) => void;\r\n    setLoading: (loading: boolean) => void;\r\n    setRecoveryInProgress: (inProgress: boolean) => void;\r\n    updateSettings: (settings: Partial<ErrorState['errorSettings']>) => void;\r\n    clearAllErrors: () => void;\r\n    clearHistory: () => void;\r\n    getErrorByType: (type: AuthErrorType) => AuthError | null;\r\n    getErrorsBySeverity: (severity: ErrorSeverity) => AuthError[];\r\n    hasError: (type?: AuthErrorType) => boolean;\r\n    getErrorCount: () => number;\r\n    getRecoveryErrors: () => AuthError[];\r\n  };\r\n}\r\n\r\nconst ErrorContext = createContext<ErrorContextType | null>(null);\r\n\r\n// Error provider component\r\ninterface ErrorProviderProps {\r\n  children: ReactNode;\r\n  initialSettings?: Partial<ErrorState['errorSettings']>;\r\n}\r\n\r\nexport function ErrorProvider({ children, initialSettings }: ErrorProviderProps) {\r\n  const [state, dispatch] = useReducer(errorReducer, {\r\n    ...initialState,\r\n    errorSettings: {\r\n      ...initialState.errorSettings,\r\n      ...initialSettings\r\n    }\r\n  });\r\n\r\n  // Generate unique error ID\r\n  const generateErrorId = useCallback((error: AuthError): string => {\r\n    return `${error.type}-${error.timestamp.getTime()}-${Math.random().toString(36).substr(2, 9)}`;\r\n  }, []);\r\n\r\n  // Add error to state\r\n  const addError = useCallback((error: AuthError, errorId?: string): string => {\r\n    const id = errorId || generateErrorId(error);\r\n    \r\n    dispatch({\r\n      type: 'ADD_ERROR',\r\n      payload: { errorId: id, error }\r\n    });\r\n\r\n    dispatch({\r\n      type: 'ADD_TO_HISTORY',\r\n      payload: error\r\n    });\r\n\r\n    return id;\r\n  }, [generateErrorId]);\r\n\r\n  // Remove error from state\r\n  const removeError = useCallback((errorId: string) => {\r\n    dispatch({ type: 'REMOVE_ERROR', payload: errorId });\r\n  }, []);\r\n\r\n  // Set global error\r\n  const setGlobalError = useCallback((error: AuthError | null) => {\r\n    dispatch({ type: 'SET_GLOBAL_ERROR', payload: error });\r\n  }, []);\r\n\r\n  // Add to history\r\n  const addToHistory = useCallback((error: AuthError) => {\r\n    dispatch({ type: 'ADD_TO_HISTORY', payload: error });\r\n  }, []);\r\n\r\n  // Set loading state\r\n  const setLoading = useCallback((loading: boolean) => {\r\n    dispatch({ type: 'SET_LOADING', payload: loading });\r\n  }, []);\r\n\r\n  // Set recovery in progress\r\n  const setRecoveryInProgress = useCallback((inProgress: boolean) => {\r\n    dispatch({ type: 'SET_RECOVERY_IN_PROGRESS', payload: inProgress });\r\n  }, []);\r\n\r\n  // Update settings\r\n  const updateSettings = useCallback((settings: Partial<ErrorState['errorSettings']>) => {\r\n    dispatch({ type: 'UPDATE_SETTINGS', payload: settings });\r\n  }, []);\r\n\r\n  // Clear all errors\r\n  const clearAllErrors = useCallback(() => {\r\n    dispatch({ type: 'CLEAR_ALL_ERRORS' });\r\n  }, []);\r\n\r\n  // Clear history\r\n  const clearHistory = useCallback(() => {\r\n    dispatch({ type: 'CLEAR_HISTORY' });\r\n  }, []);\r\n\r\n  // Get error by type\r\n  const getErrorByType = useCallback((type: AuthErrorType): AuthError | null => {\r\n    const errorsArray = Array.from(state.activeErrors.values());\r\n    return errorsArray.find(error => error.type === type) || null;\r\n  }, [state.activeErrors]);\r\n\r\n  // Get errors by severity\r\n  const getErrorsBySeverity = useCallback((severity: ErrorSeverity): AuthError[] => {\r\n    return Array.from(state.activeErrors.values()).filter(error => error.severity === severity);\r\n  }, [state.activeErrors]);\r\n\r\n  // Check if error exists\r\n  const hasError = useCallback((type?: AuthErrorType): boolean => {\r\n    if (type) {\r\n      return state.activeErrors.has(`${type}-`);\r\n    }\r\n    return state.activeErrors.size > 0;\r\n  }, [state.activeErrors]);\r\n\r\n  // Get error count\r\n  const getErrorCount = useCallback((): number => {\r\n    return state.activeErrors.size;\r\n  }, [state.activeErrors]);\r\n\r\n  // Get errors that need recovery\r\n  const getRecoveryErrors = useCallback((): AuthError[] => {\r\n    return Array.from(state.activeErrors.values()).filter(\r\n      error => error.recovery !== RecoveryStrategy.NONE && !error.retryable\r\n    );\r\n  }, [state.activeErrors]);\r\n\r\n  const contextValue: ErrorContextType = {\r\n    state,\r\n    actions: {\r\n      addError,\r\n      removeError,\r\n      setGlobalError,\r\n      addToHistory,\r\n      setLoading,\r\n      setRecoveryInProgress,\r\n      updateSettings,\r\n      clearAllErrors,\r\n      clearHistory,\r\n      getErrorByType,\r\n      getErrorsBySeverity,\r\n      hasError,\r\n      getErrorCount,\r\n      getRecoveryErrors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ErrorContext.Provider value={contextValue}>\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook to use error context\r\nexport function useErrorContext() {\r\n  const context = useContext(ErrorContext);\r\n  if (!context) {\r\n    throw new Error('useErrorContext must be used within an ErrorProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Hook for common error operations\r\nexport function useErrorHandler() {\r\n  const { state, actions } = useErrorContext();\r\n\r\n  // Handle error with automatic recovery\r\n  const handleError = useCallback(async (error: AuthError): Promise<boolean> => {\r\n    actions.setLoading(true);\r\n    actions.setRecoveryInProgress(true);\r\n\r\n    try {\r\n      const errorId = actions.addError(error);\r\n\r\n      // Here you would implement recovery logic\r\n      // For now, we'll simulate recovery\r\n      const recoverySuccess = await simulateRecovery(error);\r\n\r\n      if (recoverySuccess) {\r\n        actions.removeError(errorId);\r\n        return true;\r\n      } else {\r\n        // Keep error in state for manual handling\r\n        return false;\r\n      }\r\n    } catch (recoveryError) {\r\n      console.error('Error recovery failed:', recoveryError);\r\n      return false;\r\n    } finally {\r\n      actions.setLoading(false);\r\n      actions.setRecoveryInProgress(false);\r\n    }\r\n  }, [actions]);\r\n\r\n  // Show error notification\r\n  const showErrorNotification = useCallback((error: AuthError) => {\r\n    // This would integrate with your notification system\r\n    console.error('Error notification:', error.userMessage);\r\n    \r\n    // In a real app, you might use a toast notification\r\n    // toast.error(error.userMessage);\r\n  }, []);\r\n\r\n  // Dismiss error\r\n  const dismissError = useCallback((errorId: string) => {\r\n    actions.removeError(errorId);\r\n  }, [actions]);\r\n\r\n  // Dismiss all errors\r\n  const dismissAllErrors = useCallback(() => {\r\n    actions.clearAllErrors();\r\n  }, [actions]);\r\n\r\n  return {\r\n    ...actions,\r\n    ...state,\r\n    handleError,\r\n    showErrorNotification,\r\n    dismissError,\r\n    dismissAllErrors,\r\n    hasActiveErrors: state.activeErrors.size > 0,\r\n    hasGlobalError: state.globalError !== null,\r\n    isRecovering: state.recoveryInProgress\r\n  };\r\n}\r\n\r\n// Simulate error recovery (for demonstration)\r\nasync function simulateRecovery(error: AuthError): Promise<boolean> {\r\n  // Simulate recovery delay\r\n  await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n  // Simulate recovery success based on error type\r\n  const recoverableTypes = [\r\n    AuthErrorType.NETWORK_ERROR,\r\n    AuthErrorType.SERVER_ERROR,\r\n    AuthErrorType.TOKEN_EXPIRED,\r\n    AuthErrorType.SESSION_EXPIRED\r\n  ];\r\n\r\n  if (recoverableTypes.includes(error.type)) {\r\n    return Math.random() > 0.3; // 70% success rate for recoverable errors\r\n  }\r\n\r\n  return false; // Non-recoverable errors\r\n}\r\n\r\n// Higher-order component to provide error context\r\nexport function withErrorContext<P extends object>(\r\n  Component: React.ComponentType<P>,\r\n  errorContextProps?: Partial<ErrorProviderProps>\r\n): React.ComponentType<P> {\r\n  return function WrappedComponent(props: P) {\r\n    return (\r\n      <ErrorProvider {...errorContextProps}>\r\n        <Component {...props} />\r\n      </ErrorProvider>\r\n    );\r\n  };\r\n}","import { createContext, ReactNode, useContext, useEffect, useState, useCallback } from \"react\";\nimport {\n  useQuery,\n  useMutation,\n  UseMutationResult,\n  useQueryClient,\n} from \"@tanstack/react-query\";\nimport { getQueryFn, apiRequest, queryClient, performTokenRefresh } from \"../lib/queryClient\";\nimport { useToast } from \"./use-toast\";\nimport { ToastAction } from \"@/components/ui/toast\";\nimport {\n  updateTokensFromResponse,\n  clearTokens,\n  getAccessToken,\n  getRefreshToken,\n  setAccessToken,\n  setRefreshToken,\n  isTokenExpired,\n  isTokenExpiringSoon,\n  cleanupExpiredTokens,\n  validateTokenForRequest,\n  cleanupAllAuthData,\n  getTokenTimeRemaining\n} from \"../lib/tokenManager\";\nimport { logError, logInfo, logWarning } from \"../lib/config\";\nimport {\n  AuthError,\n  AuthErrorType,\n  createAuthError,\n  parseApiError,\n  handleAuthError\n} from \"../lib/errorHandling\";\nimport { useErrorHandler, useErrorContext } from \"../contexts/ErrorContext\";\nimport { NutritionGoals, User } from \"../../../shared/schema\";\nimport { useLocation } from \"wouter\";\nimport { z } from \"zod\";\n\ntype AuthContextType = {\n  user: User | null;\n  isLoading: boolean;\n  error: Error | null;\n  loginMutation: UseMutationResult<User, Error, LoginData>;\n  logoutMutation: UseMutationResult<void, Error, void>;\n  registerMutation: UseMutationResult<User, Error, RegisterData>;\n  refreshMutation: UseMutationResult<{ accessToken: string }, Error, { refreshToken: string }>;\n  isRefreshing: boolean;\n  authError: string | null;\n};\n\nconst loginSchema = z.object({\n  username: z.string().min(3, \"Username must be at least 3 characters\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n});\n\ntype LoginData = z.infer<typeof loginSchema>;\n\nconst registerSchema = z.object({\n  username: z.string().min(3, \"Username must be at least 3 characters\"),\n  email: z.string().email(\"Invalid email address\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n  confirmPassword: z.string().min(6, \"Password must be at least 6 characters\"),\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords do not match\",\n  path: [\"confirmPassword\"],\n});\n\ntype RegisterData = z.infer<typeof registerSchema>;\n\nexport const AuthContext = createContext<AuthContextType | null>(null);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const { toast } = useToast();\n  const [, navigate] = useLocation();\n  const queryClient = useQueryClient();\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [authError, setAuthError] = useState<string | null>(null);\n  const [tokenCleanupTriggered, setTokenCleanupTriggered] = useState(false);\n  const { state, actions } = useErrorContext();\n  const { handleError, showErrorNotification, dismissError } = useErrorHandler();\n  \n  const {\n    data: user,\n    error,\n    isLoading,\n  } = useQuery<User | undefined, Error>({\n    queryKey: [\"/api/auth/me\"],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n\n  const loginMutation = useMutation({\n    mutationFn: async (credentials: LoginData) => {\n      try {\n        console.log('[LOGIN DEBUG] Sending login request with credentials:', {\n          username: credentials.username,\n          hasPassword: !!credentials.password,\n          passwordLength: credentials.password?.length\n        });\n\n        const res = await apiRequest(\"POST\", \"/api/auth/login\", credentials);\n        const responseData = await res.json();\n\n        console.log('[LOGIN DEBUG] Login response received:', {\n          hasTokens: !!responseData.tokens,\n          hasUser: !!responseData.user,\n          hasToken: !!responseData.token,\n          responseKeys: Object.keys(responseData)\n        });\n\n        // Enhanced response parsing with robust format handling\n        if (!responseData) {\n          throw new Error('Empty response received from login');\n        }\n\n        // Check for new format with tokens and user\n        if (responseData.tokens && typeof responseData.tokens === 'object') {\n          if (responseData.tokens.accessToken && responseData.tokens.refreshToken) {\n            console.log('[LOGIN DEBUG] Valid new token format detected');\n\n            // Validate token formats before storing\n            if (!responseData.tokens.accessToken || typeof responseData.tokens.accessToken !== 'string') {\n              throw new Error('Invalid access token format in response');\n            }\n            if (!responseData.tokens.refreshToken || typeof responseData.tokens.refreshToken !== 'string') {\n              throw new Error('Invalid refresh token format in response');\n            }\n\n            updateTokensFromResponse(responseData);\n\n            if (responseData.user) {\n              return responseData.user;\n            } else {\n              // Tokens present but no user data - this might be an error\n              console.log('[LOGIN DEBUG] Tokens received but no user data');\n              throw new Error('Login successful but user data missing from response');\n            }\n          } else {\n            console.log('[LOGIN DEBUG] Tokens object present but missing required tokens');\n            throw new Error('Incomplete token data in response');\n          }\n        } else if (responseData.token && typeof responseData.token === 'string') {\n          console.log('[LOGIN DEBUG] Old token format detected');\n\n          // Validate old format token\n          if (responseData.token.length < 10) { // Basic length check\n            throw new Error('Invalid token format in response');\n          }\n\n          updateTokensFromResponse(responseData);\n          // For old format, return the response data as user (assuming it contains user info)\n          return responseData;\n        } else if (responseData.user) {\n          console.log('[LOGIN DEBUG] User data present but no tokens');\n          // User data without tokens - might be a partial response\n          // This could be valid if tokens are handled separately\n          return responseData.user;\n        } else {\n          console.log('[LOGIN DEBUG] No recognizable format in response');\n          // Fallback - return raw data but log warning\n          logWarning('Unrecognized login response format', responseData);\n          return responseData;\n        }\n      } catch (error) {\n        console.log('[LOGIN DEBUG] Login failed with error:', error);\n        // Convert error to AuthError and handle it\n        const authError = parseApiError(error);\n        await handleError(authError);\n        throw authError;\n      }\n    },\n    onSuccess: (user: User) => {\n      queryClient.setQueryData([\"/api/auth/me\"], user);\n      toast({\n        title: \"Welcome back!\",\n        description: `Logged in as ${user.firstName} ${user.lastName}`,\n      });\n      \n      // Clear any authentication errors\n      actions.clearAllErrors();\n    },\n    onError: (error: Error) => {\n      const authError = parseApiError(error);\n      showErrorNotification(authError);\n      \n      toast({\n        title: \"Login failed\",\n        description: authError.userMessage,\n        variant: \"destructive\",\n        action: authError.recovery === 'RELOGIN' ? (\n          <ToastAction altText=\"Retry login\" onClick={() => loginMutation.mutateAsync(loginMutation.variables as LoginData)}>\n            Retry\n          </ToastAction>\n        ) : undefined\n      });\n    },\n  });\n\n  const registerMutation = useMutation({\n    mutationFn: async (data: RegisterData) => {\n      try {\n        // Omit confirmPassword before sending to API\n        const { confirmPassword, ...credentials } = data;\n        const res = await apiRequest(\"POST\", \"/api/auth/register\", credentials);\n        const responseData = await res.json();\n        \n        // Handle new response format with user and tokens\n        if (responseData.tokens && responseData.user) {\n          // Store the access and refresh tokens using token manager\n          updateTokensFromResponse(responseData);\n          // Return user data\n          return responseData.user;\n        } else if (responseData.token) {\n          // Fallback for old format\n          updateTokensFromResponse(responseData);\n          return responseData;\n        }\n        \n        return responseData;\n      } catch (error) {\n        // Convert error to AuthError and handle it\n        const authError = parseApiError(error);\n        await handleError(authError);\n        throw authError;\n      }\n    },\n    onSuccess: (user: User) => {\n      queryClient.setQueryData([\"/api/auth/me\"], user);\n      toast({\n        title: \"Registration successful!\",\n        description: `Welcome to NutriScan, ${user.firstName}!`,\n      });\n      // Redirect to onboarding for new users\n      navigate(\"/onboarding\");\n      \n      // Clear any authentication errors\n      actions.clearAllErrors();\n    },\n    onError: (error: Error) => {\n      const authError = parseApiError(error);\n      showErrorNotification(authError);\n      \n      toast({\n        title: \"Registration failed\",\n        description: authError.userMessage,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const logoutMutation = useMutation({\n    mutationFn: async () => {\n      try {\n        await apiRequest(\"POST\", \"/api/auth/logout\");\n      } catch (error) {\n        // Log the error but continue with logout process\n        logError(\"Logout API call failed\", error);\n        throw error; // Re-throw to trigger onError\n      }\n    },\n    onSuccess: () => {\n      // Clear all authentication data\n      cleanupAllAuthData();\n      queryClient.setQueryData([\"/api/auth/me\"], null);\n      queryClient.removeQueries(); // Clear all cached queries\n      setAuthError(null);\n      setTokenCleanupTriggered(true);\n      actions.clearAllErrors(); // Clear error state\n      \n      toast({\n        title: \"Logged out\",\n        description: \"You have been logged out successfully\",\n      });\n      navigate(\"/login\");\n    },\n    onError: async (error: Error) => {\n      const authError = parseApiError(error);\n      await handleError(authError);\n      \n      // Even if logout API fails, clear local tokens and data\n      try {\n        cleanupAllAuthData();\n        queryClient.setQueryData([\"/api/auth/me\"], null);\n        queryClient.removeQueries();\n        setAuthError(null);\n        setTokenCleanupTriggered(true);\n        actions.clearAllErrors();\n        navigate(\"/login\");\n      } catch (cleanupError) {\n        logError(\"Failed to cleanup tokens during failed logout\", cleanupError);\n      }\n      \n      toast({\n        title: \"Logout failed\",\n        description: authError.userMessage,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const refreshMutation = useMutation({\n    mutationFn: async ({ refreshToken }: { refreshToken: string }) => {\n      try {\n        const res = await apiRequest(\"POST\", \"/api/auth/refresh\", { refreshToken });\n        return await res.json();\n      } catch (error) {\n        const authError = parseApiError(error);\n        throw authError;\n      }\n    },\n    onSuccess: (data) => {\n      // Store new access token using token manager\n      setAccessToken(data.accessToken);\n      setAuthError(null);\n      setTokenCleanupTriggered(false);\n      actions.clearAllErrors(); // Clear error state\n      // Update query client with new token\n      queryClient.setQueryDefaults([\"/api/auth/me\"], {\n        queryFn: getQueryFn({ on401: \"returnNull\" }),\n      });\n      logInfo(\"Token refresh successful\");\n    },\n    onError: async (error: Error) => {\n      const authError = parseApiError(error);\n      await handleError(authError);\n      \n      logError(\"Token refresh failed\", authError);\n      \n      // If refresh fails, clear all auth data and redirect to login\n      try {\n        cleanupAllAuthData();\n        queryClient.setQueryData([\"/api/auth/me\"], null);\n        queryClient.removeQueries();\n        setAuthError(\"Session expired. Please log in again.\");\n        setTokenCleanupTriggered(true);\n        \n        toast({\n          title: \"Session expired\",\n          description: authError.userMessage,\n          variant: \"destructive\",\n          action: (\n            <ToastAction altText=\"Go to login\" onClick={() => navigate(\"/login\")}>\n              Login\n            </ToastAction>\n          ),\n        });\n        navigate(\"/login\");\n      } catch (cleanupError) {\n        logError(\"Failed to cleanup tokens during refresh failure\", cleanupError);\n        throw cleanupError;\n      }\n    },\n  });\n\n  // Enhanced session recovery mechanism\n  useEffect(() => {\n    const initializeSession = async () => {\n      const accessToken = getAccessToken();\n      const refreshToken = getRefreshToken();\n\n      // If we have tokens but no user data, attempt session recovery\n      if (accessToken && !user) {\n        logInfo(\"Access token found, attempting session recovery\");\n\n        try {\n          // Validate token format and expiration\n          if (!isTokenExpired(accessToken)) {\n            logInfo(\"Valid access token found, user profile should load automatically\");\n            // The existing query will handle fetching user data\n          } else if (refreshToken && !isTokenExpired(refreshToken)) {\n            logInfo(\"Access token expired but refresh token valid, attempting refresh\");\n            // Attempt to refresh token silently\n            try {\n              await performTokenRefresh();\n              logInfo(\"Silent token refresh successful during session recovery\");\n            } catch (refreshError) {\n              logWarning(\"Silent token refresh failed during session recovery\", refreshError);\n              // Don't throw here, let the normal flow handle it\n            }\n          } else {\n            logWarning(\"Both tokens expired or invalid, clearing session\");\n            cleanupAllAuthData();\n            setAuthError(\"Your session has expired. Please log in again.\");\n          }\n        } catch (error) {\n          logError(\"Session recovery failed\", error);\n          // Don't block the app, just log the error\n        }\n      }\n\n      // Ensure refresh token consistency\n      if (!getRefreshToken() && refreshToken) {\n        logInfo(\"Refresh token found in memory but not in storage, restoring\");\n        setRefreshToken(refreshToken);\n      }\n\n      // Handle auth errors with improved user feedback\n      if (authError) {\n        const authErrorObj = createAuthError(AuthErrorType.SESSION_EXPIRED, authError);\n        showErrorNotification(authErrorObj);\n\n        toast({\n          title: \"Authentication Error\",\n          description: authError,\n          variant: \"destructive\",\n          action: authError.includes(\"expired\") ? (\n            <ToastAction altText=\"Go to login\" onClick={() => navigate(\"/login\")}>\n              Login\n            </ToastAction>\n          ) : undefined\n        });\n        setAuthError(null); // Clear after showing toast\n      }\n    };\n\n    // Run session initialization\n    initializeSession();\n  }, [user, authError, toast, navigate]);\n\n  // Automatic token cleanup and expiration handling\n  useEffect(() => {\n    const handleTokenCleanup = () => {\n      try {\n        cleanupExpiredTokens();\n        \n        // Check if access token is expired\n        if (getAccessToken() && isTokenExpired()) {\n          logWarning(\"Access token expired, attempting cleanup\");\n          cleanupExpiredTokens();\n          \n          // If refresh token also exists but is expired, clear everything\n          if (getRefreshToken() && isTokenExpired(getRefreshToken() as string)) {\n            logWarning(\"Both tokens expired, forcing logout\");\n            setTokenCleanupTriggered(true);\n            const sessionError = createAuthError(AuthErrorType.SESSION_EXPIRED, \"Your session has expired. Please log in again.\");\n            actions.addError(sessionError);\n            showErrorNotification(sessionError);\n            \n            toast({\n              title: \"Session Expired\",\n              description: sessionError.userMessage,\n              variant: \"destructive\",\n              action: (\n                <ToastAction altText=\"Go to login\" onClick={() => navigate(\"/login\")}>\n                  Login\n                </ToastAction>\n              ),\n            });\n            // Don't navigate immediately to allow user to see the message\n          }\n        }\n        \n        // Check if token is expiring soon and preemptively refresh\n        if (getAccessToken() && isTokenExpiringSoon(5)) {\n          logInfo(\"Token expiring soon, attempting refresh\");\n          const refreshToken = getRefreshToken();\n          if (refreshToken) {\n            performTokenRefresh().catch(error => {\n              const refreshError = parseApiError(error);\n              handleError(refreshError);\n              logError(\"Preemptive token refresh failed\", error);\n            });\n          }\n        }\n      } catch (error) {\n        logError(\"Token cleanup failed\", error);\n      }\n    };\n\n    // Run cleanup on mount and every minute\n    handleTokenCleanup();\n    const intervalId = setInterval(handleTokenCleanup, 60000); // Check every minute\n\n    // Cleanup on page unload\n    const handleBeforeUnload = () => {\n      try {\n        cleanupExpiredTokens();\n      } catch (error) {\n        logError(\"Failed to cleanup tokens on page unload\", error);\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      clearInterval(intervalId);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [navigate, toast]);\n\n  // Handle token cleanup trigger\n  useEffect(() => {\n    if (tokenCleanupTriggered) {\n      try {\n        cleanupAllAuthData();\n        queryClient.removeQueries();\n        setAuthError(null);\n        logInfo(\"Token cleanup trigger processed successfully\");\n      } catch (error) {\n        logError(\"Failed to process token cleanup trigger\", error);\n      } finally {\n        setTokenCleanupTriggered(false);\n      }\n    }\n  }, [tokenCleanupTriggered, queryClient]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user ?? null,\n        isLoading,\n        error,\n        loginMutation,\n        logoutMutation,\n        registerMutation,\n        refreshMutation,\n        isRefreshing,\n        authError,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n\n// Helper function to refresh access token (deprecated - use performTokenRefresh from queryClient)\nexport const refreshAccessToken = async (): Promise<string | null> => {\n  logWarning('refreshAccessToken is deprecated, use performTokenRefresh from queryClient');\n  return performTokenRefresh();\n};\n","import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-all duration-300 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 hover:shadow-md active:scale-95\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-neutral-900 text-neutral-100 hover:bg-neutral-800 shadow-md\", // dark button\r\n        dark: \"bg-neutral-900 text-neutral-100 hover:bg-neutral-800 shadow-md\",\r\n        accent: \"bg-gradient-to-r from-green-600 to-lime-500 text-white shadow-lg hover:from-green-700 hover:to-lime-600\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"dark\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n","import { Link } from \"wouter\";\nimport { User } from \"@shared/schema\";\nimport { Trophy, BookOpen, User as UserIcon, BarChart3 } from \"lucide-react\";\n\ninterface MobileMenuProps {\n  user: User | null;\n  currentPath: string;\n  onLogout: () => void;\n  onClose: () => void;\n}\n\nexport function MobileMenu({ user, currentPath, onLogout, onClose }: MobileMenuProps) {\n  const userInitials = user ? `${user.firstName.charAt(0)}${user.lastName.charAt(0)}` : null;\n\n  const handleLinkClick = () => {\n    onClose();\n  };\n\n  const handleLogout = () => {\n    onLogout();\n    onClose();\n  };\n\n  return (\n    <div className=\"md:hidden bg-white border-b border-neutral-200 px-4 py-2\">\n      {user && (\n        <div className=\"flex items-center py-2\">\n          <div className=\"flex items-center\">\n            <span className=\"inline-flex items-center justify-center h-8 w-8 rounded-full bg-primary-100\">\n              <span className=\"text-sm font-medium leading-none text-primary-700\">{userInitials}</span>\n            </span>\n            <span className=\"ml-2 text-neutral-700 font-medium\">{user.firstName} {user.lastName}</span>\n          </div>\n        </div>\n      )}\n      <nav className=\"py-2 space-y-1\">\n        <Link href=\"/dashboard\" onClick={handleLinkClick}>\n          <a className={`block px-3 py-2 rounded-md text-base font-medium ${\n            currentPath === '/dashboard' \n              ? 'text-primary-700 bg-primary-50' \n              : 'text-neutral-700 hover:text-primary-600 hover:bg-primary-50'\n          }`}>\n            Dashboard\n          </a>\n        </Link>\n        <Link href=\"/history\" onClick={handleLinkClick}>\n          <a className={`block px-3 py-2 rounded-md text-base font-medium ${\n            currentPath === '/history'\n              ? 'text-primary-700 bg-primary-50'\n              : 'text-neutral-700 hover:text-primary-600 hover:bg-primary-50'\n          }`}>\n            History\n          </a>\n        </Link>\n        <Link href=\"/chatbot\" onClick={handleLinkClick}>\n          <a className={`block px-3 py-2 rounded-md text-base font-medium ${\n            currentPath === '/chatbot'\n              ? 'text-primary-700 bg-primary-50'\n              : 'text-neutral-700 hover:text-primary-600 hover:bg-primary-50'\n          }`}>\n            Nutrition Coach\n          </a>\n        </Link>\n        <Link href=\"/achievements\" onClick={handleLinkClick}>\n          <a className={`block px-3 py-2 rounded-md text-base font-medium ${\n            currentPath === '/achievements'\n              ? 'text-primary-700 bg-primary-50'\n              : 'text-neutral-700 hover:text-primary-600 hover:bg-primary-50'\n          }`}>\n            <Trophy className=\"h-4 w-4 inline mr-2\" /> Achievements\n          </a>\n        </Link>\n        <Link href=\"/nutrition-education\" onClick={handleLinkClick}>\n          <a className={`block px-3 py-2 rounded-md text-base font-medium ${\n            currentPath === '/nutrition-education'\n              ? 'text-primary-700 bg-primary-50'\n              : 'text-neutral-700 hover:text-primary-600 hover:bg-primary-50'\n          }`}>\n            <BookOpen className=\"h-4 w-4 inline mr-2\" /> Nutrition Education\n          </a>\n        </Link>\n        <Link href=\"/profile\" onClick={handleLinkClick}>\n          <a className={`block px-3 py-2 rounded-md text-base font-medium ${\n            currentPath === '/profile'\n              ? 'text-primary-700 bg-primary-50'\n              : 'text-neutral-700 hover:text-primary-600 hover:bg-primary-50'\n          }`}>\n            <UserIcon className=\"h-4 w-4 inline mr-2\" /> Profile\n          </a>\n        </Link>\n        <Link href=\"/premium-analytics\" onClick={handleLinkClick}>\n          <a className={`block px-3 py-2 rounded-md text-base font-medium ${\n            currentPath === '/premium-analytics'\n              ? 'text-primary-700 bg-primary-50'\n              : 'text-neutral-700 hover:text-primary-600 hover:bg-primary-50'\n          }`}>\n            <BarChart3 className=\"h-4 w-4 inline mr-2\" /> Analytics\n          </a>\n        </Link>\n        <button\n          onClick={handleLogout}\n          className=\"w-full text-left block px-3 py-2 rounded-md text-base font-medium text-neutral-700 hover:text-primary-600 hover:bg-primary-50\"\n        >\n          Logout\n        </button>\n      </nav>\n    </div>\n  );\n}\n","import { useTranslation } from 'react-i18next';\nimport { useCallback } from 'react';\n\nexport function LanguageSwitcher() {\n  const { i18n } = useTranslation();\n\n  const changeLanguage = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n    const lng = e.target.value;\n    i18n.changeLanguage(lng);\n    document.dir = lng === 'ar' ? 'rtl' : 'ltr';\n  }, [i18n]);\n\n  return (\n    <select\n      className=\"border border-neutral-300 rounded-md px-2 py-1 text-sm bg-primary focus:outline-none focus:ring-2 focus:ring-primary-500\"\n      value={i18n.language}\n      onChange={changeLanguage}\n      aria-label=\"Select language\"\n    >\n      <option value=\"en\">English</option>\n      <option value=\"ar\">عربي</option>\n      <option value=\"es\">Español</option>\n      <option value=\"fr\">Français</option>\n      <option value=\"pt\">Português</option>\n    </select>\n  );\n}\n","import { Link, useLocation } from \"wouter\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { MobileMenu } from \"./mobile-menu\";\r\nimport { Leaf, Trophy, BookOpen, User, BarChart3 } from \"lucide-react\";\r\nimport { LanguageSwitcher } from \"./language-switcher\"; // Added import\r\n\r\nexport function Header() {\r\n  const [location] = useLocation();\r\n  const { user, logoutMutation } = useAuth();\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    logoutMutation.mutate();\r\n  };\r\n\r\n  const toggleMobileMenu = () => {\r\n    setIsMobileMenuOpen(!isMobileMenuOpen);\r\n  };\r\n\r\n  const userInitials = user ? `${user.firstName.charAt(0)}${user.lastName.charAt(0)}` : null;\r\n\r\n  return (\r\n    <>\r\n      <header className=\"bg-white/95 border-b border-neutral-200 sticky top-0 z-50 shadow-sm\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center\">\r\n              <Leaf className=\"h-8 w-8 text-primary\" />\r\n              <span className=\"ml-2 text-2xl font-bold text-neutral-800\">NutriScan</span>\r\n            </div>\r\n\r\n            <nav className=\"hidden md:flex space-x-8 items-center\">\r\n              {user ? (\r\n                <>\r\n                  <Link href=\"/dashboard\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/dashboard' ? 'text-primary-600' : ''}`}>\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link href=\"/history\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/history' ? 'text-primary-600' : ''}`}>\r\n                    History\r\n                  </Link>\r\n                  <Link href=\"/chatbot\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/chatbot' ? 'text-primary-600' : ''}`}>\r\n                    Nutrition Coach\r\n                  </Link>\r\n                  <Link href=\"/achievements\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/achievements' ? 'text-primary-600' : ''}`}>\r\n                    <Trophy className=\"h-4 w-4 inline mr-1\" /> Achievements\r\n                  </Link>\r\n                  <Link href=\"/nutrition-education\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/nutrition-education' ? 'text-primary-600' : ''}`}>\r\n                    <BookOpen className=\"h-4 w-4 inline mr-1\" /> Nutrition Education\r\n                  </Link>\r\n                  <Link href=\"/profile\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/profile' ? 'text-primary-600' : ''}`}>\r\n                    <User className=\"h-4 w-4 inline mr-1\" /> Profile\r\n                  </Link>\r\n                  <Link href=\"/premium-analytics\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/premium-analytics' ? 'text-primary-600' : ''}`}>\r\n                    <BarChart3 className=\"h-4 w-4 inline mr-1\" /> Analytics\r\n                  </Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Link href=\"/try-it\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/try-it' ? 'text-primary-600' : ''}`}>\r\n                    Try It\r\n                  </Link>\r\n                  <Link href=\"/about\" className={`text-neutral-700 hover:text-primary-600 font-medium ${location === '/about' ? 'text-primary-600' : ''}`}>\r\n                    About\r\n                  </Link>\r\n                </>\r\n              )}\r\n              <LanguageSwitcher /> {/* Added LanguageSwitcher */}\r\n            </nav>\r\n\r\n            <div className=\"flex items-center\">\r\n              {user ? (\r\n                <>\r\n                  <div className=\"hidden md:flex items-center mr-4\">\r\n                    <span className=\"inline-flex items-center justify-center h-8 w-8 rounded-full bg-primary-100\">\r\n                      <span className=\"text-sm font-medium leading-none text-primary-700\">{userInitials}</span>\r\n                    </span>\r\n                    <span className=\"ml-2 text-neutral-700 font-medium\">{user.firstName} {user.lastName}</span>\r\n                  </div>\r\n                  <Button \r\n                    size=\"sm\"\r\n                    className=\"hidden md:flex\"\r\n                    onClick={handleLogout}\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Link href=\"/login\">\r\n                  <Button variant=\"default\" size=\"sm\" className=\"hidden md:flex\">\r\n                    Sign In\r\n                  </Button>\r\n                </Link>\r\n              )}\r\n\r\n              <button \r\n                type=\"button\" \r\n                className=\"md:hidden inline-flex items-center justify-center p-2 rounded-md text-neutral-500 hover:text-neutral-700 hover:bg-neutral-100 focus:outline-none\"\r\n                onClick={toggleMobileMenu}\r\n                aria-expanded={isMobileMenuOpen}\r\n              >\r\n                <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {isMobileMenuOpen && (\r\n        <MobileMenu \r\n          user={user}\r\n          currentPath={location}\r\n          onLogout={handleLogout}\r\n          onClose={() => setIsMobileMenuOpen(false)} \r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}","\nimport { Link } from \"wouter\";\n\nexport function Footer() {\n  const currentYear = new Date().getFullYear();\n  \n  return (\n    <footer className=\"bg-white border-t border-neutral-200\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"md:flex md:items-center md:justify-between\">\n          <div className=\"flex justify-center md:justify-start space-x-6\">\n            <Link href=\"/about\">\n              <a className=\"text-neutral-500 hover:text-neutral-700\">About</a>\n            </Link>\n            <Link href=\"/terms\">\n              <a className=\"text-neutral-500 hover:text-neutral-700\">Terms</a>\n            </Link>\n            <Link href=\"/privacy\">\n              <a className=\"text-neutral-500 hover:text-neutral-700\">Privacy</a>\n            </Link>\n            <Link href=\"/contact\">\n              <a className=\"text-neutral-500 hover:text-neutral-700\">Contact</a>\n            </Link>\n          </div>\n          <div className=\"mt-4 md:mt-0\">\n            <p className=\"text-center md:text-right text-neutral-500 text-sm\">\n              &copy; {currentYear} NutriScan. All rights reserved.\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import { useState, useRef, useCallback } from 'react';\nimport Webcam from 'react-webcam';\n\ntype CameraHookResult = {\n  webcamRef: React.RefObject<Webcam>;\n  isOpen: boolean;\n  isCameraReady: boolean;\n  capturedImage: string | null;\n  error: string | null;\n  openCamera: () => void;\n  closeCamera: () => void;\n  captureImage: () => void;\n  resetImage: () => void;\n};\n\nexport function useCamera(): CameraHookResult {\n  const webcamRef = useRef<Webcam>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isCameraReady, setIsCameraReady] = useState(false);\n  const [capturedImage, setCapturedImage] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const openCamera = useCallback(() => {\n    setIsOpen(true);\n    setError(null);\n  }, []);\n\n  const closeCamera = useCallback(() => {\n    setIsOpen(false);\n    setIsCameraReady(false);\n    setCapturedImage(null);\n    setError(null);\n  }, []);\n\n  const handleUserMedia = useCallback(() => {\n    setIsCameraReady(true);\n    setError(null);\n  }, []);\n\n  const handleError = useCallback((err: string | DOMException) => {\n    console.error(\"Camera error:\", err);\n    setError(typeof err === 'string' ? err : 'Failed to access camera');\n    setIsCameraReady(false);\n  }, []);\n\n  const captureImage = useCallback(() => {\n    if (webcamRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        setCapturedImage(imageSrc);\n      } else {\n        setError(\"Failed to capture image\");\n      }\n    } else {\n      setError(\"Camera not initialized\");\n    }\n  }, [webcamRef]);\n\n  const resetImage = useCallback(() => {\n    setCapturedImage(null);\n  }, []);\n\n  return {\n    webcamRef,\n    isOpen,\n    isCameraReady,\n    capturedImage,\n    error,\n    openCamera,\n    closeCamera,\n    captureImage,\n    resetImage\n  };\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","import { EnhancedFoodResult } from './camera-view';\r\nimport { Progress } from '../ui/progress';\r\nimport { ArrowLeft, Edit, Check, X, Info, Scale, Heart, Activity } from 'lucide-react';\r\nimport { Button } from '../ui/button';\r\nimport { useState } from 'react';\r\n\r\ninterface EnhancedResultsDisplayProps {\r\n  results: EnhancedFoodResult;\r\n  onBack: () => void;\r\n  onUpdate?: (index: number, updatedFood: any) => void;\r\n}\r\n\r\nexport function EnhancedResultsDisplay({ results, onBack, onUpdate }: EnhancedResultsDisplayProps) {\r\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\r\n  const [portionSize, setPortionSize] = useState<number>(0);\r\n  const [showDetails, setShowDetails] = useState<boolean[]>([]);\r\n\r\n  const handleEdit = (index: number) => {\r\n    setEditingIndex(index);\r\n    setPortionSize(results.foods?.[index]?.portionSize?.estimatedWeight || 0);\r\n  };\r\n\r\n  const handleSave = (index: number) => {\r\n    if (portionSize <= 0) return;\r\n    \r\n    const original = results.foods?.[index];\r\n    if (!original) return;\r\n    \r\n    const ratio = portionSize / (original.portionSize?.estimatedWeight || 1);\r\n    \r\n    const updatedFood = {\r\n      ...original,\r\n      portionSize: {\r\n        ...original.portionSize,\r\n        estimatedWeight: portionSize\r\n      },\r\n      nutritionalInfo: {\r\n        ...original.nutritionalInfo,\r\n        calories: Math.round(original.nutritionalInfo?.calories || 0 * ratio),\r\n        protein: Math.round((original.nutritionalInfo?.protein || 0) * ratio * 10) / 10,\r\n        carbs: Math.round((original.nutritionalInfo?.carbs || 0) * ratio * 10) / 10,\r\n        fat: Math.round((original.nutritionalInfo?.fat || 0) * ratio * 10) / 10\r\n      }\r\n    };\r\n\r\n    if (onUpdate) {\r\n      onUpdate(index, updatedFood);\r\n    }\r\n    setEditingIndex(null);\r\n  };\r\n\r\n  const toggleDetails = (index: number) => {\r\n    const newShowDetails = [...showDetails];\r\n    newShowDetails[index] = !newShowDetails[index];\r\n    setShowDetails(newShowDetails);\r\n  };\r\n\r\n  // Handle error case\r\n  if (results.error) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black z-50 p-4 flex flex-col\">\r\n        <button \r\n          onClick={onBack}\r\n          className=\"absolute top-4 left-4 text-white bg-black/50 rounded-full p-2 z-10\"\r\n        >\r\n          <ArrowLeft className=\"h-6 w-6\" />\r\n        </button>\r\n\r\n        <div className=\"flex-1 flex items-center justify-center\">\r\n          <div className=\"bg-white rounded-xl p-8 shadow-xl text-center max-w-md\">\r\n            <div className=\"text-red-500 mb-4\">\r\n              <Activity className=\"h-12 w-12 mx-auto\" />\r\n            </div>\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Analysis Failed</h2>\r\n            <p className=\"text-gray-600 mb-6\">{results.error}</p>\r\n            <div className=\"space-y-3\">\r\n              <Button \r\n                onClick={() => onBack()} \r\n                className=\"w-full\"\r\n                variant=\"outline\"\r\n              >\r\n                Try Again\r\n              </Button>\r\n              <Button \r\n                onClick={() => {\r\n                  // Fallback to original image\r\n                  if (results.fallbackData) {\r\n                    onBack();\r\n                  }\r\n                }} \r\n                className=\"w-full\"\r\n              >\r\n                Use Original Image\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle single food result\r\n  if (results.foodName) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black z-50 p-4 flex flex-col\">\r\n        <button \r\n          onClick={onBack}\r\n          className=\"absolute top-4 left-4 text-white bg-black/50 rounded-full p-2 z-10\"\r\n        >\r\n          <ArrowLeft className=\"h-6 w-6\" />\r\n        </button>\r\n\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          <div className=\"max-w-2xl mx-auto\">\r\n            <div className=\"bg-white rounded-xl shadow-xl p-6 mb-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h2 className=\"text-2xl font-bold text-gray-800\">{results.foodName}</h2>\r\n                {results.nutritionalInfo?.healthScore && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Heart className=\"h-5 w-5 text-red-500\" />\r\n                    <span className=\"font-semibold text-gray-700\">\r\n                      Health Score: {results.nutritionalInfo.healthScore}/100\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"mb-6\">\r\n                <div className=\"flex justify-between mb-2\">\r\n                  <span className=\"text-lg font-medium\">Calories</span>\r\n                  <span className=\"text-2xl font-bold text-primary-600\">\r\n                    {results.nutritionalInfo?.calories || 0}\r\n                  </span>\r\n                </div>\r\n                <Progress \r\n                  value={Math.min((results.nutritionalInfo?.calories || 0) / 800 * 100, 100)} \r\n                  className=\"h-3\" \r\n                />\r\n              </div>\r\n\r\n              {results.portionSize && (\r\n                <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <Scale className=\"h-5 w-5 text-blue-600\" />\r\n                    <h3 className=\"font-semibold text-blue-800\">Portion Size</h3>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <div className=\"bg-white rounded-lg px-3 py-2 text-sm font-medium\">\r\n                      {results.portionSize.estimatedWeight}g\r\n                    </div>\r\n                    {results.portionSize.referenceObject && (\r\n                      <div className=\"bg-white rounded-lg px-3 py-2 text-sm text-gray-600\">\r\n                        Compared to {results.portionSize.referenceObject}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"grid grid-cols-3 gap-4 mb-6\">\r\n                <div className=\"bg-green-50 p-4 rounded-lg text-center\">\r\n                  <div className=\"text-sm text-green-600 mb-1\">Protein</div>\r\n                  <div className=\"text-xl font-bold text-green-800\">\r\n                    {results.nutritionalInfo?.protein || 0}g\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-yellow-50 p-4 rounded-lg text-center\">\r\n                  <div className=\"text-sm text-yellow-600 mb-1\">Carbs</div>\r\n                  <div className=\"text-xl font-bold text-yellow-800\">\r\n                    {results.nutritionalInfo?.carbs || 0}g\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-red-50 p-4 rounded-lg text-center\">\r\n                  <div className=\"text-sm text-red-600 mb-1\">Fat</div>\r\n                  <div className=\"text-xl font-bold text-red-800\">\r\n                    {results.nutritionalInfo?.fat || 0}g\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {results.analysisMetadata && (\r\n                <div className=\"text-sm text-gray-500 border-t pt-4\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Processing Time:</span>\r\n                    <span>{results.analysisMetadata.processingTime}ms</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Model Version:</span>\r\n                    <span>{results.analysisMetadata.modelVersion}</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex gap-3\">\r\n              <Button \r\n                onClick={onBack}\r\n                className=\"flex-1\"\r\n              >\r\n                Done\r\n              </Button>\r\n              <Button \r\n                variant=\"outline\"\r\n                onClick={() => {\r\n                  // Allow editing portion size\r\n                  if (results.portionSize) {\r\n                    setEditingIndex(0);\r\n                    setPortionSize(results.portionSize.estimatedWeight);\r\n                  }\r\n                }}\r\n              >\r\n                <Edit className=\"h-4 w-4 mr-2\" />\r\n                Edit Portion\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle multi-food results\r\n  if (results.foods && results.foods.length > 0) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black z-50 p-4 flex flex-col\">\r\n        <button \r\n          onClick={onBack}\r\n          className=\"absolute top-4 left-4 text-white bg-black/50 rounded-full p-2 z-10\"\r\n        >\r\n          <ArrowLeft className=\"h-6 w-6\" />\r\n        </button>\r\n\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          <div className=\"max-w-6xl mx-auto\">\r\n            <div className=\"mb-6\">\r\n              <h2 className=\"text-2xl font-bold text-white mb-2\">Detected Foods</h2>\r\n              {results.analysisMetadata && (\r\n                <p className=\"text-gray-300\">\r\n                  Found {results.analysisMetadata.totalFoods} foods with average confidence of {(results.analysisMetadata.averageConfidence * 100).toFixed(1)}%\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {results.foods.map((food: any, index: number) => (\r\n                <div key={index} className=\"bg-white rounded-xl shadow-lg p-6\">\r\n                  <div className=\"flex justify-between items-start mb-4\">\r\n                    <h3 className=\"text-xl font-bold text-gray-800\">{food.foodName}</h3>\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => toggleDetails(index)}\r\n                        className=\"text-gray-500 hover:text-gray-700\"\r\n                      >\r\n                        <Info size={18} />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleEdit(index)}\r\n                        className=\"text-blue-600 hover:text-blue-800\"\r\n                      >\r\n                        <Edit size={18} />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"mb-4\">\r\n                    <div className=\"flex justify-between mb-2\">\r\n                      <span>Calories</span>\r\n                      <span className=\"font-semibold\">{food.nutritionalInfo?.calories || 0}</span>\r\n                    </div>\r\n                    <Progress value={Math.min((food.nutritionalInfo?.calories || 0) / 800 * 100, 100)} className=\"h-2\" />\r\n                  </div>\r\n\r\n                  {editingIndex === index ? (\r\n                    <div className=\"mb-4 p-4 bg-gray-50 rounded-lg\">\r\n                      <label className=\"block text-sm font-medium mb-2\">Adjust Portion (grams)</label>\r\n                      <div className=\"flex gap-2\">\r\n                        <input\r\n                          type=\"number\"\r\n                          value={portionSize}\r\n                          onChange={(e) => setPortionSize(Number(e.target.value))}\r\n                          className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md\"\r\n                          min=\"1\"\r\n                        />\r\n                        <Button size=\"sm\" onClick={() => handleSave(index)}>\r\n                          <Check size={16} />\r\n                        </Button>\r\n                        <Button size=\"sm\" variant=\"outline\" onClick={() => setEditingIndex(null)}>\r\n                          <X size={16} />\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    food.portionSize && (\r\n                      <div className=\"mb-4\">\r\n                        <h4 className=\"font-medium mb-2\">Portion Size</h4>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <div className=\"bg-gray-100 rounded-lg px-3 py-1 text-sm\">\r\n                            {food.portionSize.estimatedWeight}g\r\n                          </div>\r\n                          {food.portionSize.referenceObject !== 'none' && (\r\n                            <div className=\"bg-gray-100 rounded-lg px-3 py-1 text-sm\">\r\n                              Compared to {food.portionSize.referenceObject}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  )}\r\n\r\n                  <div className=\"grid grid-cols-3 gap-3 mb-4\">\r\n                    <div className=\"bg-blue-50 p-3 rounded-lg text-center\">\r\n                      <div className=\"text-xs text-blue-600\">Protein</div>\r\n                      <div className=\"font-bold text-blue-800\">{food.nutritionalInfo?.protein || 0}g</div>\r\n                    </div>\r\n                    <div className=\"bg-green-50 p-3 rounded-lg text-center\">\r\n                      <div className=\"text-xs text-green-600\">Carbs</div>\r\n                      <div className=\"font-bold text-green-800\">{food.nutritionalInfo?.carbs || 0}g</div>\r\n                    </div>\r\n                    <div className=\"bg-yellow-50 p-3 rounded-lg text-center\">\r\n                      <div className=\"text-xs text-yellow-600\">Fat</div>\r\n                      <div className=\"font-bold text-yellow-800\">{food.nutritionalInfo?.fat || 0}g</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {food.healthScore && (\r\n                    <div className=\"mb-2\">\r\n                      <div className=\"flex justify-between mb-1\">\r\n                        <span>Health Score</span>\r\n                        <span>{food.healthScore}/100</span>\r\n                      </div>\r\n                      <Progress value={food.healthScore} className=\"h-2 bg-gray-200\" />\r\n                    </div>\r\n                  )}\r\n\r\n                  {showDetails[index] && (\r\n                    <div className=\"mt-4 pt-4 border-t\">\r\n                      <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n                        <div>\r\n                          <span className=\"text-gray-600\">Confidence:</span>\r\n                          <span className=\"font-medium ml-2\">{(food.confidence * 100).toFixed(1)}%</span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"text-gray-600\">Category:</span>\r\n                          <span className=\"font-medium ml-2\">{food.category || 'Unknown'}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {results.analysisMetadata && (\r\n              <div className=\"mt-6 p-4 bg-white/10 rounded-lg\">\r\n                <div className=\"text-sm text-gray-300\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Processing Time:</span>\r\n                    <span>{results.analysisMetadata.processingTime}ms</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Model Version:</span>\r\n                    <span>{results.analysisMetadata.modelVersion}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mt-6\">\r\n              <Button \r\n                onClick={onBack}\r\n                className=\"w-full\"\r\n              >\r\n                Done\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Fallback for unknown result format\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black z-50 p-4 flex flex-col\">\r\n      <button \r\n        onClick={onBack}\r\n        className=\"absolute top-4 left-4 text-white bg-black/50 rounded-full p-2 z-10\"\r\n      >\r\n        <ArrowLeft className=\"h-6 w-6\" />\r\n      </button>\r\n\r\n      <div className=\"flex-1 flex items-center justify-center\">\r\n        <div className=\"text-white text-center\">\r\n          <p>No results available</p>\r\n          <Button onClick={onBack} className=\"mt-4\">\r\n            Back\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useCamera } from \"../../hooks/use-camera\";\nimport Webcam from \"react-webcam\";\nimport { Eye, Camera, ArrowLeft, Loader2 } from \"lucide-react\";\nimport { Button } from \"../ui/button\";\nimport { useEffect, useState } from \"react\";\nimport { API_URL } from \"../../lib/config\";\nimport { apiRequest } from \"../../lib/queryClient\";\nimport { EnhancedResultsDisplay } from \"./enhanced-results-display\";\n\n\ninterface CameraViewProps {\n  onCapture: (imageData: string | string[] | EnhancedFoodResult) => void;\n  onClose: () => void;\n  isAnalyzing: boolean;\n}\n\ninterface EnhancedFoodResult {\n  foods?: any[];\n  analysisMetadata?: {\n    processingTime: number;\n    modelVersion: string;\n    confidenceThreshold: number;\n    totalFoods: number;\n    averageConfidence: number;\n  };\n  foodName?: string;\n  nutritionalInfo?: {\n    calories: number;\n    protein: number;\n    carbs: number;\n    fat: number;\n  };\n  error?: string;\n  fallbackData?: string | string[] | null;\n}\n\nexport function CameraView({ onCapture, onClose, isAnalyzing }: CameraViewProps) {\n  const {\n    webcamRef,\n    isCameraReady,\n    capturedImage,\n    error,\n    captureImage,\n    resetImage\n  } = useCamera();\n  \n  const [localIsCameraReady, setLocalIsCameraReady] = useState(false);\n  const [localError, setError] = useState<string | null>(null);\n  const [multiMode, setMultiMode] = useState(false);\n  const [capturedFoods, setCapturedFoods] = useState<string[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState<EnhancedFoodResult | null>(null);\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"environment\"\n  };\n\n  useEffect(() => {\n    if (!isAnalyzing && capturedImage) {\n      if (multiMode) {\n        setCapturedFoods([...capturedFoods, capturedImage]);\n        resetImage();\n      } else {\n        onClose();\n      }\n    }\n  }, [isAnalyzing, capturedImage, onClose]);\n\n  const handleFinalCapture = async () => {\n    if ((multiMode && capturedFoods.length > 0) || (!multiMode && capturedImage)) {\n      try {\n        setIsProcessing(true);\n\n        // Get the captured image data (already a data URL)\n        const imageData = capturedImage || capturedFoods[0];\n\n        // Validate the data URL format\n        if (!imageData || !imageData.startsWith('data:image/')) {\n          throw new Error('Invalid image data format');\n        }\n\n        // Ensure proper MIME type\n        if (!imageData.includes('data:image/jpeg') && !imageData.includes('data:image/png')) {\n          throw new Error('Unsupported image format. Please use JPEG or PNG images.');\n        }\n\n        // Call enhanced API based on mode\n        const endpoint = multiMode\n          ? '/api/user/enhanced-food-recognition/analyze-multi'\n          : '/api/user/enhanced-food-recognition/analyze-single';\n\n        const options = {\n          enablePortionEstimation: true,\n          enable3DEstimation: false,\n          confidenceThreshold: 0.7,\n          referenceObjects: ['hand', 'credit_card', 'smartphone'],\n          restaurantMode: false\n        };\n\n        const response = await apiRequest('POST', `${API_URL}${endpoint}`, { imageData, options });\n\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.error || 'Failed to analyze image');\n        }\n\n        const result = await response.json();\n        \n        // Handle different response formats\n        const processedResult = result.success ? result.data : result;\n        \n        if (multiMode) {\n          // For multi-mode, ensure we have an array of foods\n          const foods = Array.isArray(processedResult.foods) ? processedResult.foods :\n                       Array.isArray(processedResult) ? processedResult :\n                       [processedResult];\n          const enhancedResult = {\n            foods,\n            analysisMetadata: processedResult.analysisMetadata\n          };\n          setAnalysisResult(enhancedResult);\n        } else {\n          // For single mode, ensure we have the food data\n          const foodData = processedResult.data || processedResult;\n          const enhancedResult = {\n            foodName: foodData.foodName,\n            nutritionalInfo: foodData.nutritionalInfo,\n            portionSize: foodData.portionSize,\n            analysisMetadata: processedResult.analysisMetadata\n          };\n          setAnalysisResult(enhancedResult);\n        }\n      } catch (error) {\n        console.error('Enhanced food analysis failed:', error);\n\n        // Provide more specific error messages\n        let errorMessage = 'Analysis failed';\n        if (error instanceof Error) {\n          if (error.message.includes('Invalid image data format')) {\n            errorMessage = 'Invalid image format. Please try capturing the image again.';\n          } else if (error.message.includes('Unsupported image format')) {\n            errorMessage = 'Unsupported image format. Please use JPEG or PNG images.';\n          } else if (error.message.includes('Failed to fetch')) {\n            errorMessage = 'Network error. Please check your connection and try again.';\n          } else {\n            errorMessage = error.message;\n          }\n        }\n\n        // Fallback to original capture with error message\n        const fallbackData = multiMode ? capturedFoods : capturedImage;\n        onCapture({\n          error: errorMessage,\n          fallbackData: capturedFoods.length > 0 ? capturedFoods : capturedImage || null\n        });\n      } finally {\n        setIsProcessing(false);\n      }\n    }\n  };\n\n  const toggleMultiMode = () => {\n    if (!multiMode) {\n      setCapturedFoods([]);\n    }\n    setMultiMode(!multiMode);\n    resetImage();\n  };\n\n// Handle closing results and returning to camera\n  const handleCloseResults = () => {\n    setAnalysisResult(null);\n    resetImage();\n    setCapturedFoods([]);\n  };\n\n  // Show enhanced results if available\n  if (analysisResult) {\n    return (\n      <EnhancedResultsDisplay \n        results={analysisResult} \n        onBack={handleCloseResults}\n      />\n    );\n  }\n  return (\n    <div className=\"fixed inset-0 bg-black z-50\">\n      <div className=\"relative h-full\">\n        {!capturedImage ? (\n          <>\n            <Webcam\n              audio={false}\n              ref={webcamRef}\n              screenshotFormat=\"image/jpeg\"\n              videoConstraints={videoConstraints}\n              className=\"h-full w-full object-cover\"\n              onUserMedia={() => { setLocalIsCameraReady(true); }}\n              onUserMediaError={(err) => { \n                console.error(\"Camera error:\", err);\n                setError(typeof err === 'string' ? err : 'Failed to access camera');\n              }}\n            />\n\n            {(error || localError) && (\n              <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-80\">\n                <div className=\"text-white text-center p-4\">\n                  <p className=\"mb-4\">{error || localError}</p>\n                  <Button variant=\"default\" onClick={onClose}>\n                    Close\n                  </Button>\n                </div>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"h-full w-full\">\n            <img src={capturedImage} alt=\"Captured meal\" className=\"h-full w-full object-cover\" />\n          </div>\n        )}\n\n        <div className=\"camera-overlay\">\n          {isAnalyzing && (\n            <div className=\"absolute inset-0 bg-black bg-opacity-60 flex items-center justify-center z-10\">\n              <div className=\"bg-white p-6 rounded-xl shadow-xl text-center max-w-sm\">\n                <Loader2 className=\"h-12 w-12 text-primary-600 animate-spin mx-auto mb-4\" />\n                <h3 className=\"text-xl font-bold text-neutral-800 mb-2\">Analyzing Your Meal</h3>\n                <p className=\"text-neutral-600 mb-4\">Our AI is working on identifying your food and calculating nutritional information.</p>\n                <div className=\"w-full h-2 bg-neutral-200 rounded-full overflow-hidden\">\n                  <div className=\"h-full bg-primary-500 animate-pulse rounded-full\"></div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex justify-between w-full px-6 mb-4\">\n            <Button \n              variant=\"secondary\"\n              size=\"lg\"\n              className=\"rounded-full bg-white shadow-lg h-14 w-14 flex items-center justify-center\"\n              onClick={onClose}\n              disabled={isAnalyzing}\n            >\n              <ArrowLeft className=\"h-7 w-7 text-neutral-900\" />\n            </Button>\n            \n            {!capturedImage ? (\n              <Button \n                variant=\"default\" \n                size=\"lg\"\n                className=\"rounded-full bg-primary-600 shadow-lg h-16 w-16 flex items-center justify-center\"\n                onClick={captureImage}\n                disabled={!localIsCameraReady || isAnalyzing}\n              >\n                <Camera className=\"h-8 w-8 text-white\" />\n              </Button>\n            ) : (\n              <Button\n                variant=\"default\"\n                size=\"lg\"\n                className=\"rounded-full bg-primary-600 shadow-lg h-16 w-16 flex items-center justify-center\"\n                onClick={handleFinalCapture}\n                disabled={isAnalyzing}\n              >\n                {isAnalyzing ? (\n                  <Loader2 className=\"h-8 w-8 text-white animate-spin\" />\n                ) : (\n                  <Eye className=\"h-8 w-8 text-white\" />\n                )}\n              </Button>\n            )}\n            <Button\n              variant={multiMode ? \"default\" : \"secondary\"}\n              size=\"lg\"\n              className=\"rounded-full bg-white shadow-lg h-14 w-14 flex items-center justify-center\"\n              onClick={toggleMultiMode}\n              disabled={isAnalyzing}\n            >\n              {multiMode ? (\n                <span className=\"text-lg font-bold\">+</span>\n              ) : (\n                <span className=\"text-lg font-bold\">1</span>\n              )}\n            </Button>\n          </div>\n          <div className=\"text-center text-white text-base font-medium mb-4 px-6 py-2 bg-black bg-opacity-40 rounded-full\">\n            {isAnalyzing ? \"Analyzing your meal...\" :\n              multiMode ? `Captured ${capturedFoods.length} items. Add more or finish.` : \"Position your meal in the frame\"}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Camera, Upload, Loader2 } from \"lucide-react\";\nimport { useState, useRef, ChangeEvent, useEffect } from \"react\";\nimport { useCamera } from \"@/hooks/use-camera\";\nimport { CameraView } from \"@/components/camera/camera-view\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { MealAnalysis } from \"@shared/schema\";\nimport { Switch } from \"@/components/ui/switch\";\n\nexport function CameraUploadCard() {\n  const { toast } = useToast();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [uploadedImage, setUploadedImage] = useState<string | null>(null);\n  const [multiFoodMode, setMultiFoodMode] = useState(false);\n  const [multiFoodResult, setMultiFoodResult] = useState<any | null>(null);\n  const {\n    isOpen: isCameraOpen,\n    capturedImage,\n    openCamera,\n    closeCamera\n  } = useCamera();\n\n  const analyzeImageMutation = useMutation({\n    mutationFn: async (imageData: string) => {\n      const res = await apiRequest(\"POST\", \"/api/analyze-food\", { imageData });\n      return res.json();\n    },\n    onSuccess: (analysis: MealAnalysis) => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/meal-analyses\"] });\n      toast({\n        title: \"Analysis complete!\",\n        description: `Detected ${analysis.foodName} with ${analysis.estimatedCalories} calories.`,\n      });\n      setUploadedImage(null);\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Analysis failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const imageData = event.target?.result as string;\n      setUploadedImage(imageData);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleUploadClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const analyzeImage = () => {\n    if (!uploadedImage && !capturedImage) return;\n    setMultiFoodResult(null);\n    if (multiFoodMode) {\n      analyzeMultiFood(uploadedImage || capturedImage!);\n    } else {\n      analyzeImageMutation.mutate(uploadedImage || capturedImage!);\n    }\n  };\n\n  const analyzeMultiFood = async (imageData: string) => {\n    try {\n      const res = await apiRequest(\"POST\", \"/api/analyze-multi-food\", { imageData });\n      const data = await res.json();\n      setMultiFoodResult(data);\n      toast({\n        title: \"Multi-Food Analysis complete!\",\n        description: `Detected ${data.foods.length} foods in the image.`,\n      });\n      setUploadedImage(null);\n    } catch (error: any) {\n      toast({\n        title: \"Multi-Food Analysis failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const resetUpload = () => {\n    setUploadedImage(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  };\n\n  const isLoading = analyzeImageMutation.isPending;\n\n  useEffect(() => {\n    if (isCameraOpen && capturedImage) {\n      setUploadedImage(capturedImage);\n    }\n    // If camera is closed, clear uploadedImage if it was set by camera\n    if (!isCameraOpen && uploadedImage === capturedImage) {\n      setUploadedImage(null);\n    }\n  }, [isCameraOpen, capturedImage]);\n\n  return (\n    <>\n      <Card className=\"card-gradient hover-effect rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\n        <CardHeader className=\"px-6 py-5 border-b border-neutral-200 flex flex-col gap-2\">\n          <CardTitle className=\"text-xl font-semibold text-neutral-800\">Scan Your Meal</CardTitle>\n          <div className=\"flex items-center gap-2\">\n            <Switch checked={multiFoodMode} onCheckedChange={setMultiFoodMode} id=\"multi-food-switch\" />\n            <label htmlFor=\"multi-food-switch\" className=\"text-sm text-neutral-500 cursor-pointer\">Multi-Food Recognition</label>\n          </div>\n        </CardHeader>\n        <CardContent className=\"p-6\">\n          <div className=\"relative bg-neutral-100 rounded-lg overflow-hidden\" style={{ minHeight: \"300px\" }}>\n            {uploadedImage ? (\n              <div className=\"absolute inset-0\">\n                <img \n                  src={uploadedImage} \n                  alt=\"Uploaded meal\" \n                  className=\"w-full h-full object-cover\"\n                />\n                <div className=\"absolute inset-0 bg-black bg-opacity-60 flex items-center justify-center\">\n                  <div className=\"flex flex-col items-center p-4 space-y-4\">\n                    <Button onClick={analyzeImage} disabled={isLoading} className=\"border border-neutral-100 bg-primary-600 hover:bg-primary-700 text-white font-medium px-6 py-2 h-12 text-base\">\n                      {isLoading ? (\n                        <>\n                          <Loader2 className=\"h-5 w-5 mr-2 animate-spin\" />\n                          Analyzing...\n                        </>\n                      ) : (\n                        \"Analyze Image\"\n                      )}\n                    </Button>\n                    <Button variant=\"secondary\" onClick={resetUpload} disabled={isLoading} className=\"font-medium\">\n                      Cancel\n                    </Button>\n                    {isLoading && (\n                      <div className=\"mt-2 text-white text-center\">\n                        <p className=\"mb-2\">AI is analyzing your meal</p>\n                        <div className=\"w-48 h-2 bg-gray-700 rounded-full overflow-hidden\">\n                          <div className=\"h-full bg-primary-500 animate-pulse rounded-full\"></div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"absolute inset-0 flex flex-col items-center justify-center p-6 text-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 text-neutral-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                <p className=\"text-neutral-600 font-medium mb-2\">Take a photo or upload an image of your meal</p>\n                <p className=\"text-neutral-500 text-sm\">Supported formats: JPG, PNG</p>\n              </div>\n            )}\n\n            <div className=\"absolute bottom-0 inset-x-0 p-6 flex justify-center space-x-4\">\n              <Button \n                onClick={handleUploadClick} \n                variant=\"outline\" \n                className=\"inline-flex items-center px-4 py-2.5 border border-neutral-300 shadow-sm text-sm font-medium rounded-md text-neutral-700 bg-white hover:bg-neutral-50\"\n                disabled={isLoading}\n              >\n                <Upload className=\"h-5 w-5 mr-2 text-neutral-500\" />\n                Upload Photo\n              </Button>\n\n              <Button \n                onClick={openCamera}\n                className=\"inline-flex items-center px-4 py-2.5 border border-transparent text-sm font-medium rounded-md shadow-sm bg-primary hover:bg-primary-700\"\n                disabled={isLoading}\n              >\n                <Camera className=\"h-5 w-5 mr-2\" />\n                Take Photo\n              </Button>\n\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                onChange={handleFileChange}\n                accept=\"image/jpeg, image/png\"\n                className=\"hidden\"\n              />\n            </div>\n          </div>\n\n          {multiFoodResult && (\n            <div className=\"mt-6\">\n              <h3 className=\"text-lg font-semibold mb-2\">Detected Foods</h3>\n              <ul className=\"divide-y divide-neutral-200\">\n                {multiFoodResult.foods.map((food: any, idx: number) => (\n                  <li key={idx} className=\"py-3\">\n                    <div className=\"font-medium text-neutral-900\">{food.foodName}</div>\n                    <div className=\"text-sm text-neutral-600 flex gap-4\">\n                      <span>Calories: {food.calories}</span>\n                      <span>Protein: {food.protein}g</span>\n                      <span>Carbs: {food.carbs}g</span>\n                      <span>Fat: {food.fat}g</span>\n                      <span>Fiber: {food.fiber}g</span>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {isCameraOpen && (\n        <CameraView\n          onCapture={() => {\n            // CameraView handles capture and sets capturedImage in useCamera\n            // The effect below will set uploadedImage when capturedImage is set\n            closeCamera();\n          }}\n          onClose={closeCamera}\n          isAnalyzing={isLoading}\n        />\n      )}\n    </>\n  );\n}","interface NutritionChartProps {\n  value: number;\n  maxValue: number;\n  color: string;\n}\n\nexport function NutritionChart({ value, maxValue, color }: NutritionChartProps) {\n  const percentage = Math.min(100, Math.max(0, (value / maxValue) * 100));\n  \n  return (\n    <div className=\"nutrition-chart\">\n      <div \n        className={`nutrition-fill ${color}`} \n        style={{ width: `${percentage}%` }} \n      />\n    </div>\n  );\n}\n","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Link } from \"wouter\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { MealAnalysis } from \"@shared/schema\";\r\nimport { Loader2 } from \"lucide-react\";\r\nimport { NutritionChart } from \"./nutrition-chart\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\nexport function RecentResultsCard() {\r\n  const { data: analyses, isLoading, error } = useQuery<MealAnalysis[]>({\r\n    queryKey: [\"/api/meal-analyses\"],\r\n  });\r\n\r\n  return (\r\n    <Card className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\r\n      <CardHeader className=\"px-6 py-5 border-b border-neutral-200 flex justify-between items-center\">\r\n        <div>\r\n          <CardTitle className=\"text-xl font-semibold text-neutral-800\">Recent Results</CardTitle>\r\n          <p className=\"text-neutral-600 text-sm mt-1\">Your latest meal analysis</p>\r\n        </div>\r\n        <Link href=\"/history\" className=\"text-sm font-medium text-primary hover:text-primary-700\">View All</Link>\r\n      </CardHeader>\r\n      \r\n      <CardContent className=\"p-0\">\r\n        {isLoading ? (\r\n          <div className=\"flex justify-center items-center py-12\">\r\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"p-6 text-center text-neutral-600\">\r\n            <p>Error loading results</p>\r\n          </div>\r\n        ) : analyses && analyses.length > 0 ? (\r\n          <div className=\"divide-y divide-neutral-200\">\r\n            {analyses.slice(0, 3).map((analysis) => {\r\n              // Resolve image URL: support data URLs, absolute URLs, and server-stored paths (including Windows paths)\r\n              const resolveImageSrc = (url: string | null | undefined): string => {\r\n                if (!url) return '/placeholder-food.svg';\r\n                // If it's already a data URL or absolute http(s), use as-is\r\n                if (url.startsWith('data:') || url.startsWith('http://') || url.startsWith('https://')) return url;\r\n                // Normalize any backslashes from Windows paths and extract filename\r\n                const normalized = url.replace(/\\\\/g, '/');\r\n                const filename = normalized.split('/').pop() || normalized;\r\n                // Default to optimized via proxy endpoint\r\n                return `/api/images/optimized/${filename}`;\r\n              };\r\n\r\n              const imgSrc = resolveImageSrc(analysis.imageUrl);\r\n\r\n              return (\r\n                <div key={analysis.id} className=\"p-6 flex flex-col md:flex-row\">\r\n                  <div className=\"flex-shrink-0 w-full md:w-32 h-24 md:h-32 mb-4 md:mb-0 md:mr-6 bg-neutral-200 rounded-lg overflow-hidden relative\">\r\n                    <img\r\n                      src={imgSrc}\r\n                      alt={analysis.foodName}\r\n                      className=\"w-full h-full object-cover\"\r\n                      onError={(e) => {\r\n                        const target = e.currentTarget as HTMLImageElement;\r\n                        // Try thumbnail, then original as fallback, then placeholder\r\n                        if (!target.dataset.fallbackTried) {\r\n                          target.dataset.fallbackTried = '1';\r\n                          const raw = (analysis.imageUrl || '').replace(/\\\\/g, '/');\r\n                          const fname = raw.split('/').pop() || '';\r\n                          if (fname) {\r\n                            target.src = `/api/images/thumbnail/${fname}`;\r\n                            return;\r\n                          }\r\n                        } else if (target.dataset.fallbackTried === '1') {\r\n                          target.dataset.fallbackTried = '2';\r\n                          const raw = (analysis.imageUrl || '').replace(/\\\\/g, '/');\r\n                          const fname = raw.split('/').pop() || '';\r\n                          if (fname) {\r\n                            target.src = `/api/images/original/${fname}`;\r\n                            return;\r\n                          }\r\n                        }\r\n                        target.src = '/placeholder-food.svg';\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-grow\">\r\n                    <div className=\"flex flex-col md:flex-row md:justify-between md:items-start mb-4\">\r\n                      <div>\r\n                        <h3 className=\"text-lg font-medium text-neutral-900\">{analysis.foodName}</h3>\r\n                        <p className=\"text-sm text-neutral-500\">\r\n                          {analysis.analysisTimestamp ? formatDistanceToNow(new Date(analysis.analysisTimestamp), { addSuffix: true }) : 'No date available'}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"mt-2 md:mt-0 flex items-center bg-primary-50 text-primary-800 py-1 px-3 rounded-full text-sm font-medium\">\r\n                        <span>{analysis.estimatedCalories || 0} calories</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"grid grid-cols-2 gap-4 mt-2\">\r\n                      <div>\r\n                        <div className=\"flex justify-between items-center mb-1\">\r\n                          <span className=\"text-sm font-medium text-neutral-700\">Protein</span>\r\n                          <span className=\"text-sm text-neutral-600\">{parseFloat(analysis.estimatedProtein || '0')}g</span>\r\n                        </div>\r\n                        <NutritionChart\r\n                          value={parseFloat(analysis.estimatedProtein || '0')}\r\n                          maxValue={50}\r\n                          color=\"bg-chart-1\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"flex justify-between items-center mb-1\">\r\n                          <span className=\"text-sm font-medium text-neutral-700\">Carbs</span>\r\n                          <span className=\"text-sm text-neutral-600\">{parseFloat(analysis.estimatedCarbs || '0')}g</span>\r\n                        </div>\r\n                        <NutritionChart\r\n                          value={parseFloat(analysis.estimatedCarbs || '0')}\r\n                          maxValue={100}\r\n                          color=\"bg-chart-2\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"flex justify-between items-center mb-1\">\r\n                          <span className=\"text-sm font-medium text-neutral-700\">Fat</span>\r\n                          <span className=\"text-sm text-neutral-600\">{parseFloat(analysis.estimatedFat || '0')}g</span>\r\n                        </div>\r\n                        <NutritionChart\r\n                          value={parseFloat(analysis.estimatedFat || '0')}\r\n                          maxValue={40}\r\n                          color=\"bg-chart-3\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"flex justify-between items-center mb-1\">\r\n                          <span className=\"text-sm font-medium text-neutral-700\">Fiber</span>\r\n                          <span className=\"text-sm text-neutral-600\">0g</span>\r\n                        </div>\r\n                        <NutritionChart\r\n                          value={0}\r\n                          maxValue={20}\r\n                          color=\"bg-chart-4\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"p-6 text-center text-neutral-600\">\r\n            <p>No meal analyses yet. Take a photo of your meal to get started!</p>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Flame, BarChart2, PieChart, CalendarCheck, Trophy } from \"lucide-react\";\r\nimport { WeeklyStats } from \"@shared/schema\";\r\n\r\nexport function OverviewCard({ stats, daysOfWeek }: { stats: WeeklyStats | undefined, daysOfWeek: string[] }) {\r\n  if (!stats) return (\r\n    <Card className=\"card-gradient glass-effect rounded-xl border border-neutral-800\">\r\n      <CardHeader><CardTitle>Overview</CardTitle></CardHeader>\r\n      <CardContent className=\"text-neutral-400 text-center py-8\">No stats available.</CardContent>\r\n    </Card>\r\n  );\r\n  const caloriesByDay = stats.caloriesByDay as Record<string, number>;\r\n  return (\r\n    <Card className=\"card-gradient glass-effect rounded-xl border border-neutral-800\">\r\n      <CardHeader><CardTitle>Overview</CardTitle></CardHeader>\r\n      <CardContent>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"bg-gradient-to-br from-primary-900 to-neutral-900 rounded-xl p-5 shadow-md flex items-center gap-4\" aria-label=\"Average Daily Calories\" tabIndex={0}>\r\n            <Flame className=\"w-8 h-8 text-primary-200 bg-primary-900 rounded-full p-1 shadow\" />\r\n            <div>\r\n              <span className=\"block text-primary-200 text-sm font-medium mb-1\">Avg. Daily Calories</span>\r\n              <span className=\"text-2xl font-bold text-primary-100\" aria-live=\"polite\">{stats.averageCalories ?? '--'}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-gradient-to-br from-blue-900 to-neutral-900 rounded-xl p-5 shadow-md flex items-center gap-4\" aria-label=\"Meals Tracked\" tabIndex={0}>\r\n            <BarChart2 className=\"w-8 h-8 text-blue-200 bg-blue-900 rounded-full p-1 shadow\" />\r\n            <div>\r\n              <span className=\"block text-blue-200 text-sm font-medium mb-1\">Meals Tracked</span>\r\n              <span className=\"text-2xl font-bold text-blue-100\" aria-live=\"polite\">{stats.mealsTracked ?? 0}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-gradient-to-br from-amber-900 to-neutral-900 rounded-xl p-5 shadow-md flex items-center gap-4\" aria-label=\"Average Protein\" tabIndex={0}>\r\n            <PieChart className=\"w-8 h-8 text-amber-200 bg-amber-900 rounded-full p-1 shadow\" />\r\n            <div>\r\n              <span className=\"block text-amber-200 text-sm font-medium mb-1\">Protein (avg)</span>\r\n              <span className=\"text-2xl font-bold text-amber-100\" aria-live=\"polite\">{stats.averageProtein ?? '--'}g</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-gradient-to-br from-green-900 to-neutral-900 rounded-xl p-5 shadow-md flex items-center gap-4\" aria-label=\"Healthiest Day\" tabIndex={0}>\r\n            <CalendarCheck className=\"w-8 h-8 text-green-200 bg-green-900 rounded-full p-1 shadow\" />\r\n            <div>\r\n              <span className=\"block text-green-200 text-sm font-medium mb-1\">Healthiest Day</span>\r\n              <span className=\"text-2xl font-bold text-green-100\" aria-live=\"polite\">{stats.healthiestDay ?? '--'}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Divider */}\r\n        <div className=\"my-8 border-t border-neutral-800\" />\r\n        {/* Streak Tracking */}\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"bg-gradient-to-br from-fuchsia-900 to-neutral-900 rounded-xl p-5 shadow flex items-center gap-4\" aria-label=\"Current Streak\" tabIndex={0}>\r\n            <Trophy className=\"w-8 h-8 text-fuchsia-200 bg-fuchsia-900 rounded-full p-1 shadow\" />\r\n            <div>\r\n              <span className=\"block text-fuchsia-200 text-sm font-medium mb-1\">Current Streak</span>\r\n              <span className=\"text-2xl font-bold text-fuchsia-100\" aria-live=\"polite\">{(() => {\r\n                let streak = 0;\r\n                for (let i = daysOfWeek.length - 1; i >= 0; i--) {\r\n                  const cals = caloriesByDay?.[daysOfWeek[i]] ?? 0;\r\n                  if (cals >= 1500 && cals <= 2200) streak++;\r\n                  else break;\r\n                }\r\n                return streak;\r\n              })()} days</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-gradient-to-br from-indigo-900 to-neutral-900 rounded-xl p-5 shadow flex items-center gap-4\" aria-label=\"Longest Streak\" tabIndex={0}>\r\n            <Trophy className=\"w-8 h-8 text-indigo-200 bg-indigo-900 rounded-full p-1 shadow\" />\r\n            <div>\r\n              <span className=\"block text-indigo-200 text-sm font-medium mb-1\">Longest Streak</span>\r\n              <span className=\"text-2xl font-bold text-indigo-100\" aria-live=\"polite\">{(() => {\r\n                let streak = 0, maxStreak = 0;\r\n                for (let i = 0; i < daysOfWeek.length; i++) {\r\n                  const cals = caloriesByDay?.[daysOfWeek[i]] ?? 0;\r\n                  if (cals >= 1500 && cals <= 2200) {\r\n                    streak++;\r\n                    maxStreak = Math.max(maxStreak, streak);\r\n                  } else {\r\n                    streak = 0;\r\n                  }\r\n                }\r\n                return maxStreak;\r\n              })()} days</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Divider */}\r\n        <div className=\"my-8 border-t border-neutral-800\" />\r\n        {/* Weekly Calorie Goal Progress */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <BarChart2 className=\"w-5 h-5 text-primary-200\" />\r\n            <h3 className=\"font-medium text-primary-100\">Weekly Calorie Goal Progress</h3>\r\n          </div>\r\n          <div className=\"w-full bg-neutral-800 rounded-full h-4 overflow-hidden\">\r\n            {(() => {\r\n              const goal = 14000;\r\n              const consumed = Object.values(caloriesByDay ?? {}).reduce((a, b) => a + b, 0);\r\n              const percent = Math.min(100, Math.round((consumed / goal) * 100));\r\n              return (\r\n                <div\r\n                  className=\"h-4 bg-gradient-to-r from-primary-400 to-primary-700 rounded-full transition-all duration-500\"\r\n                  style={{ width: `${percent}%` }}\r\n                  aria-label={`Weekly calorie goal progress: ${percent}%`}\r\n                />\r\n              );\r\n            })()}\r\n          </div>\r\n          <div className=\"flex justify-between text-xs mt-1 text-neutral-400\">\r\n            <span>Consumed: {Object.values(caloriesByDay ?? {}).reduce((a, b) => a + b, 0)} kcal</span>\r\n            <span>Goal: 14000 kcal</span>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { BarChart2, PieChart } from \"lucide-react\";\nimport { ChartContainer } from \"@/components/ui/chart\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { WeeklyStats } from \"@shared/schema\";\nimport { useState } from \"react\";\n\nconst MEDICAL_CONDITIONS = [\n  { value: \"none\", label: \"None\" },\n  { value: \"diabetes\", label: \"Diabetes\" },\n  { value: \"hypertension\", label: \"Hypertension\" },\n  { value: \"kidney\", label: \"Kidney Disease\" },\n  { value: \"celiac\", label: \"Celiac Disease\" },\n  // Add more as needed\n];\n\nexport function AnalyticsCard({ stats, daysOfWeek, selectedCondition, onConditionChange }: {\n  stats: WeeklyStats | undefined,\n  daysOfWeek: string[],\n  selectedCondition: string,\n  onConditionChange: (condition: string) => void\n}) {\n  if (!stats) return null;\n  const macrosByDay = stats.macrosByDay ?? {};\n  // Macro breakdowns and analytics charts from StatsCard\n  return (\n    <Card className=\"card-gradient glass-effect rounded-xl border border-neutral-800\">\n      <CardHeader className=\"flex flex-col gap-2\">\n        <CardTitle>Analytics</CardTitle>\n        <div className=\"flex items-center gap-2\">\n          <label htmlFor=\"medical-condition-select\" className=\"text-xs text-neutral-400\">Medical Diet:</label>\n          <select\n            id=\"medical-condition-select\"\n            className=\"rounded px-2 py-1 text-xs bg-neutral-900 text-neutral-100 border border-neutral-700\"\n            value={selectedCondition}\n            onChange={e => onConditionChange(e.target.value)}\n          >\n            {MEDICAL_CONDITIONS.map(opt => (\n              <option key={opt.value} value={opt.value}>{opt.label}</option>\n            ))}\n          </select>\n          {selectedCondition !== \"none\" && (\n            <span className=\"ml-2 px-2 py-0.5 rounded bg-emerald-800 text-emerald-100 text-xs font-semibold\">{MEDICAL_CONDITIONS.find(opt => opt.value === selectedCondition)?.label} Mode</span>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent>\n        {/* Calorie Trend */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-2 mb-3\">\n            <BarChart2 className=\"w-5 h-5 text-primary-500\" />\n            <h3 className=\"font-medium text-neutral-900\">Calorie Trend</h3>\n          </div>\n          {/* Clinical Nutrition Notice */}\n          {selectedCondition !== \"none\" && (\n            <div className=\"mb-2 p-2 rounded bg-emerald-900/60 text-emerald-200 text-xs\">\n              {selectedCondition === \"diabetes\" && (\n                <>Diabetes Mode: Carbohydrate intake and glycemic load are highlighted. Try to keep carbs consistent and avoid high-sugar spikes.</>\n              )}\n              {selectedCondition === \"hypertension\" && (\n                <>Hypertension Mode: Sodium and potassium balance are prioritized. Watch for high-sodium foods and aim for more potassium-rich meals.</>\n              )}\n              {selectedCondition === \"kidney\" && (\n                <>Kidney Disease Mode: Protein, sodium, and potassium are carefully balanced. Avoid excess protein and high-potassium foods.</>\n              )}\n              {selectedCondition === \"celiac\" && (\n                <>Celiac Disease Mode: Gluten-containing foods are flagged. Ensure all meals are gluten-free.</>\n              )}\n            </div>\n          )}\n          <div className=\"h-48 bg-gradient-to-br from-neutral-900 to-neutral-800 rounded-lg flex items-end justify-between p-4 shadow-inner\">\n            {daysOfWeek.map((day) => {\n              const calories = (stats.caloriesByDay as Record<string, number>)[day] || 0;\n              const maxCalories = Math.max(...Object.values(stats.caloriesByDay as Record<string, number>));\n              const percentage = maxCalories > 0 ? (calories / maxCalories) * 100 : 0;\n              const today = new Date().getDay();\n              const dayIndex = daysOfWeek.indexOf(day);\n              const isPastOrToday = dayIndex <= today;\n              // Clinical logic: highlight bar if out of range for condition\n              let barClass = isPastOrToday ? \"bg-primary-400 w-full rounded-t-sm\" : \"bg-primary-900 w-full rounded-t-sm\";\n              if (selectedCondition === \"diabetes\") {\n                // Example: highlight if carbs > 60g for the day (placeholder)\n                const carbs = macrosByDay[day]?.carbs || 0;\n                if (carbs > 60) barClass += \" ring-2 ring-amber-400\";\n              }\n              if (selectedCondition === \"hypertension\") {\n                // Example: highlight if sodium > 2000mg (if sodium data available)\n                // Placeholder: no sodium in data, but could add logic here\n              }\n              if (selectedCondition === \"kidney\") {\n                // Example: highlight if protein > 60g (placeholder)\n                const protein = macrosByDay[day]?.protein || 0;\n                if (protein > 60) barClass += \" ring-2 ring-red-400\";\n              }\n              if (selectedCondition === \"celiac\") {\n                // Example: highlight if gluten detected (not in data, placeholder)\n              }\n              return (\n                <div key={day} className=\"w-1/7 flex flex-col items-center\">\n                  <div\n                    className={barClass}\n                    style={{ height: `${percentage}%` }}\n                    aria-label={`Calories for ${day}: ${calories}`}\n                  ></div>\n                  <span className={`text-xs mt-2 ${isPastOrToday ? 'text-neutral-100' : 'text-neutral-500'}`}>{day.substring(0, 3)}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        {/* Weekly Nutrition Breakdown */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-2 mb-3\">\n            <BarChart2 className=\"w-5 h-5 text-primary-200\" />\n            <h3 className=\"font-medium text-primary-100\">Weekly Nutrition Breakdown</h3>\n          </div>\n          <div className=\"h-64 bg-gradient-to-br from-neutral-900 to-neutral-800 rounded-lg p-4 shadow-inner\">\n            <ChartContainer config={{ calories: { label: \"Calories\", color: \"#4CAF50\" } }}>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                  data={daysOfWeek.map((day) => {\n                    const macros = macrosByDay[day] || { protein: 0, carbs: 0, fat: 0 };\n                    // --- Clinical Nutrition Logic for Chart Data ---\n                    let calories = (stats.caloriesByDay as Record<string, number>)[day] || 0;\n                    let carbs = macros.carbs;\n                    let protein = macros.protein;\n                    // Adjust calories for diabetes (flag high-carb days)\n                    let clinicalFlag = false;\n                    if (selectedCondition === \"diabetes\" && carbs > 60) clinicalFlag = true;\n                    if (selectedCondition === \"kidney\" && protein > 60) clinicalFlag = true;\n                    // You can add more logic for other conditions here\n                    return {\n                      day: day.substring(0, 3),\n                      calories,\n                      clinicalFlag,\n                    };\n                  })}\n                  margin={{ top: 10, right: 20, left: 0, bottom: 0 }}\n                >\n                  <XAxis dataKey=\"day\" stroke=\"#b5e3b6\" />\n                  <YAxis stroke=\"#b5e3b6\" />\n                  <Tooltip contentStyle={{ background: '#23272b', border: '1px solid #333', color: '#fff' }} />\n                  <Legend />\n                  <Line key=\"calories\" type=\"monotone\" dataKey=\"calories\" stroke=\"#4CAF50\" strokeWidth={2} dot={false} />\n                  {/* Custom dot for clinical flag */}\n                  <Line\n                    key=\"clinical-calories\"\n                    type=\"monotone\"\n                    dataKey=\"calories\"\n                    stroke=\"transparent\"\n                    dot={(props: any) => {\n                      // Type guard for recharts dot props\n                      if (!props || typeof props.cx !== 'number' || typeof props.cy !== 'number' || !props.payload) return <></>;\n                      const { cx, cy, payload } = props;\n                      return payload.clinicalFlag ? (\n                        <circle\n                          key={props.payload.day}\n                          cx={cx}\n                          cy={cy}\n                          r={7}\n                          fill=\"#fbbf24\"\n                          stroke=\"#b45309\"\n                          strokeWidth={2}\n                          style={{ filter: 'drop-shadow(0 0 4px #fbbf24)' }}\n                        >\n                          <title>Clinical Alert: This day exceeds recommended limits for your selected condition.</title>\n                        </circle>\n                      ) : <></>;\n                    }}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </ChartContainer>\n          </div>\n        </div>\n        {/* Macro Distribution Line Chart (per-day breakdown) */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-2 mb-3\">\n            <PieChart className=\"w-5 h-5 text-amber-200\" />\n            <h3 className=\"font-medium text-amber-500\">Macro Distribution</h3>\n          </div>\n          <div className=\"h-56 bg-gradient-to-br from-neutral-900 to-neutral-800 rounded-lg p-4 flex items-center justify-center shadow-inner\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={daysOfWeek.map(day => {\n                  const macros = macrosByDay[day] || { protein: 0, carbs: 0, fat: 0 };\n                  // --- Clinical Nutrition Logic for Macro Chart ---\n                  let clinicalMacroFlag = false;\n                  if (selectedCondition === \"diabetes\" && macros.carbs > 60) clinicalMacroFlag = true;\n                  if (selectedCondition === \"kidney\" && macros.protein > 60) clinicalMacroFlag = true;\n                  // Add more logic as needed\n                  return {\n                    name: day.substring(0, 3),\n                    Protein: macros.protein,\n                    Carbs: macros.carbs,\n                    Fat: macros.fat,\n                    clinicalMacroFlag,\n                  };\n                })}\n              >\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip contentStyle={{ background: '#23272b', border: '1px solid #333', color: '#fff' }} />\n                <Legend />\n                <Line key=\"protein\" type=\"monotone\" dataKey=\"Protein\" stroke=\"#a78bfa\" strokeWidth={2} dot />\n                <Line key=\"carbs\" type=\"monotone\" dataKey=\"Carbs\" stroke=\"#2dd4bf\" strokeWidth={2} dot />\n                <Line key=\"fat\" type=\"monotone\" dataKey=\"Fat\" stroke=\"#fbbf24\" strokeWidth={2} dot />\n                {/* Custom dot for clinical macro flag */}\n                <Line\n                  key=\"clinical-macro\"\n                  type=\"monotone\"\n                  dataKey=\"Protein\"\n                  stroke=\"transparent\"\n                  dot={(props: any) => {\n                    // Type guard for recharts dot props\n                    if (!props || typeof props.cx !== 'number' || typeof props.cy !== 'number' || !props.payload) return <></>;\n                    const { cx, cy, payload } = props;\n                    return payload.clinicalMacroFlag ? (\n                      <circle\n                        key={props.payload.name}\n                        cx={cx}\n                        cy={cy}\n                        r={7}\n                        fill=\"#fbbf24\"\n                        stroke=\"#b45309\"\n                        strokeWidth={2}\n                        style={{ filter: 'drop-shadow(0 0 4px #fbbf24)' }}\n                      >\n                        <title>Clinical Alert: This day exceeds recommended macro limits for your selected condition.</title>\n                      </circle>\n                    ) : <></>;\n                  }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n          {/* Add a summary below the chart */}\n          <div className=\"mt-4 text-sm text-neutral-600 text-center\">\n            {(() => {\n              let totalProtein = 0, totalCarbs = 0, totalFat = 0;\n              for (const day of daysOfWeek) {\n                const macros = macrosByDay[day] || { protein: 0, carbs: 0, fat: 0 };\n                totalProtein += macros.protein;\n                totalCarbs += macros.carbs;\n                totalFat += macros.fat;\n              }\n              const total = totalProtein + totalCarbs + totalFat;\n              const pct = (val: number) => total > 0 ? Math.round((val / total) * 100) : 0;\n              return (\n                <>\n                  <span className=\"mr-4\">Protein: <span className=\"text-amber-600 font-semibold\">{totalProtein}g</span> ({pct(totalProtein)}%)</span>\n                  <span className=\"mr-4\">Carbs: <span className=\"text-teal-600 font-semibold\">{totalCarbs}g</span> ({pct(totalCarbs)}%)</span>\n                  <span>Fat: <span className=\"text-yellow-600 font-semibold\">{totalFat}g</span> ({pct(totalFat)}%)</span>\n                </>\n              );\n            })()}\n          </div>\n        </div>\n        {/* Macro Consistency Chart */}\n        <div>\n          <div className=\"flex items-center gap-2 mb-3\">\n            <BarChart2 className=\"w-5 h-5 text-primary-200\" />\n            <h3 className=\"font-medium text-primary-100\">Macro Consistency</h3>\n          </div>\n          <div className=\"h-56 bg-gradient-to-br from-neutral-900 to-neutral-800 rounded-lg p-4 flex items-center justify-center shadow-inner\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={daysOfWeek.map(day => {\n                  const macros = macrosByDay[day] || { protein: 0, carbs: 0, fat: 0 };\n                  const total = macros.protein + macros.carbs + macros.fat;\n                  return {\n                    name: day.substring(0, 3),\n                    Protein: total > 0 ? Math.round((macros.protein / total) * 100) : 0,\n                    Carbs: total > 0 ? Math.round((macros.carbs / total) * 100) : 0,\n                    Fat: total > 0 ? Math.round((macros.fat / total) * 100) : 0,\n                  };\n                })}\n              >\n                <XAxis dataKey=\"name\" />\n                <YAxis domain={[0, 100]} tickFormatter={v => `${v}%`} />\n                <Tooltip formatter={v => `${v}%`} contentStyle={{ background: '#23272b', border: '1px solid #333', color: '#fff' }} />\n                <Legend />\n                <Line key=\"protein-consistency\" type=\"monotone\" dataKey=\"Protein\" stroke=\"#a78bfa\" strokeWidth={2} dot />\n                <Line key=\"carbs-consistency\" type=\"monotone\" dataKey=\"Carbs\" stroke=\"#2dd4bf\" strokeWidth={2} dot />\n                <Line key=\"fat-consistency\" type=\"monotone\" dataKey=\"Fat\" stroke=\"#fbbf24\" strokeWidth={2} dot />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n          {/* Macro Consistency: Add average and best day summary below the chart */}\n          <div className=\"mt-4 text-sm text-emerald-600 text-center\">\n            {(() => {\n              let bestDay = daysOfWeek[0];\n              let bestScore = -Infinity;\n              let avgConsistency = 0;\n              let count = 0;\n              for (const day of daysOfWeek) {\n                const macros = macrosByDay[day] || { protein: 0, carbs: 0, fat: 0 };\n                const total = macros.protein + macros.carbs + macros.fat;\n                if (total === 0) continue;\n                // Score: closer to 30/45/25 is better\n                const p = macros.protein / total, c = macros.carbs / total, f = macros.fat / total;\n                const diff = Math.abs(p - 0.3) + Math.abs(c - 0.45) + Math.abs(f - 0.25);\n                const score = 1 - diff; // higher is better\n                avgConsistency += score;\n                count++;\n                if (score > bestScore) {\n                  bestScore = score;\n                  bestDay = day;\n                }\n              }\n              avgConsistency = count > 0 ? Math.round((avgConsistency / count) * 100) : 0;\n              return (\n                <>\n                  <span className=\"mr-4\">Avg. Consistency: <span className=\"font-semibold\">{avgConsistency}%</span></span>\n                  <span className=\"mr-4\">Best Macro Day: <span className=\"font-semibold\">{bestDay}</span></span>\n                </>\n              );\n            })()}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { MealAnalysis } from \"@shared/schema\";\r\nimport { LineChart as LineChartIcon } from \"lucide-react\";\r\nimport { format } from \"date-fns\";\r\nimport { ChartContainer } from \"@/components/ui/chart\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\n\r\nexport function MealTrendsCard() {\r\n  const { data: analyses, isLoading } = useQuery<MealAnalysis[]>({\r\n    queryKey: [\"/api/meal-analyses\"],\r\n  });\r\n\r\n  // Aggregate daily totals for calories, protein, carbs, fat\r\n  const dailyTotals: Record<string, { calories: number; protein: number; carbs: number; fat: number }> = {};\r\n  (analyses || []).forEach(a => {\r\n    if (a.analysisTimestamp) {\r\n      const date = format(new Date(a.analysisTimestamp), \"yyyy-MM-dd\");\r\n      if (!dailyTotals[date]) {\r\n        dailyTotals[date] = { calories: 0, protein: 0, carbs: 0, fat: 0 };\r\n      }\r\n      dailyTotals[date].calories += a.estimatedCalories || 0;\r\n      dailyTotals[date].protein += parseFloat(a.estimatedProtein || '0');\r\n      dailyTotals[date].carbs += parseFloat(a.estimatedCarbs || '0');\r\n      dailyTotals[date].fat += parseFloat(a.estimatedFat || '0');\r\n    }\r\n  });\r\n  const sortedDates = Object.keys(dailyTotals).sort();\r\n\r\n  // Prepare data for charting\r\n  const chartData = sortedDates.map(date => ({\r\n    date,\r\n    ...dailyTotals[date],\r\n  }));\r\n\r\n  return (\r\n    <Card className=\"card-gradient hover-effect rounded-xl overflow-hidden\">\r\n      <CardHeader className=\"px-6 py-5 border-b border-neutral-200 flex items-center gap-2\">\r\n        <LineChartIcon className=\"h-5 w-5 text-primary-500\" />\r\n        <CardTitle className=\"text-xl font-semibold text-neutral-800\">Meal Trends</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"p-4\">\r\n        {isLoading ? (\r\n          <div className=\"flex justify-center items-center py-8 text-primary\">\r\n            Loading trends...\r\n          </div>\r\n        ) : chartData.length === 0 ? (\r\n          <div className=\"text-neutral-300 text-center py-8\">No meal data to show trends.</div>\r\n        ) : (\r\n          <div className=\"h-64\">\r\n            <ChartContainer config={{\r\n              calories: { label: \"Calories\", color: \"#4CAF50\" },\r\n              protein: { label: \"Protein (g)\", color: \"#a78bfa\" },\r\n              carbs: { label: \"Carbs (g)\", color: \"#2dd4bf\" },\r\n              fat: { label: \"Fat (g)\", color: \"#fbbf24\" }\r\n            }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <LineChart data={chartData.map(row => ({\r\n                  ...row,\r\n                  date: format(new Date(row.date), \"MMM d\")\r\n                }))}>\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip contentStyle={{ background: '#23272b', border: '1px solid #333', color: '#fff' }} />\r\n                  <Legend />\r\n                  <Line type=\"monotone\" dataKey=\"calories\" stroke=\"#4CAF50\" strokeWidth={2} dot />\r\n                  <Line type=\"monotone\" dataKey=\"protein\" stroke=\"#a78bfa\" strokeWidth={2} dot />\r\n                  <Line type=\"monotone\" dataKey=\"carbs\" stroke=\"#2dd4bf\" strokeWidth={2} dot />\r\n                  <Line type=\"monotone\" dataKey=\"fat\" stroke=\"#fbbf24\" strokeWidth={2} dot />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </ChartContainer>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import { Header } from \"@/components/layout/header\";\nimport { Footer } from \"@/components/layout/footer\";\nimport { CameraUploadCard } from \"@/components/dashboard/camera-upload-card\";\nimport { RecentResultsCard } from \"@/components/dashboard/recent-results-card\";\nimport { OverviewCard } from \"@/components/dashboard/overview-card\";\nimport { AnalyticsCard } from \"@/components/dashboard/analytics-card\";\nimport { MealTrendsCard } from \"@/components/dashboard/meal-trends-card\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { WeeklyStats } from \"@shared/schema\";\nimport { getQueryFn } from \"@/lib/queryClient\";\n\nexport default function HomePage() {\n  const { user } = useAuth();\n\n  // Medical Diet AI Assistant state\n  const [medicalCondition, setMedicalCondition] = useState<string>(\"none\");\n\n  // Updated stats query to include medicalCondition in the queryKey\n  const { data: stats } = useQuery<WeeklyStats>({\n    queryKey: [`/api/weekly-stats?medicalCondition=${medicalCondition}`],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n  const daysOfWeek = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  if (!user) return <div>Loading...</div>;\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      <main className=\"flex-grow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-neutral-900 mb-2\">\n              Dashboard\n            </h1>\n            <p className=\"text-neutral-500\">\n              Welcome back, {user.firstName}. Track your nutrition with\n              AI-powered analysis.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Main content area (2/3 on desktop) */}\n            <div className=\"lg:col-span-2 flex flex-col gap-6\">\n              <CameraUploadCard />\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <OverviewCard stats={stats} daysOfWeek={daysOfWeek} />\n                <AnalyticsCard\n                  stats={stats}\n                  daysOfWeek={daysOfWeek}\n                  selectedCondition={medicalCondition}\n                  onConditionChange={setMedicalCondition}\n                />\n              </div>\n              <RecentResultsCard />\n            </div>\n            {/* Sidebar (1/3 on desktop) */}\n            <div className=\"flex flex-col gap-6\">\n              <MealTrendsCard />\n            </div>\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\r\nimport { AlertTriangle, RefreshCw, Home } from 'lucide-react';\r\nimport { Button } from '../ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error: Error | null;\r\n  errorInfo: ErrorInfo | null;\r\n}\r\n\r\nexport class AuthErrorBoundary extends Component<Props, State> {\r\n  public state: State = {\r\n    hasError: false,\r\n    error: null,\r\n    errorInfo: null,\r\n  };\r\n\r\n  public static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error, errorInfo: null };\r\n  }\r\n\r\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('Auth Error Boundary caught an error:', error, errorInfo);\r\n    this.setState({\r\n      error,\r\n      errorInfo,\r\n    });\r\n  }\r\n\r\n  private handleReset = () => {\r\n    this.setState({\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n    });\r\n  };\r\n\r\n  private handleGoHome = () => {\r\n    window.location.href = '/';\r\n  };\r\n\r\n  public render() {\r\n    if (this.state.hasError) {\r\n      if (this.props.fallback) {\r\n        return this.props.fallback;\r\n      }\r\n\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-neutral-50 p-4\">\r\n          <Card className=\"w-full max-w-md\">\r\n            <CardHeader className=\"text-center\">\r\n              <div className=\"flex justify-center mb-4\">\r\n                <AlertTriangle className=\"h-12 w-12 text-destructive\" />\r\n              </div>\r\n              <CardTitle className=\"text-xl\">Authentication Error</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"text-center text-neutral-600\">\r\n                <p className=\"mb-2\">\r\n                  Something went wrong with the authentication process.\r\n                </p>\r\n                {this.state.error && (\r\n                  <p className=\"text-sm font-mono bg-neutral-100 p-2 rounded text-xs\">\r\n                    {this.state.error.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"flex flex-col gap-2\">\r\n                <Button \r\n                  onClick={this.handleReset}\r\n                  className=\"w-full\"\r\n                  variant=\"outline\"\r\n                >\r\n                  <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                  Try Again\r\n                </Button>\r\n                <Button \r\n                  onClick={this.handleGoHome}\r\n                  className=\"w-full\"\r\n                >\r\n                  <Home className=\"h-4 w-4 mr-2\" />\r\n                  Go to Home\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// Hook for functional components\r\nexport function useAuthErrorBoundary() {\r\n  const [error, setError] = React.useState<Error | null>(null);\r\n\r\n  const catchError = React.useCallback((error: Error) => {\r\n    setError(error);\r\n    throw error; // Re-throw to let the ErrorBoundary handle it\r\n  }, []);\r\n\r\n  const resetError = React.useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { error, catchError, resetError };\r\n}","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import { useState } from \"react\";\nimport { Link, Redirect } from \"wouter\";\nimport { useAuth } from \"../hooks/use-auth\";\nimport { AuthErrorBoundary } from \"../components/auth/auth-error-boundary\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"../components/ui/button\";\nimport { Input } from \"../components/ui/input\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"../components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"../components/ui/form\";\nimport { Separator } from \"../components/ui/separator\";\nimport { Mail, Lock, User, Apple, Leaf, Utensils, ChevronRight } from \"lucide-react\";\nimport { Header } from \"../components/layout/header\";\n\nconst loginSchema = z.object({\n  username: z.string().min(1, \"Username or email is required\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\nconst registerSchema = z.object({\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  username: z.string().min(3, \"Username must be at least 3 characters\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n  confirmPassword: z.string().min(6, \"Please confirm your password\"),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords do not match\",\n  path: [\"confirmPassword\"],\n});\n\ntype LoginFormValues = z.infer<typeof loginSchema>;\ntype RegisterFormValues = z.infer<typeof registerSchema>;\n\nexport default function AuthPage() {\n  const [activeTab, setActiveTab] = useState<'login' | 'register'>('login');\n  const { user, loginMutation, registerMutation } = useAuth();\n\n  const loginForm = useForm<LoginFormValues>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      username: \"\",\n      password: \"\",\n    },\n  });\n\n  const registerForm = useForm<RegisterFormValues>({\n    resolver: zodResolver(registerSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  const onLoginSubmit = async (formData: LoginFormValues) => {\n    try {\n      await loginMutation.mutateAsync(formData);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  const onRegisterSubmit = async (formData: RegisterFormValues) => {\n    try {\n      await registerMutation.mutateAsync(formData);\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n    }\n  };\n\n  const handleSocialAuth = (provider: 'google' | 'apple') => {\n    // Placeholder for social authentication\n    console.log(`${provider} auth not implemented yet`);\n    // For demo purposes, we'll simulate successful auth\n    // In real implementation, this would handle OAuth flow\n  };\n\n  // If user is already logged in, redirect to dashboard\n  if (user) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <AuthErrorBoundary>\n    <div className=\"min-h-screen flex flex-col bg-neutral-50\">\n      <Header />\n      {/* Left side - Forms */}\n      <div className=\"w-full md:w-1/2 flex items-center justify-center p-6 md:p-12\">\n        <div className=\"w-full max-w-md\">\n          <div className=\"text-center mb-8\">\n            <div className=\"flex items-center justify-center mb-4\">\n              <Leaf className=\"h-10 w-10 text-primary-600\" />\n            </div>\n            <h1 className=\"text-3xl font-bold text-neutral-900\">NutriScan</h1>\n            <p className=\"text-neutral-600 mt-2\">AI-powered calorie estimation</p>\n          </div>\n\n          <Card>\n            <CardHeader className=\"pb-4\">\n              <div className=\"flex rounded-lg bg-neutral-100 p-1\">\n                <button\n                  onClick={() => setActiveTab('login')}\n                  className={`flex-1 text-sm font-medium py-2 px-3 rounded-md transition-colors ${\n                    activeTab === 'login'\n                      ? 'bg-white text-neutral-900 shadow-sm'\n                      : 'text-neutral-600 hover:text-neutral-900'\n                  }`}\n                >\n                  Login\n                </button>\n                <button\n                  onClick={() => setActiveTab('register')}\n                  className={`flex-1 text-sm font-medium py-2 px-3 rounded-md transition-colors ${\n                    activeTab === 'register'\n                      ? 'bg-white text-neutral-900 shadow-sm'\n                      : 'text-neutral-600 hover:text-neutral-900'\n                  }`}\n                >\n                  Register\n                </button>\n              </div>\n            </CardHeader>\n\n            <CardContent className=\"space-y-4\">\n              {activeTab === 'login' ? (\n                <Form {...loginForm}>\n                  <form onSubmit={loginForm.handleSubmit(onLoginSubmit)} className=\"space-y-4\">\n                    <FormField\n                      control={loginForm.control}\n                      name=\"username\"\n                      render={({ field }: { field: any }) => (\n                        <FormItem>\n                          <FormLabel>Username or Email</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"johndoe or john@example.com\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <FormField\n                      control={loginForm.control}\n                      name=\"password\"\n                      render={({ field }: { field: any }) => (\n                        <FormItem>\n                          <FormLabel>Password</FormLabel>\n                          <FormControl>\n                            <Input type=\"password\" placeholder=\"Your password\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    \n                    <Button \n                      type=\"submit\" \n                      className=\"w-full\" \n                      disabled={loginMutation.isPending}\n                    >\n                      {loginMutation.isPending ? 'Signing in...' : 'Sign in'}\n                    </Button>\n                  </form>\n                </Form>\n              ) : (\n                <div className=\"space-y-3\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => handleSocialAuth('google')}\n                    className=\"w-full flex items-center justify-center gap-3 h-11\"\n                    disabled\n                  >\n                    <Mail className=\"h-5 w-5 text-red-500\" />\n                    Continue with Google\n                    <span className=\"text-xs text-neutral-400 ml-2\">(Coming Soon)</span>\n                  </Button>\n                  \n                  <Button\n                    variant=\"outline\"\n                    onClick={() => handleSocialAuth('apple')}\n                    className=\"w-full flex items-center justify-center gap-3 h-11\"\n                    disabled\n                  >\n                    <Apple className=\"h-5 w-5\" />\n                    Continue with Apple\n                    <span className=\"text-xs text-neutral-400 ml-2\">(Coming Soon)</span>\n                  </Button>\n\n                  <div className=\"relative my-6\">\n                    <Separator />\n                    <span className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-2 text-xs text-neutral-500\">\n                      or register with email\n                    </span>\n                  </div>\n\n                  <Form {...registerForm}>\n                    <form onSubmit={registerForm.handleSubmit(onRegisterSubmit)} className=\"space-y-4\">\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <FormField\n                          control={registerForm.control}\n                          name=\"firstName\"\n                          render={({ field }: { field: any }) => (\n                            <FormItem>\n                              <FormLabel>First Name</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"John\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                        \n                        <FormField\n                          control={registerForm.control}\n                          name=\"lastName\"\n                          render={({ field }: { field: any }) => (\n                            <FormItem>\n                              <FormLabel>Last Name</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"Doe\" {...field} />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                      \n                      <FormField\n                        control={registerForm.control}\n                        name=\"email\"\n                        render={({ field }: { field: any }) => (\n                          <FormItem>\n                            <FormLabel>Email</FormLabel>\n                            <FormControl>\n                              <Input type=\"email\" placeholder=\"john@example.com\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={registerForm.control}\n                        name=\"username\"\n                        render={({ field }: { field: any }) => (\n                          <FormItem>\n                            <FormLabel>Username</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"johndoe\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={registerForm.control}\n                        name=\"password\"\n                        render={({ field }: { field: any }) => (\n                          <FormItem>\n                            <FormLabel>Password</FormLabel>\n                            <FormControl>\n                              <Input type=\"password\" placeholder=\"Create a password\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <FormField\n                        control={registerForm.control}\n                        name=\"confirmPassword\"\n                        render={({ field }: { field: any }) => (\n                          <FormItem>\n                            <FormLabel>Confirm Password</FormLabel>\n                            <FormControl>\n                              <Input type=\"password\" placeholder=\"Confirm your password\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      \n                      <Button \n                        type=\"submit\" \n                        className=\"w-full\" \n                        disabled={registerMutation.isPending}\n                      >\n                        {registerMutation.isPending ? 'Creating account...' : 'Create account'}\n                      </Button>\n                    </form>\n                  </Form>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          <p className=\"text-xs text-neutral-500 text-center\">\n            By signing in or creating an account, you agree to our Terms of Service and Privacy Policy\n          </p>\n        </div>\n      </div>\n      \n      {/* Right side - Hero section */}\n      <div className=\"w-full md:w-1/2 bg-primary-600 text-white p-6 md:p-12 hidden md:flex md:flex-col md:justify-center\">\n        <div className=\"max-w-md mx-auto\">\n          <div className=\"mb-8\">\n            <Utensils className=\"h-16 w-16 mb-6\" />\n            <h2 className=\"text-4xl font-bold mb-4\">Track Your Nutrition with AI</h2>\n            <p className=\"text-primary-100 text-lg\">\n              Simply take a photo of your meal and get instant calorie and nutrition information powered by advanced AI.\n            </p>\n          </div>\n          \n          <div className=\"space-y-6\">\n            <div className=\"flex items-start\">\n              <div className=\"bg-primary-500 rounded-full p-1 mr-4\">\n                <ChevronRight className=\"h-5 w-5\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-lg\">Instant Analysis</h3>\n                <p className=\"text-primary-100\">Get calorie counts and nutritional breakdown in seconds</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start\">\n              <div className=\"bg-primary-500 rounded-full p-1 mr-4\">\n                <ChevronRight className=\"h-5 w-5\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-lg\">Track Progress</h3>\n                <p className=\"text-primary-100\">Monitor your nutrition over time with detailed statistics</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start\">\n              <div className=\"bg-primary-500 rounded-full p-1 mr-4\">\n                <ChevronRight className=\"h-5 w-5\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-lg\">Smart Recommendations</h3>\n                <p className=\"text-primary-100\">Receive personalized nutrition tips based on your eating habits</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </AuthErrorBoundary>\n  );\n}","import { Header } from \"@/components/layout/header\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { MealAnalysis } from \"@shared/schema\";\r\nimport { Loader2, Calendar, ChevronLeft } from \"lucide-react\";\r\nimport { NutritionChart } from \"@/components/dashboard/nutrition-chart\";\r\nimport { Link } from \"wouter\";\r\nimport { format } from \"date-fns\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nexport default function HistoryPage() {\r\n  const { data: analyses, isLoading, error } = useQuery<MealAnalysis[]>({\r\n    queryKey: [\"/api/meal-analyses\"],\r\n  });\r\n\r\n  // Group analyses by date\r\n  const groupedAnalyses = analyses?.reduce<Record<string, MealAnalysis[]>>((groups, analysis) => {\r\n    // Check if analysisTimestamp exists and is valid\r\n    if (!analysis.analysisTimestamp) {\r\n      console.warn('Meal analysis missing timestamp:', analysis.id);\r\n      return groups;\r\n    }\r\n\r\n    try {\r\n      const date = format(new Date(analysis.analysisTimestamp), 'yyyy-MM-dd');\r\n      if (!groups[date]) {\r\n        groups[date] = [];\r\n      }\r\n      groups[date].push(analysis);\r\n    } catch (error) {\r\n      console.error('Invalid timestamp for meal analysis:', analysis.id, analysis.analysisTimestamp, error);\r\n    }\r\n\r\n    return groups;\r\n  }, {}) || {};\r\n\r\n  // Sort dates in descending order (newest first)\r\n  const sortedDates = Object.keys(groupedAnalyses).sort((a, b) => \r\n    new Date(b).getTime() - new Date(a).getTime()\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <Header />\r\n\r\n      <main className=\"flex-grow\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"flex items-center justify-between mb-8\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-neutral-900 mb-2\">Meal History</h1>\r\n              <p className=\"text-neutral-600\">View your past meal analyses and nutrition data</p>\r\n            </div>\r\n\r\n            <Link href=\"/dashboard\">\r\n              <Button variant=\"outline\" className=\"flex items-center\">\r\n                <ChevronLeft className=\"h-4 w-4 mr-2\" />\r\n                Back to Dashboard\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n\r\n          {isLoading ? (\r\n            <div className=\"flex justify-center items-center py-20\">\r\n              <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\r\n            </div>\r\n          ) : error ? (\r\n            <Card>\r\n              <CardContent className=\"p-6 text-center\">\r\n                <p className=\"text-neutral-600\">Error loading meal history</p>\r\n              </CardContent>\r\n            </Card>\r\n          ) : analyses && analyses.length > 0 ? (\r\n            <div className=\"space-y-8\">\r\n              {sortedDates.map(date => (\r\n                <div key={date}>\r\n                  <div className=\"flex items-center mb-4\">\r\n                    <Calendar className=\"h-5 w-5 text-primary-600 mr-2\" />\r\n                    <h2 className=\"text-xl font-semibold text-neutral-800\">\r\n                      {format(new Date(date), 'EEEE, MMMM d, yyyy')}\r\n                    </h2>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-4\">\r\n                    {groupedAnalyses[date].map(analysis => (\r\n                      <Card key={analysis.id} className=\"overflow-hidden\">\r\n                        <CardContent className=\"p-0\">\r\n                          <div className=\"flex flex-col md:flex-row\">\r\n                            <div className=\"w-full md:w-48 h-48 bg-neutral-200\">\r\n                                  {(() => {\r\n                                const resolveImageSrc = (url: string | null | undefined): string => {\r\n                                  if (!url) return '/placeholder-food.svg';\r\n                                  if (url.startsWith('data:') || url.startsWith('http://') || url.startsWith('https://')) return url;\r\n                                  // Normalize potential Windows paths\r\n                                  const normalized = url.replace(/\\\\/g, '/');\r\n                                  const filename = normalized.split('/').pop() || normalized;\r\n                                  return `/api/images/optimized/${filename}`;\r\n                                };\r\n                                const src = resolveImageSrc(analysis.imageUrl);\r\n                                return (\r\n                                  <img\r\n                                    src={src}\r\n                                    alt={analysis.foodName}\r\n                                    className=\"w-full h-full object-cover\"\r\n                                    onError={(e) => {\r\n                                      const target = e.currentTarget as HTMLImageElement;\r\n                                      // Try thumbnail, then original, then placeholder\r\n                                      if (!target.dataset.fallbackTried) {\r\n                                        target.dataset.fallbackTried = '1';\r\n                                        const raw = (analysis.imageUrl || '').replace(/\\\\\\\\/g, '/');\r\n                                        const fname = raw.split('/').pop() || '';\r\n                                        if (fname) {\r\n                                          target.src = `/api/images/thumbnail/${fname}`;\r\n                                          return;\r\n                                        }\r\n                                      } else if (target.dataset.fallbackTried === '1') {\r\n                                        target.dataset.fallbackTried = '2';\r\n                                        const raw = (analysis.imageUrl || '').replace(/\\\\\\\\/g, '/');\r\n                                        const fname = raw.split('/').pop() || '';\r\n                                        if (fname) {\r\n                                          target.src = `/api/images/original/${fname}`;\r\n                                          return;\r\n                                        }\r\n                                      }\r\n                                      target.src = '/placeholder-food.svg';\r\n                                    }}\r\n                                  />\r\n                                );\r\n                              })()}\r\n                            </div>\r\n\r\n                            <div className=\"p-6 flex-grow\">\r\n                              <div className=\"flex flex-col md:flex-row md:justify-between md:items-start mb-4\">\r\n                                <div>\r\n                                  <h3 className=\"text-xl font-medium text-neutral-900\">{analysis.foodName}</h3>\r\n                                  <p className=\"text-sm text-neutral-500\">\r\n                                    {analysis.analysisTimestamp ? format(new Date(analysis.analysisTimestamp), 'h:mm a') : 'Unknown time'}\r\n                                  </p>\r\n                                </div>\r\n                                <div className=\"mt-2 md:mt-0 flex items-center bg-primary-50 text-primary-800 py-1 px-3 rounded-full text-sm font-medium\">\r\n                                  <span>{analysis.estimatedCalories || 0} calories</span>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mt-4\">\r\n                                <div>\r\n                                  <div className=\"flex justify-between items-center mb-1\">\r\n                                    <span className=\"text-sm font-medium text-neutral-700\">Protein</span>\r\n                                    <span className=\"text-sm text-neutral-600\">{parseFloat(analysis.estimatedProtein || '0')}g</span>\r\n                                  </div>\r\n                                  <NutritionChart\r\n                                    value={parseFloat(analysis.estimatedProtein || '0')}\r\n                                    maxValue={50}\r\n                                    color=\"bg-chart-1\"\r\n                                  />\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"flex justify-between items-center mb-1\">\r\n                                    <span className=\"text-sm font-medium text-neutral-700\">Carbs</span>\r\n                                    <span className=\"text-sm text-neutral-600\">{parseFloat(analysis.estimatedCarbs || '0')}g</span>\r\n                                  </div>\r\n                                  <NutritionChart\r\n                                    value={parseFloat(analysis.estimatedCarbs || '0')}\r\n                                    maxValue={100}\r\n                                    color=\"bg-chart-2\"\r\n                                  />\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"flex justify-between items-center mb-1\">\r\n                                    <span className=\"text-sm font-medium text-neutral-700\">Fat</span>\r\n                                    <span className=\"text-sm text-neutral-600\">{parseFloat(analysis.estimatedFat || '0')}g</span>\r\n                                  </div>\r\n                                  <NutritionChart\r\n                                    value={parseFloat(analysis.estimatedFat || '0')}\r\n                                    maxValue={40}\r\n                                    color=\"bg-chart-3\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Card>\r\n              <CardContent className=\"p-6 text-center py-20\">\r\n                <p className=\"text-neutral-600 mb-4\">No meal analyses found</p>\r\n                <Link href=\"/\">\r\n                  <Button>\r\n                    Scan a Meal\r\n                  </Button>\r\n                </Link>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      </main>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}","import { Button } from \"@/components/ui/button\";\r\nimport { Link } from \"wouter\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { Leaf, Camera, ChevronRight, CheckCircle, Zap, LineChart, Shield, ArrowRight, Star, Heart, Sparkles, Twitter, Facebook, Instagram, Github } from \"lucide-react\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport default function LandingPage() {\r\n  const { user } = useAuth();\r\n  // Dynamic content state\r\n  const [content, setContent] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(\"/api/admin/content/home\")\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        try {\r\n          setContent(JSON.parse(data.value));\r\n        } catch {\r\n          setContent(null);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  }, []);\r\n\r\n  // Fallbacks for each section\r\n  const hero = content?.hero || {\r\n    title: \"Analyze Your Food With AI Technology\",\r\n    subtitle: \"Take a photo of your meal and instantly get detailed nutrition information. Track calories, protein, carbs, and more with NutriScan.\",\r\n    image: \"https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=800&auto=format&fit=crop&q=80\",\r\n    calories: 425\r\n  };\r\n  const features = content?.features || [\r\n    {\r\n      icon: \"Camera\",\r\n      title: \"Snap a Photo\",\r\n      desc: \"Simply take a picture of your meal using our app's camera or upload an existing image.\"\r\n    },\r\n    {\r\n      icon: \"Zap\",\r\n      title: \"AI Analysis\",\r\n      desc: \"Our advanced AI identifies the food items and calculates nutrition data instantly.\"\r\n    },\r\n    {\r\n      icon: \"LineChart\",\r\n      title: \"Track Progress\",\r\n      desc: \"View detailed reports, monitor your nutritional intake and track improvement over time.\"\r\n    }\r\n  ];\r\n  const pricingCta = content?.pricingCta || {\r\n    title: \"Ready to Transform Your Nutrition Tracking?\",\r\n    subtitle: \"Choose a plan that works for you and start your nutrition journey today.\"\r\n  };\r\n  const testimonials = content?.testimonials || [\r\n    {\r\n      name: \"Sarah M.\",\r\n      role: \"Fitness Coach\",\r\n      avatar: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100&h=100&fit=crop\",\r\n      quote: \"NutriScan has completely changed how I track my clients' nutrition. The AI analysis is incredibly accurate and saves hours of manual logging.\"\r\n    },\r\n    {\r\n      name: \"James K.\",\r\n      role: \"Marathon Runner\",\r\n      avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop\",\r\n      quote: \"Being able to quickly snap a photo and get nutrition data has helped me optimize my training diet. The protein tracking feature is invaluable.\"\r\n    },\r\n    {\r\n      name: \"Emily R.\",\r\n      role: \"Nutrition Student\",\r\n      avatar: \"https://images.unsplash.com/photo-1517841905240-472988babdf9?w=100&h=100&fit=crop\",\r\n      quote: \"As someone studying nutrition, I'm impressed by the accuracy of the AI analysis. It's extremely helpful for both my studies and personal meal planning.\"\r\n    }\r\n  ];\r\n  const featureList = content?.featureList || [\r\n    {\r\n      icon: \"CheckCircle\",\r\n      title: \"Advanced AI Recognition\",\r\n      desc: \"Accurately identifies food items from images\"\r\n    },\r\n    {\r\n      icon: \"LineChart\",\r\n      title: \"Meal History & Trends\",\r\n      desc: \"View your meal analysis history and visualize nutrition trends over time.\"\r\n    },\r\n    {\r\n      icon: \"Zap\",\r\n      title: \"Smart Meal Suggestions\",\r\n      desc: \"Get AI-powered suggestions for healthier meals and recipes based on your goals.\"\r\n    },\r\n    {\r\n      icon: \"Camera\",\r\n      title: \"Multi-Food Recognition\",\r\n      desc: \"Analyze multiple foods in a single image for comprehensive nutrition info.\"\r\n    },\r\n    {\r\n      icon: \"Shield\",\r\n      title: \"Personalized Nutrition Goals\",\r\n      desc: \"Set calorie and macro goals, and track your progress automatically.\"\r\n    },\r\n    {\r\n      icon: \"CheckCircle\",\r\n      title: \"Allergen & Diet Warnings\",\r\n      desc: \"Get instant warnings for allergens or foods outside your dietary preferences.\"\r\n    }\r\n  ];\r\n  const featureListDesc = content?.featureListDesc || {\r\n    title: \"Why Choose NutriScan?\",\r\n    subtitle: \"Our platform offers advanced features for both casual users and nutrition professionals\"\r\n  };\r\n  const featureListImage = content?.featureListImage || \"https://images.unsplash.com/photo-1530021232320-687d8e3dba54?w=800&h=600&fit=crop\";\r\n  const finalCta = content?.finalCta || {\r\n    title: \"Start Your Nutrition Journey Today\",\r\n    subtitle: \"Join thousands of users who have transformed their relationship with food using NutriScan\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      {/* Header */}\r\n      <header className=\"bg-white/80 backdrop-blur-md sticky top-0 z-50 border-b border-slate-100 shadow-sm\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"bg-primary-500/10 p-2 rounded-xl\">\r\n                <Leaf className=\"h-7 w-7 text-primary-600\" />\r\n              </div>\r\n              <span className=\"ml-3 text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-secondary-500\">NutriScan</span>\r\n            </div>\r\n\r\n            <nav className=\"hidden md:flex space-x-8 items-center\">\r\n              <Link href=\"/\" className=\"text-slate-700 hover:text-primary-600 font-medium transition-colors\">\r\n                Home\r\n              </Link>\r\n              <Link href=\"/try-it\" className=\"text-slate-700 hover:text-primary-600 font-medium transition-colors\">\r\n                Try It Free\r\n              </Link>\r\n              <Link href=\"/pricing\" className=\"text-slate-700 hover:text-primary-600 font-medium transition-colors\">\r\n                Pricing\r\n              </Link>\r\n            </nav>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              {user ? (\r\n                <Link href=\"/dashboard\">\r\n                  <Button size=\"sm\" className=\"bg-primary-600 hover:bg-primary-700 shadow-md hover:shadow-lg transition-all duration-300\">\r\n                    Dashboard\r\n                  </Button>\r\n                </Link>\r\n              ) : (\r\n                <>\r\n                  <Link href=\"/login\" className=\"hidden sm:block\">\r\n                    <Button variant=\"outline\" size=\"sm\" className=\"border-primary-200 text-primary-700 hover:bg-primary-50 transition-all duration-300\">\r\n                      Sign In\r\n                    </Button>\r\n                  </Link>\r\n                  <Link href=\"/login\">\r\n                    <Button size=\"sm\" className=\"bg-primary-600 hover:bg-primary-700 shadow-md hover:shadow-glow transition-all duration-300\">\r\n                      Get Started\r\n                    </Button>\r\n                  </Link>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Hero Section */}\r\n      <section className=\"bg-gradient-to-br from-primary-50 via-white to-secondary-50 py-20 md:py-28 overflow-hidden relative\">\r\n        {/* Decorative elements */}\r\n        <div className=\"absolute top-0 left-0 w-full h-full overflow-hidden z-0 opacity-60\">\r\n          <div className=\"absolute top-1/4 left-1/4 w-64 h-64 bg-primary-200 rounded-full mix-blend-multiply filter blur-3xl animate-pulse-slow\"></div>\r\n          <div className=\"absolute bottom-1/3 right-1/4 w-64 h-64 bg-secondary-200 rounded-full mix-blend-multiply filter blur-3xl animate-pulse-slow animation-delay-2000\"></div>\r\n          <div className=\"absolute top-2/3 left-1/2 w-64 h-64 bg-accent-200 rounded-full mix-blend-multiply filter blur-3xl animate-pulse-slow animation-delay-4000\"></div>\r\n        </div>\r\n        \r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\r\n          <div className=\"flex flex-col md:flex-row items-center justify-between\">\r\n            <div className=\"md:w-1/2 mb-10 md:mb-0\">\r\n              <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-primary-100 text-primary-700 text-sm font-medium mb-6\">\r\n                <Sparkles className=\"h-4 w-4 mr-2\" />\r\n                AI-Powered Nutrition Tracking\r\n              </div>\r\n              <h1 className=\"text-4xl md:text-5xl xl:text-6xl font-extrabold mb-6 leading-tight\">\r\n                <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-secondary-500\">\r\n                  {loading ? \"Loading...\" : hero.title}\r\n                </span>\r\n              </h1>\r\n              <p className=\"text-lg md:text-xl text-slate-600 mb-8 max-w-lg leading-relaxed\">\r\n                {loading ? \"\" : hero.subtitle}\r\n              </p>\r\n              <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\r\n                <Link href=\"/try-it\">\r\n                  <Button size=\"lg\" className=\"bg-gradient-to-r from-primary-600 to-secondary-500 hover:from-primary-700 hover:to-secondary-600 shadow-lg hover:shadow-glow transition-all duration-300 px-8 text-white\">\r\n                    Try It Free\r\n                  </Button>\r\n                </Link>\r\n                <Link href=\"/login\">\r\n                  <Button size=\"lg\" variant=\"outline\" className=\"border-primary-200 text-primary-700 hover:bg-primary-50 transition-all duration-300\">\r\n                    Get Started <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n              \r\n              <div className=\"mt-8 flex items-center space-x-4\">\r\n                <div className=\"flex -space-x-2\">\r\n                  <img src=\"https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=100&h=100&fit=crop\" className=\"w-8 h-8 rounded-full border-2 border-white\" alt=\"User\" />\r\n                  <img src=\"https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=100&h=100&fit=crop\" className=\"w-8 h-8 rounded-full border-2 border-white\" alt=\"User\" />\r\n                  <img src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=100&h=100&fit=crop\" className=\"w-8 h-8 rounded-full border-2 border-white\" alt=\"User\" />\r\n                </div>\r\n                <span className=\"text-sm text-slate-600\">Joined by <span className=\"font-medium text-slate-900\">2,000+</span> users</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"md:w-1/2 flex justify-center\">\r\n              <div className=\"relative w-full max-w-lg\">\r\n                {/* Decorative blobs */}\r\n                <div className=\"absolute -top-6 -left-6 w-32 h-32 bg-primary-200 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-float\"></div>\r\n                <div className=\"absolute -bottom-10 -right-10 w-48 h-48 bg-secondary-200 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-float animation-delay-2000\"></div>\r\n                \r\n                {/* Main image card with glass effect */}\r\n                <div className=\"glass-effect rounded-2xl shadow-xl overflow-hidden p-2 relative\">\r\n                  <img \r\n                    src={hero.image}\r\n                    alt=\"Healthy food plate\" \r\n                    className=\"w-full h-auto rounded-xl shadow-md\"\r\n                  />\r\n                  \r\n                  {/* Floating stats card */}\r\n                  <div className=\"absolute top-4 right-4 glass-effect rounded-xl shadow-lg p-3 border border-white/40\">\r\n                    <div className=\"text-sm font-semibold text-slate-700\">Calories</div>\r\n                    <div className=\"text-2xl font-bold text-primary-600\">{hero.calories}</div>\r\n                  </div>\r\n                  \r\n                  {/* Floating nutrition card */}\r\n                  <div className=\"absolute -bottom-3 -left-3 glass-effect rounded-xl shadow-lg p-3 border border-white/40\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <div className=\"w-2 h-8 bg-primary-500 rounded-full\"></div>\r\n                      <div className=\"w-2 h-8 bg-secondary-500 rounded-full\"></div>\r\n                      <div className=\"w-2 h-8 bg-accent-500 rounded-full\"></div>\r\n                      <div className=\"ml-1\">\r\n                        <div className=\"text-xs font-semibold text-slate-700\">Balanced Nutrition</div>\r\n                        <div className=\"text-xs text-slate-500\">Protein • Carbs • Fat</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Features Section */}\r\n      <section className=\"py-24 bg-white relative overflow-hidden\">\r\n        {/* Background decoration */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-b from-white via-primary-50/30 to-white opacity-50 z-0\"></div>\r\n        <div className=\"absolute right-0 top-1/4 w-64 h-64 bg-primary-100 rounded-full mix-blend-multiply filter blur-3xl opacity-70 animate-float\"></div>\r\n        <div className=\"absolute left-0 bottom-1/4 w-64 h-64 bg-secondary-100 rounded-full mix-blend-multiply filter blur-3xl opacity-70 animate-float animation-delay-2000\"></div>\r\n        \r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\r\n          <div className=\"text-center mb-16\">\r\n            <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-primary-100 text-primary-700 text-sm font-medium mb-4\">\r\n              <Sparkles className=\"h-4 w-4 mr-2\" />\r\n              Simple Process\r\n            </div>\r\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-6 section-title inline-block\">\r\n              <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-secondary-500\">\r\n                How NutriScan Works\r\n              </span>\r\n            </h2>\r\n            <p className=\"text-lg text-slate-600 max-w-3xl mx-auto\">\r\n              Our AI-powered platform makes nutrition tracking simple, fast, and accurate\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid md:grid-cols-3 gap-8\">\r\n            {features.map((f: any, i: number) => (\r\n              <div \r\n                className=\"glass-effect p-8 rounded-2xl card-hover border border-white/40 relative\" \r\n                key={i}\r\n              >\r\n                {/* Feature number */}\r\n                <div className=\"absolute -top-4 -right-4 w-8 h-8 rounded-full bg-gradient-to-r from-primary-500 to-secondary-500 flex items-center justify-center text-white font-bold text-sm shadow-lg\">\r\n                  {i+1}\r\n                </div>\r\n                \r\n                {/* Icon */}\r\n                <div className=\"bg-gradient-to-br from-primary-100 to-primary-50 w-16 h-16 rounded-2xl flex items-center justify-center mb-6 shadow-md\">\r\n                  {f.icon === \"Camera\" && <Camera className=\"h-8 w-8 text-primary-600\" />}\r\n                  {f.icon === \"Zap\" && <Zap className=\"h-8 w-8 text-primary-600\" />}\r\n                  {f.icon === \"LineChart\" && <LineChart className=\"h-8 w-8 text-primary-600\" />}\r\n                </div>\r\n                \r\n                <h3 className=\"text-xl font-bold text-slate-900 mb-3\">{f.title}</h3>\r\n                <p className=\"text-slate-600 leading-relaxed\">{f.desc}</p>\r\n                \r\n                {/* Decorative element */}\r\n                <div className=\"absolute bottom-4 right-4 w-12 h-1 rounded-full bg-gradient-to-r from-primary-300/40 to-secondary-300/40\"></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Additional feature highlight */}\r\n          <div className=\"mt-16 bg-gradient-to-r from-primary-50 to-secondary-50 p-8 rounded-2xl shadow-lg border border-white/40\">\r\n            <div className=\"flex flex-col md:flex-row items-center justify-between\">\r\n              <div className=\"md:w-2/3 mb-6 md:mb-0 md:pr-8\">\r\n                <h3 className=\"text-2xl font-bold text-slate-900 mb-3\">Ready to transform your nutrition tracking?</h3>\r\n                <p className=\"text-slate-600\">Join thousands of users who have improved their health with our AI-powered nutrition analysis.</p>\r\n              </div>\r\n              <div>\r\n                <Link href=\"/try-it\">\r\n                  <Button size=\"lg\" className=\"bg-gradient-to-r from-primary-600 to-secondary-500 hover:from-primary-700 hover:to-secondary-600 shadow-lg hover:shadow-glow transition-all duration-300 px-8 text-white\">\r\n                    Get Started <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Pricing CTA */}\r\n      <section className=\"py-24 bg-gradient-to-b from-white to-slate-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"bg-gradient-to-br from-primary-600 to-secondary-600 rounded-3xl p-10 md:p-16 overflow-hidden relative shadow-xl\">\r\n            {/* Decorative elements */}\r\n            <div className=\"absolute right-0 top-0 w-64 h-64 bg-white/10 rounded-full blur-3xl opacity-70 -mr-20 -mt-20 animate-pulse-slow\"></div>\r\n            <div className=\"absolute left-0 bottom-0 w-64 h-64 bg-white/10 rounded-full blur-3xl opacity-60 -ml-20 -mb-20 animate-pulse-slow animation-delay-2000\"></div>\r\n            <div className=\"absolute right-1/4 bottom-1/4 w-32 h-32 bg-white/10 rounded-full blur-2xl opacity-40 animate-pulse-slow animation-delay-4000\"></div>\r\n            \r\n            {/* Decorative shapes */}\r\n            <div className=\"absolute top-8 right-8 w-24 h-24 border-4 border-white/20 rounded-xl rotate-12 opacity-70\"></div>\r\n            <div className=\"absolute bottom-8 left-8 w-16 h-16 border-4 border-white/20 rounded-full opacity-70\"></div>\r\n            \r\n            <div className=\"relative\">\r\n              <div className=\"text-center max-w-3xl mx-auto\">\r\n                <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-white/20 text-white text-sm font-medium mb-6 backdrop-blur-sm\">\r\n                  <Star className=\"h-4 w-4 mr-2 text-yellow-300\" />\r\n                  Premium Features Available\r\n                </div>\r\n                <h2 className=\"text-3xl md:text-4xl font-bold mb-6 text-white\">\r\n                  {loading ? \"Loading...\" : pricingCta.title}\r\n                </h2>\r\n                <p className=\"text-xl mb-10 text-white/90\">\r\n                  {loading ? \"\" : pricingCta.subtitle}\r\n                </p>\r\n                <div className=\"flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-6\">\r\n                  <Link href=\"/pricing\">\r\n                    <Button size=\"lg\" className=\"bg-white text-primary-700 hover:bg-slate-100 px-8 shadow-lg hover:shadow-xl transition-all duration-300 font-semibold\">\r\n                      View Pricing Plans\r\n                    </Button>\r\n                  </Link>\r\n                  <Link href=\"/try-it\">\r\n                    <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10 px-8 backdrop-blur-sm transition-all duration-300\">\r\n                      Try Free Demo <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n                \r\n                {/* Trust badges */}\r\n                <div className=\"mt-10 flex flex-wrap justify-center gap-6 items-center\">\r\n                  <div className=\"flex items-center text-white/80 text-sm\">\r\n                    <CheckCircle className=\"h-5 w-5 mr-2 text-green-300\" />\r\n                    No credit card required\r\n                  </div>\r\n                  <div className=\"flex items-center text-white/80 text-sm\">\r\n                    <CheckCircle className=\"h-5 w-5 mr-2 text-green-300\" />\r\n                    14-day free trial\r\n                  </div>\r\n                  <div className=\"flex items-center text-white/80 text-sm\">\r\n                    <CheckCircle className=\"h-5 w-5 mr-2 text-green-300\" />\r\n                    Cancel anytime\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Testimonials */}\r\n      <section className=\"py-24 bg-gradient-to-b from-slate-50 to-white relative overflow-hidden\">\r\n        {/* Decorative elements */}\r\n        <div className=\"absolute left-0 top-1/4 w-72 h-72 bg-primary-100 rounded-full blur-3xl opacity-60 -ml-20\"></div>\r\n        <div className=\"absolute right-0 bottom-1/4 w-72 h-72 bg-secondary-100 rounded-full blur-3xl opacity-60 -mr-20\"></div>\r\n        \r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\r\n          <div className=\"text-center mb-16\">\r\n            <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-accent-100 text-accent-700 text-sm font-medium mb-6\">\r\n              <Heart className=\"h-4 w-4 mr-2 text-accent-500\" />\r\n              What Our Users Say\r\n            </div>\r\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-primary-600 to-secondary-600 text-transparent bg-clip-text\">\r\n              Trusted by thousands of users worldwide\r\n            </h2>\r\n            <p className=\"text-xl text-slate-600 max-w-3xl mx-auto\">\r\n              See what people are saying about their experience with NutriScan\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n            {testimonials.map((testimonial: { quote: string; avatar?: string; name: string; role: string }, i: number) => (\r\n              <div key={i} className=\"bg-white p-8 rounded-2xl shadow-md hover:shadow-lg transition-all duration-300 border border-slate-100\">\r\n                <div className=\"mb-6\">\r\n                  <div className=\"flex items-center mb-1\">\r\n                    {[...Array(5)].map((_, i) => (\r\n                      <Star key={i} className=\"h-5 w-5 text-yellow-400 fill-yellow-400\" />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-slate-700 mb-6 italic\">\"{testimonial.quote}\"</p>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"h-14 w-14 rounded-full overflow-hidden mr-4 ring-2 ring-primary-100\">\r\n                    <img \r\n                      src={testimonial.avatar || \"/placeholder-avatar.png\"} \r\n                      alt={`${testimonial.name} avatar`}\r\n                      className=\"h-full w-full object-cover\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"font-semibold text-slate-900\">{testimonial.name}</h4>\r\n                    <p className=\"text-sm text-slate-500\">{testimonial.role}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Trust indicators */}\r\n          <div className=\"mt-20 pt-10 border-t border-slate-200\">\r\n            <h3 className=\"text-center text-lg font-medium text-slate-700 mb-8\">Trusted by health-conscious individuals worldwide</h3>\r\n            <div className=\"flex flex-wrap justify-center items-center gap-8 md:gap-16 opacity-70\">\r\n              <div className=\"text-slate-400 font-semibold text-xl\">FitnessMag</div>\r\n              <div className=\"text-slate-400 font-semibold text-xl\">HealthTech</div>\r\n              <div className=\"text-slate-400 font-semibold text-xl\">NutritionDaily</div>\r\n              <div className=\"text-slate-400 font-semibold text-xl\">WellnessHub</div>\r\n              <div className=\"text-slate-400 font-semibold text-xl\">FitLife</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Feature List */}\r\n      <section className=\"py-16 bg-neutral-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"md:flex items-center\">\r\n            <div className=\"md:w-1/2 mb-10 md:mb-0\">\r\n              <h2 className=\"text-3xl font-bold text-neutral-900 mb-4\">{featureListDesc.title}</h2>\r\n              <p className=\"text-lg text-neutral-600 mb-8\">{featureListDesc.subtitle}</p>\r\n\r\n              <div className=\"space-y-4\">\r\n                {featureList.map((f: any, i: number) => (\r\n                  <div className=\"flex\" key={i}>\r\n                    {f.icon === \"CheckCircle\" && <CheckCircle className=\"h-6 w-6 text-primary-600 mr-3 flex-shrink-0\" />}\r\n                    {f.icon === \"LineChart\" && <LineChart className=\"h-6 w-6 text-primary-600 mr-3 flex-shrink-0\" />}\r\n                    {f.icon === \"Zap\" && <Zap className=\"h-6 w-6 text-primary-600 mr-3 flex-shrink-0\" />}\r\n                    {f.icon === \"Camera\" && <Camera className=\"h-6 w-6 text-primary-600 mr-3 flex-shrink-0\" />}\r\n                    {f.icon === \"Shield\" && <Shield className=\"h-6 w-6 text-primary-600 mr-3 flex-shrink-0\" />}\r\n                    <div>\r\n                      <h4 className=\"font-semibold text-neutral-900\">{f.title}</h4>\r\n                      <p className=\"text-neutral-600\">{f.desc}</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"md:w-1/2 md:pl-12\">\r\n              <div className=\"bg-white p-1 rounded-xl shadow-lg\">\r\n                <img \r\n                  src={featureListImage}\r\n                  alt=\"AI-powered nutrition analysis\" \r\n                  className=\"w-full h-auto rounded-lg shadow-lg\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Final CTA */}\r\n      <section className=\"py-32 bg-gradient-to-b from-white to-slate-50 relative overflow-hidden\">\r\n        {/* Decorative elements */}\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-primary-100 rounded-full blur-3xl opacity-50\"></div>\r\n          <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-secondary-100 rounded-full blur-3xl opacity-50\"></div>\r\n          <div className=\"absolute top-1/4 left-1/4 w-64 h-64 bg-accent-100 rounded-full blur-3xl opacity-30\"></div>\r\n        </div>\r\n        \r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\r\n          <div className=\"text-center max-w-3xl mx-auto\">\r\n            <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-primary-100 text-primary-700 text-sm font-medium mb-6\">\r\n              <Sparkles className=\"h-4 w-4 mr-2 text-primary-500\" />\r\n              Start Your Journey Today\r\n            </div>\r\n            \r\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-primary-600 via-secondary-600 to-accent-600 text-transparent bg-clip-text\">\r\n              {loading ? \"Loading...\" : finalCta.title}\r\n            </h2>\r\n            \r\n            <p className=\"text-xl mb-10 text-slate-600\">\r\n              {loading ? \"\" : finalCta.subtitle}\r\n            </p>\r\n            \r\n            <div className=\"flex flex-col items-center\">\r\n              <Link href=\"/login\">\r\n                <Button size=\"lg\" className=\"px-10 py-7 text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 bg-gradient-to-r from-primary-600 to-secondary-600 hover:from-primary-700 hover:to-secondary-700\">\r\n                  Create Free Account <ArrowRight className=\"ml-2 h-5 w-5\" />\r\n                </Button>\r\n              </Link>\r\n              \r\n              <p className=\"mt-6 text-slate-500 flex items-center\">\r\n                <Shield className=\"h-4 w-4 mr-2\" />\r\n                No credit card required. Cancel anytime.\r\n              </p>\r\n            </div>\r\n            \r\n            {/* User stats */}\r\n            <div className=\"mt-16 grid grid-cols-2 md:grid-cols-4 gap-8\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-3xl font-bold text-primary-600\">10k+</p>\r\n                <p className=\"text-slate-500\">Active Users</p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <p className=\"text-3xl font-bold text-primary-600\">5M+</p>\r\n                <p className=\"text-slate-500\">Meals Tracked</p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <p className=\"text-3xl font-bold text-primary-600\">98%</p>\r\n                <p className=\"text-slate-500\">Satisfaction</p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <p className=\"text-3xl font-bold text-primary-600\">24/7</p>\r\n                <p className=\"text-slate-500\">Support</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"bg-slate-900 text-white pt-20 pb-10 relative overflow-hidden\">\r\n        {/* Decorative elements */}\r\n        <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\r\n          <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-primary-900/20 rounded-full blur-3xl opacity-30\"></div>\r\n          <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-secondary-900/20 rounded-full blur-3xl opacity-30\"></div>\r\n        </div>\r\n        \r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-12 lg:gap-8\">\r\n            <div className=\"lg:col-span-2\">\r\n              <div className=\"flex items-center mb-6\">\r\n                <div className=\"text-2xl font-bold bg-gradient-to-r from-primary-400 to-secondary-400 text-transparent bg-clip-text\">AICalorieTracker</div>\r\n              </div>\r\n              <p className=\"text-slate-400 mb-6 max-w-md\">AI-powered nutrition tracking for a healthier you. Analyze your meals, track your progress, and achieve your health goals.</p>\r\n              <div className=\"flex space-x-4\">\r\n                <a href=\"#\" className=\"bg-slate-800 p-2 rounded-full text-slate-400 hover:text-white hover:bg-primary-600 transition-colors duration-300\">\r\n                  <span className=\"sr-only\">Twitter</span>\r\n                  <Twitter className=\"h-5 w-5\" />\r\n                </a>\r\n                <a href=\"#\" className=\"bg-slate-800 p-2 rounded-full text-slate-400 hover:text-white hover:bg-primary-600 transition-colors duration-300\">\r\n                  <span className=\"sr-only\">Facebook</span>\r\n                  <Facebook className=\"h-5 w-5\" />\r\n                </a>\r\n                <a href=\"#\" className=\"bg-slate-800 p-2 rounded-full text-slate-400 hover:text-white hover:bg-primary-600 transition-colors duration-300\">\r\n                  <span className=\"sr-only\">Instagram</span>\r\n                  <Instagram className=\"h-5 w-5\" />\r\n                </a>\r\n                <a href=\"#\" className=\"bg-slate-800 p-2 rounded-full text-slate-400 hover:text-white hover:bg-primary-600 transition-colors duration-300\">\r\n                  <span className=\"sr-only\">GitHub</span>\r\n                  <Github className=\"h-5 w-5\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"text-lg font-semibold mb-6 text-white\">Product</h4>\r\n              <ul className=\"space-y-4\">\r\n                <li><Link href=\"/features\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Features</Link></li>\r\n                <li><Link href=\"/pricing\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Pricing</Link></li>\r\n                <li><Link href=\"/try-it\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Try Demo</Link></li>\r\n                <li><Link href=\"/integrations\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Integrations</Link></li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"text-lg font-semibold mb-6 text-white\">Company</h4>\r\n              <ul className=\"space-y-4\">\r\n                <li><Link href=\"/about\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">About Us</Link></li>\r\n                <li><Link href=\"/blog\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Blog</Link></li>\r\n                <li><Link href=\"/careers\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Careers</Link></li>\r\n                <li><Link href=\"/contact\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Contact</Link></li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"text-lg font-semibold mb-6 text-white\">Legal</h4>\r\n              <ul className=\"space-y-4\">\r\n                <li><Link href=\"/privacy\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Privacy Policy</Link></li>\r\n                <li><Link href=\"/terms\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Terms of Service</Link></li>\r\n                <li><Link href=\"/cookies\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">Cookie Policy</Link></li>\r\n                <li><Link href=\"/gdpr\" className=\"text-slate-400 hover:text-white transition-colors duration-200\">GDPR</Link></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"border-t border-slate-800 mt-16 pt-8 flex flex-col md:flex-row justify-between items-center\">\r\n            <p className=\"text-slate-500 text-sm\">© {new Date().getFullYear()} AICalorieTracker. All rights reserved.</p>\r\n            \r\n            <div className=\"mt-4 md:mt-0 flex flex-wrap justify-center gap-4 text-sm text-slate-500\">\r\n              <Link href=\"/sitemap\" className=\"hover:text-white transition-colors duration-200\">Sitemap</Link>\r\n              <span>·</span>\r\n              <Link href=\"/accessibility\" className=\"hover:text-white transition-colors duration-200\">Accessibility</Link>\r\n              <span>·</span>\r\n              <Link href=\"/help\" className=\"hover:text-white transition-colors duration-200\">Help Center</Link>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Newsletter subscription - optional */}\r\n          <div className=\"mt-16 pt-8 border-t border-slate-800\">\r\n            <div className=\"flex flex-col md:flex-row justify-between items-center\">\r\n              <div className=\"mb-4 md:mb-0\">\r\n                <h5 className=\"text-white font-semibold mb-2\">Subscribe to our newsletter</h5>\r\n                <p className=\"text-slate-400 text-sm\">Get the latest updates and nutrition tips</p>\r\n              </div>\r\n              <div className=\"flex w-full md:w-auto\">\r\n                <input \r\n                  type=\"email\" \r\n                  placeholder=\"Enter your email\" \r\n                  className=\"px-4 py-2 bg-slate-800 text-white rounded-l-md focus:outline-none focus:ring-2 focus:ring-primary-500 w-full md:w-auto\"\r\n                />\r\n                <button className=\"bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-r-md transition-colors duration-300\">\r\n                  Subscribe\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}","import { Button } from \"@/components/ui/button\";\r\nimport { Link } from \"wouter\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { useState, useRef, ChangeEvent, useEffect } from \"react\";\r\nimport { Leaf, Camera, Upload, Loader2, Info, ArrowLeft } from \"lucide-react\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { apiRequest } from \"@/lib/queryClient\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { NutritionChart } from \"@/components/dashboard/nutrition-chart\";\r\n\r\nexport default function TryItPage() {\r\n  const { user } = useAuth();\r\n  const { toast } = useToast();\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const [uploadedImage, setUploadedImage] = useState<string | null>(null);\r\n  const [analysisResult, setAnalysisResult] = useState<any | null>(null);\r\n  const [tryItContent, setTryItContent] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const analyzeImageMutation = useMutation({\r\n    mutationFn: async (imageData: string) => {\r\n      const res = await apiRequest(\"POST\", \"/api/demo-analyze\", { imageData });\r\n      return res.json();\r\n    },\r\n    onSuccess: (result) => {\r\n      setAnalysisResult(result);\r\n      toast({\r\n        title: \"Analysis complete!\",\r\n        description: `Detected ${result.foodName} with ${result.calories} calories.`,\r\n      });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({\r\n        title: \"Analysis failed\",\r\n        description: error.message,\r\n        variant: \"destructive\",\r\n      });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(\"/api/admin/content/try-it\")\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        setTryItContent(data.value);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  }, []);\r\n\r\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const imageData = event.target?.result as string;\r\n      setUploadedImage(imageData);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleUploadClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const analyzeImage = () => {\r\n    if (uploadedImage) {\r\n      analyzeImageMutation.mutate(uploadedImage);\r\n    }\r\n  };\r\n\r\n  const resetUpload = () => {\r\n    setUploadedImage(null);\r\n    setAnalysisResult(null);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const isLoading = analyzeImageMutation.isPending;\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center\">\r\n              <Leaf className=\"h-8 w-8 text-primary\" />\r\n              <span className=\"ml-2 text-2xl font-bold text-neutral-800\">NutriScan</span>\r\n            </div>\r\n            \r\n            <nav className=\"hidden md:flex space-x-8 items-center\">\r\n              <Link href=\"/\" className=\"text-neutral-700 hover:text-primary-600 font-medium\">\r\n                Home\r\n              </Link>\r\n              <Link href=\"/try-it\" className=\"text-primary-600 font-medium\">\r\n                Try It Free\r\n              </Link>\r\n              <Link href=\"/pricing\" className=\"text-neutral-700 hover:text-primary-600 font-medium\">\r\n                Pricing\r\n              </Link>\r\n            </nav>\r\n            \r\n            <div className=\"flex items-center\">\r\n              {user ? (\r\n                <Link href=\"/dashboard\">\r\n                  <Button size=\"sm\" className=\"bg-primary-600 hover:bg-primary-700\">\r\n                    Dashboard\r\n                  </Button>\r\n                </Link>\r\n              ) : (\r\n                <Link href=\"/login\">\r\n                  <Button size=\"sm\" className=\"bg-primary-600 hover:bg-primary-700\">\r\n                    Sign In\r\n                  </Button>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      \r\n      <main className=\"flex-grow\">\r\n        {/* Title Section */}\r\n        <section className=\"bg-gradient-to-b from-primary-50 to-white py-12\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-primary mb-4\">\r\n              Try NutriScan for Free\r\n            </h1>\r\n            <p className=\"text-lg text-neutral-600 mb-8 max-w-2xl mx-auto\">\r\n              Upload a food image to see how our AI instantly analyzes the nutritional content.\r\n              No account required!\r\n            </p>\r\n            \r\n            <div className=\"flex justify-center\">\r\n              <Link href=\"/\">\r\n                <Button variant=\"outline\" className=\"flex items-center space-x-2\">\r\n                  <ArrowLeft className=\"h-4 w-4\" />\r\n                  <span>Back to Home</span>\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        \r\n        {/* Main Content */}\r\n        <section className=\"py-12\">\r\n          <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"grid md:grid-cols-2 gap-12\">\r\n              {/* Upload Section */}\r\n              <div>\r\n                <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden\">\r\n                  <div className=\"px-6 py-5 border-b border-neutral-200\">\r\n                    <h2 className=\"text-xl font-semibold text-neutral-800\">\r\n                      {loading ? \"Loading...\" : (tryItContent || \"Upload a Food Image\")}\r\n                    </h2>\r\n                    <p className=\"text-neutral-600 text-sm mt-1\">\r\n                      {loading ? \"\" : (tryItContent ? null : \"Take a photo or select an image of your meal\")}\r\n                    </p>\r\n                  </div>\r\n                  \r\n                  <div className=\"p-6\">\r\n                    <div className=\"relative bg-neutral-100 rounded-lg overflow-hidden\" style={{ minHeight: \"300px\" }}>\r\n                      {uploadedImage ? (\r\n                        <div className=\"absolute inset-0\">\r\n                          <img \r\n                            src={uploadedImage} \r\n                            alt=\"Uploaded meal\" \r\n                            className=\"w-full h-full object-cover\"\r\n                          />\r\n                          <div className=\"absolute inset-0 bg-black bg-opacity-60 flex items-center justify-center\">\r\n                            <div className=\"flex flex-col items-center p-4 space-y-4\">\r\n                              <Button onClick={analyzeImage} disabled={isLoading} className=\"border border-neutral-100 bg-primary-600 hover:bg-primary-700 text-white font-medium px-6 py-2 h-12 text-base\">\r\n                                {isLoading ? (\r\n                                  <>\r\n                                    <Loader2 className=\"h-5 w-5 mr-2 animate-spin\" />\r\n                                    Analyzing...\r\n                                  </>\r\n                                ) : (\r\n                                  \"Analyze Image\"\r\n                                )}\r\n                              </Button>\r\n                              <Button variant=\"secondary\" onClick={resetUpload} disabled={isLoading} className=\"font-medium\">\r\n                                Cancel\r\n                              </Button>\r\n                              {isLoading && (\r\n                                <div className=\"mt-2 text-white text-center\">\r\n                                  <p className=\"mb-2\">AI is analyzing your meal</p>\r\n                                  <div className=\"w-48 h-2 bg-gray-700 rounded-full overflow-hidden\">\r\n                                    <div className=\"h-full bg-primary-500 animate-pulse rounded-full\"></div>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"absolute inset-0 flex flex-col items-center justify-center p-6 text-center\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 text-neutral-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                          </svg>\r\n                          <p className=\"text-neutral-600 font-medium mb-2\">Take a photo or upload an image of your meal</p>\r\n                          <p className=\"text-neutral-500 text-sm\">Supported formats: JPG, PNG</p>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <div className=\"absolute bottom-0 inset-x-0 p-6 flex justify-center space-x-4\">\r\n                        <Button \r\n                          onClick={handleUploadClick} \r\n                          variant=\"outline\" \r\n                          className=\"inline-flex items-center px-4 py-2.5 border border-neutral-300 shadow-sm text-sm font-medium rounded-md text-neutral-700 bg-white hover:bg-primary\"\r\n                          disabled={isLoading}\r\n                        >\r\n                          <Upload className=\"h-5 w-5 mr-2 text-neutral-500\" />\r\n                          Upload Photo\r\n                        </Button>\r\n                        \r\n                        <input\r\n                          type=\"file\"\r\n                          ref={fileInputRef}\r\n                          onChange={handleFileChange}\r\n                          accept=\"image/jpeg, image/png\"\r\n                          className=\"hidden\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mt-4 flex items-center p-3 bg-primary-50 rounded-lg\">\r\n                      <Info className=\"h-5 w-5 text-primary-600 mr-2 flex-shrink-0\" />\r\n                      <p className=\"text-sm text-neutral-700\">\r\n                        This is a demo version with limited features. <Link href=\"/login\" className=\"text-primary-600 font-medium\">Sign up</Link> for full access.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Results Section */}\r\n              <div>\r\n                <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden h-full\">\r\n                  <div className=\"px-6 py-5 border-b border-neutral-200\">\r\n                    <h2 className=\"text-xl font-semibold text-neutral-800\">Analysis Results</h2>\r\n                    <p className=\"text-neutral-600 text-sm mt-1\">\r\n                      See the nutritional breakdown of your meal\r\n                    </p>\r\n                  </div>\r\n                  \r\n                  <div className=\"p-6\">\r\n                    {analysisResult ? (\r\n                      <div>\r\n                        <div className=\"mb-6\">\r\n                          <h3 className=\"text-xl font-semibold text-neutral-900 mb-1\">{analysisResult.foodName}</h3>\r\n                          <div className=\"inline-flex items-center bg-primary-50 text-primary-800 py-1 px-3 rounded-full text-sm font-medium\">\r\n                            <span>{analysisResult.calories} calories</span>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"space-y-4\">\r\n                          <div>\r\n                            <div className=\"flex justify-between items-center mb-1\">\r\n                              <span className=\"text-sm font-medium text-neutral-700\">Protein</span>\r\n                              <span className=\"text-sm text-neutral-600\">{analysisResult.protein}g</span>\r\n                            </div>\r\n                            <NutritionChart \r\n                              value={analysisResult.protein} \r\n                              maxValue={50} \r\n                              color=\"bg-chart-1\" \r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"flex justify-between items-center mb-1\">\r\n                              <span className=\"text-sm font-medium text-neutral-700\">Carbs</span>\r\n                              <span className=\"text-sm text-neutral-600\">{analysisResult.carbs}g</span>\r\n                            </div>\r\n                            <NutritionChart \r\n                              value={analysisResult.carbs} \r\n                              maxValue={100} \r\n                              color=\"bg-chart-2\" \r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"flex justify-between items-center mb-1\">\r\n                              <span className=\"text-sm font-medium text-neutral-700\">Fat</span>\r\n                              <span className=\"text-sm text-neutral-600\">{analysisResult.fat}g</span>\r\n                            </div>\r\n                            <NutritionChart \r\n                              value={analysisResult.fat} \r\n                              maxValue={40} \r\n                              color=\"bg-chart-3\" \r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"flex justify-between items-center mb-1\">\r\n                              <span className=\"text-sm font-medium text-neutral-700\">Fiber</span>\r\n                              <span className=\"text-sm text-neutral-600\">{analysisResult.fiber}g</span>\r\n                            </div>\r\n                            <NutritionChart \r\n                              value={analysisResult.fiber} \r\n                              maxValue={20} \r\n                              color=\"bg-chart-4\" \r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"mt-8 text-center\">\r\n                          <Link href=\"/login\">\r\n                            <Button className=\"bg-primary-600 hover:bg-primary-700\">\r\n                              Sign Up for Full Access\r\n                            </Button>\r\n                          </Link>\r\n                          <p className=\"mt-2 text-sm text-neutral-500\">\r\n                            Create an account to save and track your meal history\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex flex-col items-center justify-center text-center py-12\">\r\n                        <div className=\"bg-neutral-100 rounded-full p-6 mb-4\">\r\n                          <Leaf className=\"h-12 w-12 text-neutral-400\" />\r\n                        </div>\r\n                        <h3 className=\"text-lg font-medium text-neutral-900 mb-2\">No Analysis Yet</h3>\r\n                        <p className=\"text-neutral-600 max-w-sm mb-6\">\r\n                          Upload a food image and click \"Analyze Image\" to see the nutritional information of your meal\r\n                        </p>\r\n                        <div className=\"flex space-x-4\">\r\n                          <Link href=\"/login\">\r\n                            <Button variant=\"outline\">\r\n                              Sign Up\r\n                            </Button>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        \r\n        {/* Features Section */}\r\n        <section className=\"py-12 bg-neutral-50\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"text-center mb-10\">\r\n              <h2 className=\"text-2xl font-bold text-neutral-900 mb-2\">\r\n                Unlock Full Features with a Free Account\r\n              </h2>\r\n              <p className=\"text-neutral-600 max-w-2xl mx-auto\">\r\n                Sign up to access all the powerful features of NutriScan\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"grid md:grid-cols-3 gap-6\">\r\n              <Card className=\"bg-white\">\r\n                <CardContent className=\"pt-6\">\r\n                  <div className=\"bg-primary-100 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\r\n                    <Camera className=\"h-6 w-6 text-primary-600\" />\r\n                  </div>\r\n                  <h3 className=\"font-semibold text-lg text-neutral-900 mb-2\">Save Your History</h3>\r\n                  <p className=\"text-neutral-600\">\r\n                    Track all your meals over time and monitor your nutritional trends\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n              \r\n              <Card className=\"bg-white\">\r\n                <CardContent className=\"pt-6\">\r\n                  <div className=\"bg-primary-100 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6 text-primary-600\">\r\n                      <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"font-semibold text-lg text-neutral-900 mb-2\">Weekly Statistics</h3>\r\n                  <p className=\"text-neutral-600\">\r\n                    Get detailed weekly reports with insights about your nutritional intake\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n              \r\n              <Card className=\"bg-white\">\r\n                <CardContent className=\"pt-6\">\r\n                  <div className=\"bg-primary-100 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"h-6 w-6 text-primary-600\">\r\n                      <path d=\"M12 2v8L7 5\" />\r\n                      <circle cx=\"12\" cy=\"14\" r=\"8\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"font-semibold text-lg text-neutral-900 mb-2\">Smart Recommendations</h3>\r\n                  <p className=\"text-neutral-600\">\r\n                    Receive personalized nutrition tips based on your eating habits\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n            \r\n            <div className=\"text-center mt-10\">\r\n              <Link href=\"/login\">\r\n                <Button size=\"lg\" className=\"bg-primary hover:bg-primary-700 text-primary-100\">\r\n                  Create Free Account\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n}","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","import { Button } from \"@/components/ui/button\";\r\nimport { Link } from \"wouter\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { Leaf, Check, CreditCard } from \"lucide-react\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\n\r\nexport default function PricingPage() {\r\n  const { user } = useAuth();\r\n  const [billingInterval, setBillingInterval] = useState<\"monthly\" | \"yearly\">(\"monthly\");\r\n  \r\n  // Dynamic content state for hero section\r\n  const [pricingContent, setPricingContent] = useState<{ title: string; subtitle: string } | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(\"/api/admin/content/pricing\")\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        // Support both plain string and JSON object for backward compatibility\r\n        try {\r\n          const parsed = JSON.parse(data.value);\r\n          setPricingContent(parsed);\r\n        } catch {\r\n          setPricingContent({ title: data.value || \"Simple, Transparent Pricing\", subtitle: \"Choose the plan that fits your nutrition tracking needs. All plans include our core AI-powered food analysis technology.\" });\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(() => setLoading(false));\r\n  }, []);\r\n\r\n  // Pricing tiers\r\n  const tiers = [\r\n    {\r\n      name: \"Basic\",\r\n      id: \"basic\",\r\n      href: user ? \"/subscribe?plan=basic\" : \"/login\",\r\n      price: {\r\n        monthly: \"$9.99\",\r\n        yearly: \"$99.99\",\r\n        discount: \"Save 15%\"\r\n      },\r\n      description: \"Perfect for individuals getting started with nutrition tracking\",\r\n      features: [\r\n        \"25 AI food analyses per month\",\r\n        \"Basic nutrition tracking\",\r\n        \"Weekly reports\",\r\n        \"Email support\"\r\n      ],\r\n      featured: false\r\n    },\r\n    {\r\n      name: \"Premium\",\r\n      id: \"premium\",\r\n      href: user ? \"/subscribe?plan=premium\" : \"/login\",\r\n      price: {\r\n        monthly: \"$19.99\",\r\n        yearly: \"$199.99\",\r\n        discount: \"Save 15%\"\r\n      },\r\n      description: \"Enhanced features for more detailed nutrition tracking\",\r\n      features: [\r\n        \"100 AI food analyses per month\",\r\n        \"Advanced nutrition reporting\",\r\n        \"Personalized meal suggestions\",\r\n        \"Weekly & monthly trends\",\r\n        \"Priority email support\"\r\n      ],\r\n      featured: true\r\n    },\r\n    {\r\n      name: \"Professional\",\r\n      id: \"professional\",\r\n      href: user ? \"/subscribe?plan=professional\" : \"/login\",\r\n      price: {\r\n        monthly: \"$39.99\",\r\n        yearly: \"$399.99\",\r\n        discount: \"Save 15%\"\r\n      },\r\n      description: \"For nutritionists and fitness professionals\",\r\n      features: [\r\n        \"Unlimited AI food analyses\",\r\n        \"Client management tools\",\r\n        \"Advanced analytics dashboard\",\r\n        \"Custom reporting\",\r\n        \"API access\",\r\n        \"Dedicated support\"\r\n      ],\r\n      featured: false\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center\">\r\n              <Leaf className=\"h-8 w-8 text-primary\" />\r\n              <span className=\"ml-2 text-2xl font-bold text-neutral-800\">NutriScan</span>\r\n            </div>\r\n            \r\n            <nav className=\"hidden md:flex space-x-8 items-center\">\r\n              <Link href=\"/\" className=\"text-neutral-700 hover:text-primary-600 font-medium\">\r\n                Home\r\n              </Link>\r\n              <Link href=\"/try-it\" className=\"text-neutral-700 hover:text-primary-600 font-medium\">\r\n                Try It Free\r\n              </Link>\r\n              <Link href=\"/pricing\" className=\"text-primary-600 font-medium\">\r\n                Pricing\r\n              </Link>\r\n            </nav>\r\n            \r\n            <div className=\"flex items-center\">\r\n              {user ? (\r\n                <Link href=\"/dashboard\">\r\n                  <Button size=\"sm\" className=\"bg-primary-600 hover:bg-primary-700\">\r\n                    Dashboard\r\n                  </Button>\r\n                </Link>\r\n              ) : (\r\n                <Link href=\"/login\">\r\n                  <Button size=\"sm\" className=\"bg-primary-600 hover:bg-primary-700\">\r\n                    Sign In\r\n                  </Button>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      \r\n      <main className=\"flex-grow\">\r\n        {/* Pricing Hero */}\r\n        <section className=\"bg-gradient-to-b from-primary-50 to-white py-12\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-primary mb-4\">\r\n              {loading ? \"Loading...\" : (pricingContent?.title || \"Simple, Transparent Pricing\")}\r\n            </h1>\r\n            <p className=\"text-lg text-neutral-600 mb-8 max-w-2xl mx-auto\">\r\n              {loading ? \"\" : (pricingContent?.subtitle || \"Choose the plan that fits your nutrition tracking needs. All plans include our core AI-powered food analysis technology.\")}\r\n            </p>\r\n            \r\n            <div className=\"flex justify-center\">\r\n              <Tabs \r\n                defaultValue=\"monthly\" \r\n                className=\"w-full max-w-xs\"\r\n                value={billingInterval}\r\n                onValueChange={(value) => setBillingInterval(value as \"monthly\" | \"yearly\")}\r\n              >\r\n                <TabsList className=\"grid w-full grid-cols-2\">\r\n                  <TabsTrigger value=\"monthly\">Monthly</TabsTrigger>\r\n                  <TabsTrigger value=\"yearly\">Yearly</TabsTrigger>\r\n                </TabsList>\r\n              </Tabs>\r\n            </div>\r\n            \r\n            {billingInterval === \"yearly\" && (\r\n              <p className=\"mt-2 text-sm text-primary-600 font-medium\">\r\n                Save up to 15% with yearly billing\r\n              </p>\r\n            )}\r\n          </div>\r\n        </section>\r\n        \r\n        {/* Pricing Cards */}\r\n        <section className=\"py-12\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"grid md:grid-cols-3 gap-8\">\r\n              {tiers.map((tier) => (\r\n                <Card key={tier.id} className={`border ${tier.featured ? 'border-primary-500 ring-1 ring-primary-500' : 'border-neutral-200'} overflow-hidden`}>\r\n                  {tier.featured && (\r\n                    <div className=\"bg-primary-500 text-white text-xs font-semibold text-center py-1\">\r\n                      MOST POPULAR\r\n                    </div>\r\n                  )}\r\n                  <CardHeader className={tier.featured ? 'bg-primary-50' : ''}>\r\n                    <CardTitle>{tier.name}</CardTitle>\r\n                    <CardDescription>{tier.description}</CardDescription>\r\n                  </CardHeader>\r\n                  <CardContent className=\"p-6\">\r\n                    <div className=\"mb-6\">\r\n                      <span className=\"text-4xl font-bold text-neutral\">{billingInterval === \"monthly\" ? tier.price.monthly : tier.price.yearly}</span>\r\n                      <span className=\"text-neutral-600 ml-2\">{billingInterval === \"monthly\" ? \"/ month\" : \"/ year\"}</span>\r\n                      \r\n                      {billingInterval === \"yearly\" && (\r\n                        <span className=\"block mt-1 text-sm text-primary-600 font-medium\">\r\n                          {tier.price.discount}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    <ul className=\"space-y-3\">\r\n                      {tier.features.map((feature, idx) => (\r\n                        <li key={idx} className=\"flex items-start\">\r\n                          <Check className=\"h-5 w-5 text-primary-500 mr-3 flex-shrink-0 mt-0.5\" />\r\n                          <span className=\"text-neutral\">{feature}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </CardContent>\r\n                  <CardFooter className=\"bg-neutral-50 px-6 py-4\">\r\n                    <Link href={tier.href} className=\"w-full\">\r\n                      <Button \r\n                        className={`w-full ${tier.featured ? 'bg-primary hover:bg-gradient-to-b' : 'hover:bg-primary'}`}\r\n                        variant={tier.featured ? \"default\" : \"outline\"}\r\n                      >\r\n                        {user ? \"Subscribe Now\" : \"Create Account\"}\r\n                      </Button>\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n            \r\n            {/* Enterprise Option */}\r\n            <div className=\"mt-12 bg-neutral-50 rounded-xl p-8 md:p-10\">\r\n              <div className=\"md:flex items-center justify-between\">\r\n                <div className=\"mb-6 md:mb-0 md:mr-6\">\r\n                  <h3 className=\"text-2xl font-bold text-neutral-900 mb-2\">Enterprise Plan</h3>\r\n                  <p className=\"text-neutral-600 max-w-xl\">\r\n                    Need a custom solution for your organization? Our enterprise plan includes custom features,\r\n                    dedicated support, and volume pricing.\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex-shrink-0\">\r\n                  <Link href=\"/contact\">\r\n                    <Button size=\"lg\" className={`w-full 'bg-primary hover:bg-gradient-to-b`}>\r\n                      Contact Sales\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        \r\n        {/* Payment Methods */}\r\n        <section className=\"py-12 bg-white\">\r\n          <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"text-center mb-10\">\r\n              <h2 className=\"text-2xl font-bold text-neutral-900 mb-3\">\r\n                Secure Payment Methods\r\n              </h2>\r\n              <p className=\"text-neutral-600 max-w-2xl mx-auto\">\r\n                We support various payment methods to make your subscription process seamless\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"bg-neutral-50 rounded-xl p-8 flex flex-wrap justify-center items-center gap-8 md:gap-12\">\r\n              <div className=\"flex flex-col items-center\">\r\n                <CreditCard className=\"h-10 w-10 text-neutral-600 mb-2\" />\r\n                <span className=\"text-sm font-medium text-neutral-700\">Credit Card</span>\r\n              </div>\r\n              \r\n              <div className=\"flex flex-col items-center\">\r\n                <svg viewBox=\"0 0 24 24\" className=\"h-10 w-10 text-[#003087] mb-2\">\r\n                  <path fill=\"currentColor\" d=\"M7.07 10.588h2.168c.073 0 .145.01.214.03a.606.606 0 0 1 .442.547.584.584 0 0 1-.189.452.653.653 0 0 1-.442.189c-.073 0-.145-.01-.214-.03H7.07v-.886zm0-1.822h1.745c.067 0 .134.009.197.027a.582.582 0 0 1 .415.544.566.566 0 0 1-.179.442.61.61 0 0 1-.415.174h-1.763v-.914zm3.258 2.995a1.81 1.81 0 0 0 1.24-.459c.34-.308.516-.749.477-1.199a1.657 1.657 0 0 0-.318-.943 1.692 1.692 0 0 0-.836-.595 1.485 1.485 0 0 0 .71-.587c.176-.291.255-.626.228-.96a1.551 1.551 0 0 0-.482-1.17 1.936 1.936 0 0 0-1.369-.448h-3.01v7.188h3.144c.078.002.156.002.234 0l-.018-.827zM20.471 13.44a.656.656 0 0 0-.656-.656H19.5V9.905c0-.363-.293-.657-.656-.657h-.778a.655.655 0 0 0-.614.422l-1.309 3.113-1.307-3.113a.656.656 0 0 0-.615-.422h-.778a.656.656 0 0 0-.656.657v2.88h-.315a.656.656 0 0 0-.657.655v.723h2.072v-.674h.314V10.99l1.483 3.52a.656.656 0 0 0 .607.414h.508c.25.001.482-.136.606-.357l1.484-3.531v2.739h.314v.674h2.072v-.723M3.867 7.38h-.436a.656.656 0 0 0-.58.352L.523 12.67a.656.656 0 0 0 .58.96h.919a.656.656 0 0 0 .58-.351l.414-.92h2.29l.392.92c.1.232.33.382.58.381h.92a.656.656 0 0 0 .58-.96L5.446 7.704a.655.655 0 0 0-.58-.352h-.436V7.38h-.564v.657zm-.142 3.531l.708-1.596.709 1.596H3.725z\" />\r\n                </svg>\r\n                <span className=\"text-sm font-medium text-neutral-700\">PayPal</span>\r\n              </div>\r\n              \r\n              <div className=\"flex flex-col items-center\">\r\n                <svg viewBox=\"0 0 24 24\" className=\"h-10 w-10 text-[#635BFF] mb-2\">\r\n                  <path fill=\"currentColor\" d=\"M13.479 9.883c-1.626 0-2.511.706-2.511 1.723 0 .867.788 1.37 2.306 1.37 1.625 0 2.51-.706 2.51-1.723 0-.866-.787-1.37-2.305-1.37zm-2.367-3.021c0 .706.706 1.206 1.934 1.206 1.274 0 1.98-.5 1.98-1.206 0-.753-.706-1.207-1.98-1.207-1.228 0-1.934.454-1.934 1.207zm10.84-4.147c1.166 0 2.118.952 2.118 2.118v14.334c0 1.166-.952 2.118-2.118 2.118H2.118A2.118 2.118 0 0 1 0 19.167V4.833c0-1.166.952-2.118 2.118-2.118zm-1.984 9.649c0-1.192-.972-2.14-2.756-2.14-1.112 0-1.744.252-2.373.57.035-.226.035-.452.035-.652 0-1.031-.813-1.652-2.221-1.652-.917 0-1.465.282-1.809.634.21-.106.35-.331.35-.622 0-.813-.847-1.271-1.991-1.271-.988 0-1.622.317-1.656 1.336a9.756 9.756 0 0 0-2.068.657v5.952h.882v-5.066c.387-.175.829-.35 1.396-.49.07.813.695 1.231 1.795 1.231.493 0 .9-.105 1.221-.282-.035.211-.035.423-.035.617 0 1.336.952 2.085 2.651 2.085.687 0 1.186-.88 1.66-.264-.035.158-.035.334-.035.493 0 1.02.864 1.62 2.221 1.62.864 0 1.465-.193 1.83-.546-.017.123-.017.246-.017.369 0 .759.599 1.248 1.622 1.248.687 0 1.151-.194 1.485-.477v-2.25h-1.133v1.476c-.106.088-.317.158-.582.158-.44 0-.723-.264-.723-.758v-1.09h1.465v-.917h-1.465v-1.477h-.882v1.477h-.971v.917h.97v1.09c0 .265-.52.547-.44.67.318.124.67.195 1.15.195.688 0 1.222-.125 1.729-.37-.035.247-.035.476-.035.706 0 1.302.9 2.049 2.598 2.049.723 0 1.239-.088 1.678-.299v-.916c-.44.228-.952.351-1.57.351-1.133 0-1.65-.44-1.65-1.39v-.37c0-.265.018-.547.07-.847h2.545V12.5h-2.668v-.988h3.164v-.864h-3.164v-.97h2.756v-.847h-2.756v-.881h-.847v.881H14.22v.847h2.545v.97h-3.129v.864h3.13v.988h-2.563c.052-.3.088-.618.088-.934l-.017-.087c-.018.018-.53.018-.88.018-.511 0-.952-.088-1.31-.281a2.063 2.063 0 0 0 1.345-.882h-.9a1.345 1.345 0 0 1-1.099.511c-.952 0-1.55-.53-1.55-1.373 0-.635.369-1.09.971-1.302-.389.123-.744.176-1.046.176-1.222 0-1.925-.583-1.925-1.566 0-.899.6-1.514 1.586-1.674-.387.159-.793.23-1.204.23-1.256 0-2.05-.563-2.05-1.46 0-.778.441-1.307 1.15-1.567h7.5V2.118H2.118v19.764h19.764V4.833c0-.037-.02-.073-.022-.11a2.102 2.102 0 0 0-2.096-2.008h-3.22c-.23.257-.3.64-.3 1.037 0 1.037.723 1.62 2.086 1.62 1.046 0 1.693-.3 2.068-.634-.123.37-.194.758-.194 1.196 0 1.39.899 2.261 2.332 2.261.387 0 .723-.053 1.063-.176l.035-.018z\" />\r\n                </svg>\r\n                <span className=\"text-sm font-medium text-neutral-700\">Stripe</span>\r\n              </div>\r\n              \r\n              <div className=\"flex flex-col items-center\">\r\n                <svg viewBox=\"0 0 24 24\" className=\"h-10 w-10 text-[#FFC439] mb-2\">\r\n                  <rect width=\"24\" height=\"24\" rx=\"4\" fill=\"currentColor\" />\r\n                  <path d=\"M8.04 7.044H4.638c-.065 0-.13.013-.19.039a.499.499 0 0 0-.272.272.501.501 0 0 0-.39.19v5.212c-.034.224.12.433.344.467.022.003.045.005.067.005h1.91a.466.466 0 0 0 .466-.402l.527-3.35.527 3.35a.466.466 0 0 0 .466.402h1.91a.467.467 0 0 0 .467-.403l1.062-6.742h-1.9a.466.466 0 0 0-.466.402l-.54 3.421-.539-3.42a.466.466 0 0 0-.466-.403M20.323 7.046h-1.909a.466.466 0 0 0-.467.402l-1.063 6.743h1.91a.466.466 0 0 0 .466-.402l1.063-6.743zM16.413 7.044h-1.91c-.24 0-.45.175-.49.412L13.09 13.732a.467.467 0 0 0 .41.518c.027.004.054.005.081.005h1.686c.241 0 .451-.175.49-.413l.307-1.95h1.096c1.695 0 2.673-.82 3.002-2.438.13-.644.005-1.15-.364-1.505-.405-.393-1.122-.594-2.075-.594h-.532l.211-1.315a.466.466 0 0 0-.462-.533c-.9.0018-.18.0036-.27.0054zm.253 2.884l-.193 1.235h-.871l.194-1.235h.87z\" fill=\"#253B80\" />\r\n                </svg>\r\n                <span className=\"text-sm font-medium text-neutral-700\">Apple Pay</span>\r\n              </div>\r\n              \r\n              <div className=\"flex flex-col items-center\">\r\n                <svg viewBox=\"0 0 24 24\" className=\"h-10 w-10 text-[#4285F4] mb-2\">\r\n                  <path d=\"M12 24c6.624 0 12-5.376 12-12S18.624 0 12 0 0 5.376 0 12s5.376 12 12 12z\" fill=\"#4285F4\" />\r\n                  <path d=\"M12 9.5v3h4.199c-.17 1.15-1.231 3.36-4.199 3.36-2.52 0-4.58-2.09-4.58-4.66 0-2.56 2.06-4.65 4.58-4.65 1.44 0 2.4.61 2.95 1.14l2.01-1.94C15.47 4.36 13.9 3.5 12 3.5c-4.42 0-8 3.58-8 8s3.58 8 8 8c4.62 0 7.69-3.25 7.69-7.82 0-.52-.07-.92-.15-1.33H12z\" fill=\"#FFF\" />\r\n                </svg>\r\n                <span className=\"text-sm font-medium text-neutral-700\">Google Pay</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        \r\n        {/* FAQ Section */}\r\n        <section className=\"py-12 bg-neutral-50\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"text-center mb-10\">\r\n              <h2 className=\"text-2xl font-bold text-neutral-900 mb-2\">\r\n                Frequently Asked Questions\r\n              </h2>\r\n              <p className=\"text-neutral-600\">\r\n                Find answers to common questions about our subscription plans\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"space-y-6\">\r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm\">\r\n                <h3 className=\"text-lg font-semibold text-neutral-900 mb-2\">\r\n                  Can I change my plan later?\r\n                </h3>\r\n                <p className=\"text-neutral-600\">\r\n                  Yes, you can upgrade or downgrade your plan at any time. Changes to your subscription will be applied at the beginning of your next billing cycle.\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm\">\r\n                <h3 className=\"text-lg font-semibold text-neutral-900 mb-2\">\r\n                  Is there a free trial?\r\n                </h3>\r\n                <p className=\"text-neutral-600\">\r\n                  Yes! You can try our demo version for free with limited features. Additionally, all paid plans come with a 7-day free trial period.\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm\">\r\n                <h3 className=\"text-lg font-semibold text-neutral-900 mb-2\">\r\n                  How does the food analysis count work?\r\n                </h3>\r\n                <p className=\"text-neutral-600\">\r\n                  Each plan includes a specific number of AI food analyses per month. One analysis is counted each time you upload or take a photo of a meal for nutritional analysis.\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"bg-white rounded-lg p-6 shadow-sm\">\r\n                <h3 className=\"text-lg font-semibold text-neutral-900 mb-2\">\r\n                  Can I cancel my subscription?\r\n                </h3>\r\n                <p className=\"text-neutral-600\">\r\n                  Yes, you can cancel your subscription at any time. You'll continue to have access to your plan until the end of your current billing period.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mt-10 text-center\">\r\n              <p className=\"text-neutral-600 mb-4\">\r\n                Have more questions? We're here to help.\r\n              </p>\r\n              <Link href=\"/contact\">\r\n                <Button>\r\n                  Contact Support\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n}","import { Header } from \"@/components/layout/header\";\nimport { Footer } from \"@/components/layout/footer\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Brain, Salad, TrendingUp, Zap } from \"lucide-react\";\n\nexport default function AboutPage() {\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      <main className=\"flex-grow bg-gradient-to-b from-neutral-50 to-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Hero section */}\n          <div className=\"py-16 md:py-24 text-center\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-neutral-900 mb-4 tracking-tight\">\n              About <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-primary-700\">NutriScan</span>\n            </h1>\n            <p className=\"text-lg md:text-xl text-neutral-600 max-w-3xl mx-auto\">\n              Revolutionizing nutrition tracking with cutting-edge AI technology\n            </p>\n          </div>\n\n          {/* Our story section */}\n          <div className=\"mb-16 md:mb-24\">\n            <div className=\"bg-white rounded-2xl shadow-sm border border-neutral-200 overflow-hidden\">\n              <div className=\"p-6 md:p-10\">\n                <h2 className=\"text-3xl font-bold text-neutral-900 mb-6\">Our Story</h2>\n                <div className=\"prose max-w-none text-neutral-700\">\n                  <p>\n                    NutriScan was born from a simple observation: tracking nutrition accurately is too difficult and time-consuming for most people.\n                  </p>\n                  <p>\n                    Our founder, a nutrition enthusiast with a background in AI, struggled with traditional food tracking apps that required manual logging and often provided inaccurate nutritional information. The tedious process of searching databases, weighing food, and estimating portions made consistent tracking nearly impossible.\n                  </p>\n                  <p>\n                    We envisioned a simpler solution: what if you could just take a photo of your meal and instantly get accurate nutritional information? By combining the latest advances in computer vision and large language models, we've created an AI system that can analyze food with remarkable accuracy.\n                  </p>\n                  <p>\n                    Today, NutriScan helps thousands of users make better nutritional choices without the friction of traditional tracking methods. Our mission is to make nutrition tracking effortless, accurate, and accessible to everyone.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Our technology section */}\n          <div className=\"mb-16 md:mb-24\">\n            <h2 className=\"text-3xl font-bold text-neutral-900 mb-8 text-center\">Our Technology</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {[\n                {\n                  icon: <Brain className=\"h-10 w-10 text-primary-600\" />,\n                  title: \"Advanced AI\",\n                  description: \"Utilizing state-of-the-art large language models and computer vision to accurately identify food items and their nutritional content.\"\n                },\n                {\n                  icon: <Zap className=\"h-10 w-10 text-primary-600\" />,\n                  title: \"Instant Analysis\",\n                  description: \"Get nutritional information in seconds, not minutes. No more tedious manual logging or searching databases.\"\n                },\n                {\n                  icon: <Salad className=\"h-10 w-10 text-primary-600\" />,\n                  title: \"Food Recognition\",\n                  description: \"Our AI can identify thousands of different foods and ingredients, even in complex mixed meals.\"\n                },\n                {\n                  icon: <TrendingUp className=\"h-10 w-10 text-primary-600\" />,\n                  title: \"Personalization\",\n                  description: \"The more you use NutriScan, the more it learns about your habits, providing increasingly accurate recommendations.\"\n                }\n              ].map((feature, index) => (\n                <Card key={index} className=\"border border-neutral-200 shadow-sm bg-white\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex flex-col items-center text-center\">\n                      <div className=\"rounded-full bg-primary-50 p-3 mb-4\">\n                        {feature.icon}\n                      </div>\n                      <h3 className=\"text-lg font-medium text-neutral-900 mb-2\">{feature.title}</h3>\n                      <p className=\"text-neutral-600\">{feature.description}</p>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          {/* Vision and values section */}\n          <div className=\"mb-16 md:mb-24\">\n            <div className=\"bg-gradient-to-r from-primary-500 to-primary-700 text-white rounded-2xl overflow-hidden\">\n              <div className=\"p-8 md:p-12\">\n                <h2 className=\"text-3xl font-bold mb-8 text-center\">Our Vision & Values</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-4\">Our Vision</h3>\n                    <p className=\"text-primary-50 mb-4\">\n                      We envision a world where everyone has access to accurate nutritional information at their fingertips, empowering them to make better food choices and improve their overall health.\n                    </p>\n                    <p className=\"text-primary-50\">\n                      By removing the friction from nutrition tracking, we aim to help millions of people develop healthier relationships with food and achieve their wellness goals.\n                    </p>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-4\">Our Values</h3>\n                    <ul className=\"space-y-3 text-primary-50\">\n                      <li className=\"flex items-start\">\n                        <span className=\"font-bold mr-2\">•</span>\n                        <span><strong>Accuracy:</strong> We're committed to providing the most precise nutritional information possible.</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <span className=\"font-bold mr-2\">•</span>\n                        <span><strong>Accessibility:</strong> Our tools should be easy to use for everyone, regardless of tech savviness.</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <span className=\"font-bold mr-2\">•</span>\n                        <span><strong>Privacy:</strong> We respect user data and maintain the highest standards of privacy.</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <span className=\"font-bold mr-2\">•</span>\n                        <span><strong>Innovation:</strong> We continuously improve our technology to deliver the best experience.</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","import { useState } from \"react\";\nimport { Header } from \"@/components/layout/header\";\nimport { Footer } from \"@/components/layout/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Check, Mail, MapPin, Phone, Send } from \"lucide-react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\n\nconst contactSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  subject: z.string().min(5, \"Subject must be at least 5 characters\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n});\n\ntype ContactFormValues = z.infer<typeof contactSchema>;\n\nexport default function ContactPage() {\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<ContactFormValues>({\n    resolver: zodResolver(contactSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n    },\n  });\n\n  const onSubmit = (data: ContactFormValues) => {\n    setIsSubmitting(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      console.log(\"Form submitted:\", data);\n      setIsSubmitting(false);\n      setIsSubmitted(true);\n      toast({\n        title: \"Message sent!\",\n        description: \"We'll get back to you as soon as possible.\",\n      });\n    }, 1500);\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      <main className=\"flex-grow bg-neutral-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-neutral-900 mb-4\">\n              Get in Touch\n            </h1>\n            <p className=\"text-lg text-neutral-600 max-w-2xl mx-auto\">\n              Have questions about NutriScan? We're here to help. Reach out to our team and we'll respond as soon as possible.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-12\">\n            {/* Contact information */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"space-y-8\">\n                <Card className=\"border border-neutral-200 bg-white shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"bg-primary-100 rounded-full p-3 mr-4\">\n                        <Mail className=\"h-5 w-5 text-primary-600\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-lg mb-1\">Email Us</h3>\n                        <p className=\"text-neutral-600 mb-1\">For general inquiries:</p>\n                        <a href=\"mailto:hello@nutriscan.app\" className=\"text-primary-600 hover:text-primary-700 font-medium\">\n                          hello@nutriscan.app\n                        </a>\n                        <p className=\"text-neutral-600 mt-2 mb-1\">For support:</p>\n                        <a href=\"mailto:support@nutriscan.app\" className=\"text-primary-600 hover:text-primary-700 font-medium\">\n                          support@nutriscan.app\n                        </a>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"border border-neutral-200 bg-white shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"bg-primary-100 rounded-full p-3 mr-4\">\n                        <Phone className=\"h-5 w-5 text-primary-600\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-lg mb-1\">Call Us</h3>\n                        <p className=\"text-neutral-600 mb-1\">Customer service:</p>\n                        <a href=\"tel:+1-800-123-4567\" className=\"text-primary-600 hover:text-primary-700 font-medium\">\n                          +1 (800) 123-4567\n                        </a>\n                        <p className=\"text-neutral-600 mt-2 mb-1\">Hours of operation:</p>\n                        <p className=\"text-neutral-700\">Monday - Friday: 9am - 5pm EST</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"border border-neutral-200 bg-white shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"bg-primary-100 rounded-full p-3 mr-4\">\n                        <MapPin className=\"h-5 w-5 text-primary-600\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-lg mb-1 text-primary\">Visit Us</h3>\n                        <p className=\"text-neutral-600 mb-1\">Our headquarters:</p>\n                        <address className=\"not-italic text-neutral-700\">\n                          123 Nutrition Street<br />\n                          Suite 456<br />\n                          San Francisco, CA 94107<br />\n                          United States\n                        </address>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n\n            {/* Contact form */}\n            <div className=\"lg:col-span-2\">\n              <Card className=\"border border-neutral-200 bg-white shadow-sm\">\n                <CardContent className=\"p-6 md:p-8\">\n                  {isSubmitted ? (\n                    <div className=\"text-center py-8\">\n                      <div className=\"bg-green-100 rounded-full p-4 inline-flex mx-auto mb-6\">\n                        <Check className=\"h-10 w-10 text-green-600\" />\n                      </div>\n                      <h3 className=\"text-2xl font-bold text-neutral-900 mb-2\">Message Received!</h3>\n                      <p className=\"text-neutral-600 mb-6\">\n                        Thank you for reaching out. We've received your message and will get back to you as soon as possible.\n                      </p>\n                      <Button onClick={() => setIsSubmitted(false)} variant=\"outline\">\n                        Send Another Message\n                      </Button>\n                    </div>\n                  ) : (\n                    <>\n                      <h2 className=\"text-2xl font-bold text-neutral-900 mb-6\">Send Us a Message</h2>\n                      <Form {...form}>\n                        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                            <FormField\n                              control={form.control}\n                              name=\"name\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Your Name</FormLabel>\n                                  <FormControl>\n                                    <Input placeholder=\"John Doe\" {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                            \n                            <FormField\n                              control={form.control}\n                              name=\"email\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Email Address</FormLabel>\n                                  <FormControl>\n                                    <Input placeholder=\"john@example.com\" {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                          </div>\n                          \n                          <FormField\n                            control={form.control}\n                            name=\"subject\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Subject</FormLabel>\n                                <FormControl>\n                                  <Input placeholder=\"How can we help you?\" {...field} />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n                          \n                          <FormField\n                            control={form.control}\n                            name=\"message\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Message</FormLabel>\n                                <FormControl>\n                                  <Textarea \n                                    placeholder=\"Tell us more about your inquiry...\" \n                                    className=\"min-h-[150px]\"\n                                    {...field} \n                                  />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n                          \n                          <Button type=\"submit\" disabled={isSubmitting} className=\"w-full\">\n                            {isSubmitting ? (\n                              <>\n                                <Mail className=\"mr-2 h-4 w-4 animate-spin\" />\n                                Sending...\n                              </>\n                            ) : (\n                              <>\n                                <Send className=\"mr-2 h-4 w-4\" />\n                                Send Message\n                              </>\n                            )}\n                          </Button>\n                        </form>\n                      </Form>\n                    </>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          {/* FAQ section */}\n          <div className=\"bg-white border border-neutral-200 rounded-xl shadow-sm p-6 md:p-8\">\n            <h2 className=\"text-2xl font-bold text-neutral-900 mb-8 text-center\">Frequently Asked Questions</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {[\n                {\n                  question: \"How accurate is NutriScan's food recognition?\",\n                  answer: \"NutriScan's AI can identify thousands of foods with an accuracy rate of over 90%. For common foods, the accuracy is even higher. However, for homemade dishes with many ingredients or rare foods, accuracy may vary.\"\n                },\n                {\n                  question: \"Does NutriScan work offline?\",\n                  answer: \"NutriScan requires an internet connection to analyze images as our AI processing happens on secure cloud servers. This allows us to maintain a powerful recognition system without requiring excessive device resources.\"\n                },\n                {\n                  question: \"How is my data used and protected?\",\n                  answer: \"We take data privacy seriously. Your food images and analysis results are used to improve our service and provide personalized insights. All data is encrypted and stored securely. You can request data deletion at any time.\"\n                },\n                {\n                  question: \"Can I use NutriScan for dietary restrictions?\",\n                  answer: \"Yes! NutriScan can help identify foods that match your dietary preferences or restrictions. You can set up allergies, vegetarian/vegan preferences, and other dietary needs in your profile settings.\"\n                }\n              ].map((faq, index) => (\n                <div key={index} className=\"mb-4\">\n                  <h3 className=\"text-lg font-medium text-neutral-900 mb-2\">{faq.question}</h3>\n                  <p className=\"text-neutral-600\">{faq.answer}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}","import { Header } from \"@/components/layout/header\";\nimport { Footer } from \"@/components/layout/footer\";\nimport { Separator } from \"@/components/ui/separator\";\n\nexport default function TermsPage() {\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      <main className=\"flex-grow bg-neutral-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 p-6 md:p-10\">\n            <h1 className=\"text-3xl font-bold text-neutral-900 mb-6\">Terms of Service</h1>\n            <p className=\"text-neutral-500 mb-8\">Last updated: April, 2025</p>\n            \n            <div className=\"prose max-w-none text-neutral-700\">\n              <p>\n                Welcome to NutriScan. Please read these Terms of Service (\"Terms\") carefully as they contain important information about your legal rights, remedies, and obligations. By accessing or using the NutriScan service, you agree to comply with and be bound by these Terms.\n              </p>\n              \n              <h2>1. Acceptance of Terms</h2>\n              <p>\n                By creating an account, accessing, or using our Services, you agree to be bound by these Terms and our Privacy Policy. If you do not agree to these Terms, you may not access or use our Services.\n              </p>\n              \n              <h2>2. Description of Service</h2>\n              <p>\n                NutriScan is an AI-powered application that provides nutritional analysis of food through image recognition technology. Our services include but are not limited to:\n              </p>\n              <ul>\n                <li>Food image analysis and nutritional information</li>\n                <li>Personalized nutrition tracking and insights</li>\n                <li>Meal history and progress tracking</li>\n              </ul>\n              \n              <h2>3. User Accounts</h2>\n              <p>\n                To use certain features of our Services, you must create an account. You are responsible for maintaining the confidentiality of your account information, including your password, and for all activity that occurs under your account. You agree to notify us immediately of any unauthorized access to or use of your account.\n              </p>\n              \n              <h2>4. Use of Service</h2>\n              <p>\n                You agree to use the Service only for purposes that are permitted by these Terms and in compliance with all applicable laws and regulations. You may not:\n              </p>\n              <ul>\n                <li>Use the Service for any illegal purpose or to violate any laws</li>\n                <li>Upload viruses or malicious code or content</li>\n                <li>Attempt to access accounts, systems, or data not belonging to you</li>\n                <li>Interfere with or disrupt the integrity or performance of the Service</li>\n                <li>Reproduce, duplicate, copy, sell, trade, or resell any portion of the Service</li>\n              </ul>\n              \n              <h2>5. User Content</h2>\n              <p>\n                Our Service allows you to upload, store, and share content, including food images and nutritional data (\"User Content\"). You retain all rights to your User Content, but you grant us a worldwide, non-exclusive, royalty-free license to use, reproduce, modify, adapt, publish, and display such User Content for the purpose of providing and improving our Services.\n              </p>\n              \n              <h2>6. Data Privacy</h2>\n              <p>\n                We collect and process personal information as described in our Privacy Policy. By using our Service, you consent to such processing and you represent that all information you provide is accurate.\n              </p>\n              \n              <h2>7. Intellectual Property</h2>\n              <p>\n                The Service and its original content, features, and functionality are owned by NutriScan and are protected by international copyright, trademark, patent, trade secret, and other intellectual property or proprietary rights laws.\n              </p>\n              \n              <h2>8. Subscription Plans and Payments</h2>\n              <p>\n                We offer both free and paid subscription plans. By selecting a paid plan, you agree to pay all fees applicable to the selected plan. We may change our fees at any time, but changes will not apply retroactively and will provide notice of changes.\n              </p>\n              \n              <h2>9. Termination</h2>\n              <p>\n                We may terminate or suspend your account and access to the Service immediately, without prior notice or liability, for any reason, including if you breach these Terms. Upon termination, your right to use the Service will cease immediately.\n              </p>\n              \n              <h2>10. Disclaimer of Warranties</h2>\n              <p>\n                The Service is provided on an \"as is\" and \"as available\" basis. NutriScan makes no warranties, express or implied, regarding the accuracy of nutritional information provided through the Service. The information provided is for informational purposes only and should not be considered medical advice.\n              </p>\n              \n              <h2>11. Limitation of Liability</h2>\n              <p>\n                To the maximum extent permitted by law, in no event shall NutriScan be liable for any indirect, incidental, special, consequential, or punitive damages, including without limitation, loss of profits, data, use, goodwill, or other intangible losses, resulting from your use of or inability to use the Service.\n              </p>\n              \n              <h2>12. Governing Law</h2>\n              <p>\n                These Terms shall be governed by and construed in accordance with the laws of the United States and the State of California, without regard to its conflict of law provisions.\n              </p>\n              \n              <h2>13. Changes to Terms</h2>\n              <p>\n                We reserve the right to modify or replace these Terms at any time. If a revision is material, we will provide at least 30 days' notice prior to any new terms taking effect. What constitutes a material change will be determined at our sole discretion.\n              </p>\n              \n              <h2>14. Contact Us</h2>\n              <p>\n                If you have any questions about these Terms, please contact us at legal@nutriscan.app.\n              </p>\n            </div>\n          </div>\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}","\nimport { Header } from \"@/components/layout/header\";\nimport { Footer } from \"@/components/layout/footer\";\nimport { Separator } from \"@/components/ui/separator\";\n\nexport default function PrivacyPage() {\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <Header />\n      \n      <main className=\"flex-grow bg-neutral-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-neutral-200 p-6 md:p-10\">\n            <h1 className=\"text-3xl font-bold text-neutral-900 mb-6\">Privacy Policy</h1>\n            <p className=\"text-neutral-500 mb-8\">Last updated: April, 2025</p>\n            \n            <div className=\"prose max-w-none text-neutral-700\">\n              <p>\n                At NutriScan, we take your privacy seriously. This Privacy Policy explains how we collect, use, and protect your personal information.\n              </p>\n              \n              <h2>1. Information We Collect</h2>\n              <p>We collect the following types of information:</p>\n              <ul>\n                <li>Account information (email, name, password)</li>\n                <li>Food images and nutritional data</li>\n                <li>Usage data and analytics</li>\n                <li>Device information</li>\n              </ul>\n              \n              <h2>2. How We Use Your Information</h2>\n              <p>We use your information to:</p>\n              <ul>\n                <li>Provide and improve our services</li>\n                <li>Analyze food images and generate nutritional information</li>\n                <li>Send important updates and notifications</li>\n                <li>Personalize your experience</li>\n              </ul>\n              \n              <h2>3. Data Storage and Security</h2>\n              <p>\n                We implement industry-standard security measures to protect your data. Your information is encrypted both in transit and at rest.\n              </p>\n              \n              <h2>4. Data Sharing</h2>\n              <p>\n                We do not sell your personal information. We may share data with service providers who help us deliver our services, subject to strict confidentiality agreements.\n              </p>\n              \n              <h2>5. Your Rights</h2>\n              <p>You have the right to:</p>\n              <ul>\n                <li>Access your personal data</li>\n                <li>Correct inaccurate data</li>\n                <li>Request deletion of your data</li>\n                <li>Export your data</li>\n              </ul>\n              \n              <h2>6. Cookies and Tracking</h2>\n              <p>\n                We use cookies and similar technologies to improve your experience and analyze usage patterns.\n              </p>\n              \n              <h2>7. Changes to Privacy Policy</h2>\n              <p>\n                We may update this policy periodically. We will notify you of any significant changes.\n              </p>\n              \n              <h2>8. Contact Us</h2>\n              <p>\n                If you have questions about our privacy practices, please contact us at privacy@nutriscan.app.\n              </p>\n            </div>\n          </div>\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Trigger = SelectPrimitive.Trigger as any\nconst Icon = SelectPrimitive.Icon as any\nconst ScrollUpButton = SelectPrimitive.ScrollUpButton as any\nconst ScrollDownButton = SelectPrimitive.ScrollDownButton as any\nconst Portal = SelectPrimitive.Portal as any\nconst Content = SelectPrimitive.Content as any\nconst Viewport = SelectPrimitive.Viewport as any\nconst Label = SelectPrimitive.Label as any\nconst Item = SelectPrimitive.Item as any\nconst ItemIndicator = SelectPrimitive.ItemIndicator as any\nconst ItemText = SelectPrimitive.ItemText as any\nconst Separator = SelectPrimitive.Separator as any\nconst ChevronDownIcon = ChevronDown as any\nconst ChevronUpIcon = ChevronUp as any\nconst CheckIcon = Check as any\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  HTMLButtonElement,\n  any\n>(({ className, children, ...props }, ref) => (\n  <Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <Icon asChild>\n      <ChevronDownIcon className=\"h-4 w-4 opacity-50\" />\n    </Icon>\n  </Trigger>\n))\nSelectTrigger.displayName = \"SelectTrigger\"\n\nconst SelectScrollUpButton = React.forwardRef<\n  HTMLDivElement,\n  any\n>(({ className, ...props }, ref) => (\n  <ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUpIcon className=\"h-4 w-4\" />\n  </ScrollUpButton>\n))\nSelectScrollUpButton.displayName = \"SelectScrollUpButton\"\n\nconst SelectScrollDownButton = React.forwardRef<\n  HTMLDivElement,\n  any\n>(({ className, ...props }, ref) => (\n  <ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDownIcon className=\"h-4 w-4\" />\n  </ScrollDownButton>\n))\nSelectScrollDownButton.displayName = \"SelectScrollDownButton\"\n\nconst SelectContent = React.forwardRef<\n  HTMLDivElement,\n  any\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <Portal>\n    <Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </Viewport>\n      <SelectScrollDownButton />\n    </Content>\n  </Portal>\n))\nSelectContent.displayName = \"SelectContent\"\n\nconst SelectLabel = React.forwardRef<\n  HTMLDivElement,\n  any\n>(({ className, ...props }, ref) => (\n  <Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = \"SelectLabel\"\n\nconst SelectItem = React.forwardRef<\n  HTMLDivElement,\n  any\n>(({ className, children, ...props }, ref) => (\n  <Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </ItemIndicator>\n    </span>\n\n    <ItemText>{children}</ItemText>\n  </Item>\n))\nSelectItem.displayName = \"SelectItem\"\n\nconst SelectSeparator = React.forwardRef<\n  HTMLDivElement,\n  any\n>(({ className, ...props }, ref) => (\n  <Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = \"SelectSeparator\"\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Loader2, Zap } from \"lucide-react\";\nimport { getQueryFn } from \"@/lib/queryClient\";\n\ninterface SuggestionsResponse {\n  suggestions: string[];\n}\n\nexport function SmartMealSuggestionsCard() {\n  const { data, isLoading, error } = useQuery<SuggestionsResponse>({\n    queryKey: [\"/api/smart-meal-suggestions\"],\n    queryFn: getQueryFn({ on401: \"returnNull\" })\n  });\n\n  // Fallback suggestions in case API fails\n  const fallbackSuggestions = [\n    \"Grilled chicken breast with quinoa and steamed broccoli\",\n    \"Salmon salad with mixed greens, cherry tomatoes, and olive oil vinaigrette\",\n    \"Vegetarian stir-fry with tofu, bell peppers, and brown rice\"\n  ];\n\n  const suggestions = (data?.suggestions && data.suggestions.length > 0) ? data.suggestions : fallbackSuggestions;\n\n  return (\n    <Card className=\"card-gradient hover-effect rounded-xl overflow-hidden\">\n      <CardHeader className=\"px-6 py-5 border-b border-neutral-200\">\n        <CardTitle className=\"text-xl font-semibold text-neutral-800 flex items-center gap-2\">\n          <Zap className=\"h-5 w-5 text-primary-500\" />\n          Smart Meal Suggestions\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        {isLoading ? (\n          <div className=\"flex justify-center items-center py-8\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n          </div>\n        ) : error ? (\n          <ul className=\"divide-y divide-neutral-200\">\n            {fallbackSuggestions.map((suggestion, index) => (\n              <li key={index} className=\"py-3 px-2\">\n                <div className=\"flex items-center\">\n                  <Zap className=\"h-5 w-5 text-primary-500 mr-2\" />\n                  <span className=\"text-sm text-neutral-700\">{suggestion}</span>\n                </div>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <ul className=\"divide-y divide-neutral-200\">\n            {suggestions.map((suggestion, index) => (\n              <li key={index} className=\"py-3 px-2\">\n                <div className=\"flex items-center\">\n                  <Zap className=\"h-5 w-5 text-primary-500 mr-2\" />\n                  <span className=\"text-sm text-neutral-700\">{suggestion}</span>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n\r\nexport function MealPlanCard({ mealPlan, isMealPlanLoading, mealPlanError, fetchMealPlan, goal, daysOfWeek, medicalCondition }: {\r\n  mealPlan: any;\r\n  isMealPlanLoading: boolean;\r\n  mealPlanError: string | null;\r\n  fetchMealPlan: () => void;\r\n  goal: string;\r\n  daysOfWeek: string[];\r\n  medicalCondition?: string;\r\n}) {\r\n  return (\r\n    <Card className=\"card-gradient glass-effect rounded-xl border border-border\">\r\n      <CardHeader><CardTitle>AI Meal Plan Generator</CardTitle></CardHeader>\r\n      <CardContent>\r\n        <div className=\"mb-4 flex flex-col md:flex-row md:items-center md:justify-between gap-2\">\r\n          <div className=\"text-primary-500 text-base font-semibold\">\r\n            Personalized for: <span className=\"font-bold\">{goal.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</span>\r\n            {medicalCondition && medicalCondition !== \"none\" && (\r\n              <span className=\"ml-2 px-2 py-0.5 rounded bg-primary-800 text-primary-100 text-xs font-semibold\">{medicalCondition.charAt(0).toUpperCase() + medicalCondition.slice(1)} Mode</span>\r\n            )}\r\n          </div>\r\n          <button\r\n            className=\"ml-auto bg-primary-600 hover:bg-primary-500 text-primary-50 font-semibold px-4 py-1.5 rounded shadow transition-colors duration-150 text-sm\"\r\n            aria-label=\"Regenerate meal plan\"\r\n            onClick={fetchMealPlan}\r\n            disabled={isMealPlanLoading}\r\n          >\r\n            {isMealPlanLoading ? \"Generating...\" : \"Regenerate Plan\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"mb-4 text-xs text-primary-600\">\r\n          <span className=\"font-bold\">How it works:</span> This plan adapts each week based on your tracked meals, calories, and goals. Over- or under-eating, skipped meals, and preferences are all factored in for next week’s plan. <span className=\"text-primary-700\">Give feedback to improve your plan!</span>\r\n        </div>\r\n        {mealPlanError && (\r\n          <div className=\"text-red-400 mb-4\">{mealPlanError}</div>\r\n        )}\r\n        {isMealPlanLoading ? (\r\n          <div className=\"text-primary-500 py-8 text-center\">Generating meal plan...</div>\r\n        ) : mealPlan && mealPlan.meals ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {mealPlan.meals.map((dayPlan: any, i: number) => (\r\n              <div key={dayPlan.day || i} className=\"bg-primary-800/40 rounded-lg p-4 flex flex-col gap-2\">\r\n                <div className=\"flex items-center gap-2 mb-1\">\r\n                  <span className=\"text-primary-200 font-bold\">{dayPlan.day || daysOfWeek[i]}</span>\r\n                  {dayPlan.adaptation && (\r\n                    <span className=\"ml-2 text-xs text-accent-300 bg-accent-900/60 rounded px-2 py-0.5\">{dayPlan.adaptation}</span>\r\n                  )}\r\n                </div>\r\n                <ul className=\"list-none text-primary-100 text-sm mb-2\">\r\n                  {[\"breakfast\", \"lunch\", \"snack\", \"dinner\", \"snacks\"].map(type => {\r\n                    const meal = dayPlan[type] || (Array.isArray(dayPlan.snacks) && type === \"snacks\" ? null : undefined);\r\n                    if (!meal) return null;\r\n                    if (type === \"snacks\" && Array.isArray(dayPlan.snacks)) {\r\n                      return dayPlan.snacks.map((snack: any, j: number) => (\r\n                        <li key={`snack-${j}`} className=\"mb-1 flex flex-col md:flex-row md:items-center md:gap-2\">\r\n                          <span className=\"font-medium w-24 inline-block\">Snack:</span>\r\n                          <span>{snack.name}</span>\r\n                          <span className=\"ml-auto text-xs text-primary-300\">{snack.calories} kcal</span>\r\n                          <span className=\"ml-2 text-xs text-primary-400\">P:{snack.protein}g C:{snack.carbs}g F:{snack.fat}g</span>\r\n                        </li>\r\n                      ));\r\n                    }\r\n                    return (\r\n                      <li key={type} className=\"mb-1 flex flex-col md:flex-row md:items-center md:gap-2\">\r\n                        <span className=\"font-medium w-24 inline-block\">{type.charAt(0).toUpperCase() + type.slice(1)}:</span>\r\n                        <span>{meal.name}</span>\r\n                        <span className=\"ml-auto text-xs text-primary-300\">{meal.calories} kcal</span>\r\n                        <span className=\"ml-2 text-xs text-primary-400\">P:{meal.protein}g C:{meal.carbs}g F:{meal.fat}g</span>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n                <div className=\"flex justify-between text-xs text-primary-200 border-t border-primary-700 pt-2 mt-2\">\r\n                  <span>Total: <span className=\"font-bold\">{dayPlan.totalCalories || ''} kcal</span></span>\r\n                  <span>P:{dayPlan.totalProtein || ''}g C:{dayPlan.totalCarbs || ''}g F:{dayPlan.totalFat || ''}g</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-primary-600 py-8 text-center\">No meal plan available.</div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Select } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { SmartMealSuggestionsCard } from \"@/components/dashboard/smart-meal-suggestions-card\";\nimport { MealPlanCard } from \"@/components/dashboard/meal-plan-card\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\n\nexport default function MealPlanPage() {\n    const [goal, setGoal] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [mealPlan, setMealPlan] = useState<any>(null);\n    const { toast } = useToast();\n\n    // Fetch meal plan data\n    const { data: mealPlanData, isLoading: mealPlanLoading, error: mealPlanError, refetch: fetchMealPlan } = useQuery({\n      queryKey: [\"/api/meal-plan\"],\n      queryFn: getQueryFn({ on401: \"returnNull\" })\n    });\n\n    const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n  const generatePlan = async () => {\n    if (!goal) {\n      toast({\n        title: \"Please select a goal\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await apiRequest(\"POST\", \"/api/meal-plan\", { goal });\n\n      if (!response.ok) throw new Error(\"Failed to generate meal plan\");\n\n      const plan = await response.json();\n      setMealPlan(plan);\n    } catch (error) {\n      toast({\n        title: \"Error generating meal plan\",\n        description: \"Please try again later\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container py-8 max-w-7xl\">\n      <h1 className=\"text-3xl font-bold mb-8\">AI Meal Planner</h1>\n\n      {/* Smart Meal Suggestions */}\n      <div className=\"mb-8\">\n        <SmartMealSuggestionsCard />\n      </div>\n\n      {/* Meal Plan Generator */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8\">\n        <div className=\"lg:col-span-1\">\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Generate New Plan</h2>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">Select your goal</label>\n                <Select value={goal} onValueChange={setGoal}>\n                  <option value=\"\">Select your goal</option>\n                  <option value=\"weight-loss\">Weight Loss</option>\n                  <option value=\"muscle-gain\">Muscle Gain</option>\n                  <option value=\"maintenance\">Maintenance</option>\n                  <option value=\"keto\">Keto Diet</option>\n                  <option value=\"vegan\">Vegan</option>\n                </Select>\n              </div>\n\n              <Button\n                onClick={generatePlan}\n                disabled={isLoading}\n                className=\"w-full\"\n              >\n                {isLoading ? \"Generating...\" : \"Generate Meal Plan\"}\n              </Button>\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"lg:col-span-2\">\n          {/* Meal Plan Card */}\n          <MealPlanCard\n            mealPlan={mealPlanData}\n            isMealPlanLoading={mealPlanLoading}\n            mealPlanError={mealPlanError ? mealPlanError.message : null}\n            fetchMealPlan={fetchMealPlan}\n            goal={goal}\n            daysOfWeek={daysOfWeek}\n            medicalCondition=\"none\"\n          />\n        </div>\n      </div>\n\n      {/* Manual Meal Plan Display (fallback) */}\n      {mealPlan && (\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Generated Meal Plan</h2>\n          <div className=\"grid gap-6\">\n            {mealPlan.meals.map((daily: any, i: number) => (\n              <div key={i} className=\"border rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold mb-4\">{daily.day}</h3>\n\n                <div className=\"grid gap-4\">\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Breakfast</h4>\n                    <p>{daily.breakfast.name}</p>\n                    <p className=\"text-sm text-neutral-600\">\n                      {daily.breakfast.calories} cal | {daily.breakfast.protein}g protein\n                    </p>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Lunch</h4>\n                    <p>{daily.lunch.name}</p>\n                    <p className=\"text-sm text-neutral-600\">\n                      {daily.lunch.calories} cal | {daily.lunch.protein}g protein\n                    </p>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Dinner</h4>\n                    <p>{daily.dinner.name}</p>\n                    <p className=\"text-sm text-neutral-600\">\n                      {daily.dinner.calories} cal | {daily.dinner.protein}g protein\n                    </p>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Snacks</h4>\n                    {daily.snacks.map((snack: any, j: number) => (\n                      <div key={j} className=\"mb-2\">\n                        <p>{snack.name}</p>\n                        <p className=\"text-sm text-neutral-600\">\n                          {snack.calories} cal | {snack.protein}g protein\n                        </p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","import React, { useState, useEffect } from 'react';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport { PlannedMeal, InsertPlannedMeal } from '@shared/schema'; // Assuming types are in schema\nimport { apiRequest, addAuthHeader, addSecurityHeaders } from '@/lib/queryClient';\nimport { useAuth } from '@/hooks/use-auth';\n\nexport default function MealCalendarPage() {\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date());\n  const [plannedMeals, setPlannedMeals] = useState<PlannedMeal[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n  const { user } = useAuth();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentMeal, setCurrentMeal] = useState<Partial<InsertPlannedMeal> & { id?: number }>({});\n  const [editingMeal, setEditingMeal] = useState<PlannedMeal | null>(null);\n\n  const fetchPlannedMeals = async (date: Date) => {\n    setIsLoading(true);\n    try {\n      const year = date.getFullYear();\n      const month = date.getMonth();\n      const startDate = new Date(year, month, 1).toISOString();\n      const endDate = new Date(year, month + 1, 0).toISOString(); // Last day of the month\n\n      const response = await fetch(`/api/planned-meals?startDate=${startDate}&endDate=${endDate}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch planned meals');\n      }\n      const data: PlannedMeal[] = await response.json();\n      setPlannedMeals(data);\n    } catch (error) {\n      toast({\n        title: 'Error fetching meals',\n        description: (error as Error).message,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleExportCalendar = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/planned-meals/export/ical');\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Failed to export calendar. Server returned an error.' }));\n        throw new Error(errorData.message || 'Failed to export calendar');\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'meal_plan.ics';\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      window.URL.revokeObjectURL(url);\n\n      toast({\n        title: 'Calendar Exported',\n        description: 'Your meal plan has been downloaded as an iCalendar file.',\n      });\n    } catch (error) {\n      toast({\n        title: 'Error Exporting Calendar',\n        description: (error as Error).message,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleImportCalendar = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('icalFile', file);\n\n    try {\n      const headers = addAuthHeader(addSecurityHeaders({}));\n      const response = await fetch('/api/planned-meals/import/ical', {\n        method: 'POST',\n        headers,\n        body: formData,\n        credentials: \"include\",\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Failed to import calendar. Server returned an error.' }));\n        throw new Error(errorData.message || 'Failed to import calendar');\n      }\n\n      const result = await response.json();\n      toast({\n        title: 'Calendar Imported',\n        description: result.message || 'Meal plan imported successfully.',\n      });\n      if (selectedDate) fetchPlannedMeals(selectedDate); // Refresh meals for the current view\n    } catch (error) {\n      toast({\n        title: 'Error Importing Calendar',\n        description: (error as Error).message,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n      // Reset file input to allow importing the same file again if needed\n      event.target.value = '';\n    }\n  };\n\n  useEffect(() => {\n    if (selectedDate) {\n      fetchPlannedMeals(selectedDate);\n    }\n  }, [selectedDate]);\n\n  const handleSelectDate = (date: Date | undefined) => {\n    setSelectedDate(date);\n  };\n\n  const openModal = (meal?: PlannedMeal) => {\n    if (meal) {\n      setEditingMeal(meal);\n      setCurrentMeal({\n        id: meal.id,\n        date: meal.date, // Keep original date for editing context if needed, or use selectedDate\n        mealType: meal.mealType,\n        mealName: meal.mealName,\n        calories: meal.calories,\n        protein: meal.protein,\n        carbs: meal.carbs,\n        fat: meal.fat,\n        recipe: meal.recipe || '',\n        notes: meal.notes || '',\n      });\n    } else {\n      setEditingMeal(null);\n      setCurrentMeal({ date: selectedDate });\n    }\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setCurrentMeal({});\n    setEditingMeal(null);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setCurrentMeal((prev: Partial<InsertPlannedMeal> & { id?: number }) => ({ ...prev, [name]: name === 'calories' || name === 'protein' || name === 'carbs' || name === 'fat' ? parseInt(value, 10) : value }));\n  };\n\n  const handleSubmitMeal = async () => {\n    if (!currentMeal.mealName || !currentMeal.mealType || !selectedDate) {\n      toast({ title: 'Missing required fields', variant: 'destructive' });\n      return;\n    }\n\n    const mealData: InsertPlannedMeal = {\n      date: selectedDate, // Pass as Date, not string\n      userId: user?.id || 0,\n      mealType: currentMeal.mealType!,\n      mealName: currentMeal.mealName!,\n      calories: currentMeal.calories || 0,\n      protein: currentMeal.protein || 0,\n      carbs: currentMeal.carbs || 0,\n      fat: currentMeal.fat || 0,\n      recipe: currentMeal.recipe,\n      notes: currentMeal.notes,\n    };\n\n    try {\n      let response;\n      if (editingMeal && editingMeal.id) {\n        response = await apiRequest('PUT', `/api/planned-meals/${editingMeal.id}`, mealData);\n      } else {\n        response = await apiRequest('POST', '/api/planned-meals', mealData);\n      }\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to save meal');\n      }\n\n      toast({ title: `Meal ${editingMeal ? 'updated' : 'added'} successfully` });\n      closeModal();\n      if (selectedDate) fetchPlannedMeals(selectedDate); // Refresh meals for the current month\n    } catch (error) {\n      toast({\n        title: 'Error saving meal',\n        description: (error as Error).message,\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleDeleteMeal = async (mealId: number) => {\n    if (!confirm('Are you sure you want to delete this meal?')) return;\n\n    try {\n      const response = await apiRequest('DELETE', `/api/planned-meals/${mealId}`);\n      if (!response.ok && response.status !== 204) { // 204 No Content is a success for DELETE\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to delete meal');\n      }\n      toast({ title: 'Meal deleted successfully' });\n      if (selectedDate) fetchPlannedMeals(selectedDate); // Refresh meals\n    } catch (error) {\n      toast({\n        title: 'Error deleting meal',\n        description: (error as Error).message,\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const mealsForSelectedDate = plannedMeals.filter(meal => \n    selectedDate && new Date(meal.date).toDateString() === selectedDate.toDateString()\n  ).sort((a, b) => {\n    const mealOrder: Record<string, number> = { breakfast: 1, lunch: 2, dinner: 3, snack: 4 };\n    const aKey = (typeof a.mealType === 'string' && mealOrder[a.mealType.toLowerCase()]) ? a.mealType.toLowerCase() : 'snack';\n    const bKey = (typeof b.mealType === 'string' && mealOrder[b.mealType.toLowerCase()]) ? b.mealType.toLowerCase() : 'snack';\n    return (mealOrder[aKey] || 5) - (mealOrder[bKey] || 5);\n  });\n\n\n  return (\n    <div className=\"container py-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Meal Planning Calendar</h1>\n      <div className=\"grid md:grid-cols-3 gap-8\">\n        <div className=\"md:col-span-1\">\n          <Calendar\n            mode=\"single\"\n            selected={selectedDate}\n            onSelect={handleSelectDate}\n            className=\"rounded-md border shadow\"\n          />\n        </div>\n        <div className=\"md:col-span-2\">\n          {isLoading && <p>Loading meals...</p>}\n          {!isLoading && mealsForSelectedDate.length === 0 && <p>No meals planned for this day.</p>}\n          {!isLoading && mealsForSelectedDate.length > 0 && (\n            <ul className=\"space-y-4\">\n              {mealsForSelectedDate.map(meal => (\n                <li key={meal.id} className=\"p-4 border rounded-md shadow-sm\">\n                  <div className=\"flex justify-between items-center\">\n                    <div>\n                      <h3 className=\"font-semibold text-lg\">{meal.mealName} ({meal.mealType})</h3>\n                      <p className=\"text-sm text-gray-600\">\n                        {meal.calories} kcal | P: {meal.protein}g | C: {meal.carbs}g | F: {meal.fat}g\n                      </p>\n                      {meal.recipe && <p className=\"text-xs mt-1\">Recipe: {meal.recipe}</p>}\n                      {meal.notes && <p className=\"text-xs mt-1\">Notes: {meal.notes}</p>}\n                    </div>\n                    <div className=\"space-x-2\">\n                      <Button variant=\"outline\" size=\"sm\" onClick={() => openModal(meal)}>Edit</Button>\n                      <Button variant=\"destructive\" size=\"sm\" onClick={() => handleDeleteMeal(meal.id)}>Delete</Button>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n\n          <h2 className=\"text-xl font-semibold mb-4\">\n            Meals for {selectedDate ? selectedDate.toLocaleDateString() : 'selected date'}\n          </h2>\n          {/* Placeholder for meal list and add button */}\n          <Button onClick={() => openModal()} className=\"mt-4\">Add Meal to this Date</Button>\n\n          <div className=\"mt-6 pt-6 border-t\">\n            <h3 className=\"text-lg font-semibold mb-3\">Calendar Integrations</h3>\n            <div className=\"flex space-x-2\">\n              <Button variant=\"outline\" onClick={handleExportCalendar}>Export Calendar (iCal)</Button>\n              <Button variant=\"outline\" onClick={() => document.getElementById('ical-import-input')?.click()}>Import Calendar (iCal)</Button>\n              <input type=\"file\" id=\"ical-import-input\" accept=\".ics\" onChange={handleImportCalendar} style={{ display: 'none' }} />\n            </div>\n          </div>\n\n          {isModalOpen && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n              <div className=\"bg-white p-6 rounded-lg shadow-xl w-full max-w-md\">\n                <h2 className=\"text-2xl font-semibold mb-4\">{editingMeal ? 'Edit' : 'Add'} Meal</h2>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"mealName\" className=\"block text-sm font-medium text-gray-700\">Meal Name</label>\n                    <input type=\"text\" name=\"mealName\" id=\"mealName\" value={currentMeal.mealName || ''} onChange={handleInputChange} className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2\" />\n                  </div>\n                  <div>\n                    <label htmlFor=\"mealType\" className=\"block text-sm font-medium text-gray-700\">Meal Type</label>\n                    <select name=\"mealType\" id=\"mealType\" value={currentMeal.mealType || ''} onChange={handleInputChange} className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2\">\n                      <option value=\"\">Select Type</option>\n                      <option value=\"breakfast\">Breakfast</option>\n                      <option value=\"lunch\">Lunch</option>\n                      <option value=\"dinner\">Dinner</option>\n                      <option value=\"snack\">Snack</option>\n                    </select>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label htmlFor=\"calories\" className=\"block text-sm font-medium text-gray-700\">Calories</label>\n                      <input type=\"number\" name=\"calories\" id=\"calories\" value={currentMeal.calories || ''} onChange={handleInputChange} className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2\" />\n                    </div>\n                    <div>\n                      <label htmlFor=\"protein\" className=\"block text-sm font-medium text-gray-700\">Protein (g)</label>\n                      <input type=\"number\" name=\"protein\" id=\"protein\" value={currentMeal.protein || ''} onChange={handleInputChange} className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2\" />\n                    </div>\n                    <div>\n                      <label htmlFor=\"carbs\" className=\"block text-sm font-medium text-gray-700\">Carbs (g)</label>\n                      <input type=\"number\" name=\"carbs\" id=\"carbs\" value={currentMeal.carbs || ''} onChange={handleInputChange} className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2\" />\n                    </div>\n                    <div>\n                      <label htmlFor=\"fat\" className=\"block text-sm font-medium text-gray-700\">Fat (g)</label>\n                      <input type=\"number\" name=\"fat\" id=\"fat\" value={currentMeal.fat || ''} onChange={handleInputChange} className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2\" />\n                    </div>\n                  </div>\n                  <div>\n                    <label htmlFor=\"recipe\" className=\"block text-sm font-medium text-gray-700\">Recipe (optional)</label>\n                    <textarea name=\"recipe\" id=\"recipe\" value={currentMeal.recipe || ''} onChange={handleInputChange} rows={3} className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2\"></textarea>\n                  </div>\n                  <div>\n                    <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">Notes (optional)</label>\n                    <textarea name=\"notes\" id=\"notes\" value={currentMeal.notes || ''} onChange={handleInputChange} rows={3} className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-2\"></textarea>\n                  </div>\n                </div>\n                <div className=\"mt-6 flex justify-end space-x-3\">\n                  <Button variant=\"outline\" onClick={closeModal}>Cancel</Button>\n                  <Button onClick={handleSubmitMeal}>{editingMeal ? 'Update' : 'Add'} Meal</Button>\n                </div>\n              </div>\n            </div>\n          )}\n\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';\nimport { useToast } from '@/hooks/use-toast';\nimport { ImportedRecipe, InsertImportedRecipe } from '@shared/schema'; // Assuming types are in schema\nimport { Loader2, UploadCloud, Link, Trash2, Edit3, Eye } from 'lucide-react';\nimport { apiRequest } from '@/lib/queryClient';\n\n// Define type for nutrition information to improve type safety\ninterface NutritionInfo {\n  calories?: number;\n  protein?: number;\n  carbs?: number;\n  fat?: number;\n  fiber?: number;\n  sugar?: number;\n  sodium?: number;\n}\n\nexport default function RecipeImportPage() {\n  const [importUrl, setImportUrl] = useState('');\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [importedRecipes, setImportedRecipes] = useState<ImportedRecipe[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFetchingRecipes, setIsFetchingRecipes] = useState(false);\n  const [editingRecipe, setEditingRecipe] = useState<ImportedRecipe | null>(null);\n  const [viewingRecipe, setViewingRecipe] = useState<ImportedRecipe | null>(null);\n\n  const { toast } = useToast();\n\n  const fetchImportedRecipes = async () => {\n    setIsFetchingRecipes(true);\n    try {\n      const response = await apiRequest('GET', '/api/imported-recipes');\n      if (!response.ok) throw new Error('Failed to fetch imported recipes');\n      const data: ImportedRecipe[] = await response.json();\n      setImportedRecipes(data);\n    } catch (error) {\n      toast({ title: 'Error', description: (error as Error).message, variant: 'destructive' });\n    }\n    setIsFetchingRecipes(false);\n  };\n\n  useEffect(() => {\n    fetchImportedRecipes();\n  }, []);\n\n  const handleUrlImport = async () => {\n    if (!importUrl) {\n      toast({ title: 'Error', description: 'Please enter a URL', variant: 'destructive' });\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await apiRequest('POST', '/api/imported-recipes/from-url', { url: importUrl });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to import from URL');\n      }\n      toast({ title: 'Success', description: 'Recipe imported successfully from URL!' });\n      setImportUrl('');\n      fetchImportedRecipes(); // Refresh list\n    } catch (error) {\n      toast({ title: 'Import Error', description: (error as Error).message, variant: 'destructive' });\n    }\n    setIsLoading(false);\n  };\n\n  const handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n\n  const handleImageImport = async () => {\n    if (!selectedFile) {\n      toast({ title: 'Error', description: 'Please select an image file', variant: 'destructive' });\n      return;\n    }\n    setIsLoading(true);\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n    reader.onload = async () => {\n      try {\n        const base64ImageData = reader.result as string;\n        const response = await apiRequest('POST', '/api/imported-recipes/from-image', { imageData: base64ImageData });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Failed to import from image');\n        }\n        toast({ title: 'Success', description: 'Recipe imported successfully from image!' });\n        setSelectedFile(null);\n        if (document.getElementById('image-upload') as HTMLInputElement) {\n            (document.getElementById('image-upload') as HTMLInputElement).value = '';\n        }\n        fetchImportedRecipes(); // Refresh list\n      } catch (error) {\n        toast({ title: 'Import Error', description: (error as Error).message, variant: 'destructive' });\n      }\n      setIsLoading(false);\n    };\n    reader.onerror = () => {\n      toast({ title: 'Error', description: 'Failed to read file.', variant: 'destructive' });\n      setIsLoading(false);\n    };\n  };\n\n  const handleDeleteRecipe = async (recipeId: number) => {\n    if (!confirm('Are you sure you want to delete this imported recipe?')) return;\n    try {\n      const response = await apiRequest('DELETE', `/api/imported-recipes/${recipeId}`);\n      if (!response.ok && response.status !== 204) throw new Error('Failed to delete recipe');\n      toast({ title: 'Success', description: 'Recipe deleted successfully.' });\n      fetchImportedRecipes();\n    } catch (error) {\n      toast({ title: 'Error', description: (error as Error).message, variant: 'destructive' });\n    }\n  };\n  \n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [currentRecipeForm, setCurrentRecipeForm] = useState<Partial<ImportedRecipe>>({});\n\n  const openViewModal = (recipe: ImportedRecipe) => {\n    setViewingRecipe(recipe);\n    setIsViewModalOpen(true);\n  };\n\n  const closeViewModal = () => {\n    setIsViewModalOpen(false);\n    setViewingRecipe(null);\n  };\n\n  const openEditModal = (recipe: ImportedRecipe) => {\n    setEditingRecipe(recipe);\n    setCurrentRecipeForm({\n      id: recipe.id,\n      recipeName: recipe.recipeName,\n      ingredients: recipe.ingredients,\n      instructions: recipe.instructions,\n      parsedNutrition: recipe.parsedNutrition,\n      notes: recipe.notes,\n      sourceUrl: recipe.sourceUrl,\n    });\n    setIsEditModalOpen(true);\n  };\n\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n    setEditingRecipe(null);\n    setCurrentRecipeForm({});\n  };\n\n  const handleEditFormChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setCurrentRecipeForm((prev: any) => ({ ...prev, [name]: value }));\n  };\n\n  const handleEditFormJsonChange = (name: 'ingredients' | 'parsedNutrition', value: string) => {\n    try {\n      const parsedJson = JSON.parse(value);\n      setCurrentRecipeForm((prev: any) => ({ ...prev, [name]: parsedJson }));\n    } catch (err) {\n      toast({ title: 'Invalid JSON', description: `Error parsing ${name}. Please ensure it's valid JSON.`, variant: 'destructive'});\n    }\n  };\n\n const handleUpdateRecipe = async () => {\n   if (!editingRecipe || !editingRecipe.id) return;\n   setIsLoading(true);\n   try {\n     const response = await apiRequest('PUT', `/api/imported-recipes/${editingRecipe.id}`, {\n       recipeName: currentRecipeForm.recipeName,\n       ingredients: currentRecipeForm.ingredients,\n       instructions: currentRecipeForm.instructions,\n       parsedNutrition: currentRecipeForm.parsedNutrition,\n       notes: currentRecipeForm.notes,\n       sourceUrl: currentRecipeForm.sourceUrl,\n     });\n     if (!response.ok) {\n       const errorData = await response.json();\n       throw new Error(errorData.error || 'Failed to update recipe');\n     }\n     toast({ title: 'Success', description: 'Recipe updated successfully!' });\n     closeEditModal();\n     fetchImportedRecipes();\n   } catch (error) {\n     toast({ title: 'Update Error', description: (error as Error).message, variant: 'destructive' });\n   }\n   setIsLoading(false);\n };\n\n // Helper function to render nutrition information safely\n const renderNutritionInfo = (nutrition: any) => {\n   if (!nutrition || typeof nutrition !== 'object') return null;\n\n   const nutritionData = nutrition as NutritionInfo;\n   const fields = [\n     { key: 'calories', label: 'Calories', unit: '' },\n     { key: 'protein', label: 'Protein', unit: 'g' },\n     { key: 'carbs', label: 'Carbs', unit: 'g' },\n     { key: 'fat', label: 'Fat', unit: 'g' },\n     { key: 'fiber', label: 'Fiber', unit: 'g' },\n     { key: 'sugar', label: 'Sugar', unit: 'g' },\n     { key: 'sodium', label: 'Sodium', unit: 'mg' },\n   ];\n\n   const availableFields = fields.filter(field =>\n     typeof nutritionData[field.key as keyof NutritionInfo] === 'number' &&\n     nutritionData[field.key as keyof NutritionInfo] !== undefined\n   );\n\n   if (availableFields.length === 0) return null;\n\n   return (\n     <div className=\"text-xs text-gray-600 space-y-1\">\n       <div className=\"font-medium text-gray-700\">Nutrition (per serving):</div>\n       {availableFields.map(field => (\n         <div key={field.key} className=\"flex justify-between\">\n           <span>{field.label}:</span>\n           <span>{nutritionData[field.key as keyof NutritionInfo]}{field.unit}</span>\n         </div>\n       ))}\n     </div>\n   );\n };\n\n  return (\n    <div className=\"container py-8\">\n      <h1 className=\"text-3xl font-bold mb-8\">Import & Manage Recipes</h1>\n\n      <div className=\"grid md:grid-cols-2 gap-8 mb-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\"><Link className=\"mr-2 h-5 w-5\" /> Import from URL</CardTitle>\n            <CardDescription>Paste a URL to a recipe page to import it.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Input \n              type=\"url\" \n              placeholder=\"https://www.example.com/your-favorite-recipe\" \n              value={importUrl} \n              onChange={(e) => setImportUrl(e.target.value)} \n              className=\"mb-4\"\n            />\n          </CardContent>\n          <CardFooter>\n            <Button onClick={handleUrlImport} disabled={isLoading || !importUrl}>\n              {isLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n              Import from URL\n            </Button>\n          </CardFooter>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\"><UploadCloud className=\"mr-2 h-5 w-5\" /> Import from Image</CardTitle>\n            <CardDescription>Upload an image of a recipe (e.g., from a cookbook).</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Input id=\"image-upload\" type=\"file\" accept=\"image/*\" onChange={handleFileChange} className=\"mb-4\" />\n            {selectedFile && <p className=\"text-sm text-muted-foreground\">Selected: {selectedFile.name}</p>}\n          </CardContent>\n          <CardFooter>\n            <Button onClick={handleImageImport} disabled={isLoading || !selectedFile}>\n              {isLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n              Import from Image\n            </Button>\n          </CardFooter>\n        </Card>\n      </div>\n\n      <div>\n        <h2 className=\"text-2xl font-semibold mb-6\">Your Imported Recipes</h2>\n        {isFetchingRecipes ? (\n          <div className=\"flex justify-center items-center py-8\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\" /></div>\n        ) : importedRecipes.length === 0 ? (\n          <p>You haven't imported any recipes yet.</p>\n        ) : (\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {importedRecipes.map(recipe => (\n              <Card key={recipe.id}>\n                <CardHeader>\n                  <CardTitle className=\"truncate\">{recipe.recipeName}</CardTitle>\n                  {recipe.sourceUrl && <CardDescription className=\"text-xs truncate\"><a href={recipe.sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">Source URL</a></CardDescription>}\n                  {recipe.sourceImageUrl && <CardDescription className=\"text-xs truncate\"><a href={recipe.sourceImageUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">Source Image</a></CardDescription>}\n                  {!recipe.sourceUrl && !recipe.sourceImageUrl && recipe.rawImageData && <CardDescription className=\"text-xs\">Image Upload</CardDescription>}\n                </CardHeader>\n                <CardContent className=\"text-sm\">\n                  {/* Enhanced display of nutrition information */}\n                  {renderNutritionInfo(recipe.parsedNutrition)}\n                  <p className=\"mt-2 text-gray-600 truncate h-10\">{recipe.instructions || 'No instructions available.'}</p>\n                </CardContent>\n                <CardFooter className=\"flex justify-end space-x-2\">\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => openViewModal(recipe)}><Eye className=\"mr-1 h-4 w-4\" /> View</Button>\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => openEditModal(recipe)}><Edit3 className=\"mr-1 h-4 w-4\" /> Edit</Button>\n                  <Button variant=\"destructive\" size=\"sm\" onClick={() => handleDeleteRecipe(recipe.id)}><Trash2 className=\"mr-1 h-4 w-4\"/> Delete</Button>\n                </CardFooter>\n              </Card>\n            ))}\n          </div>\n        )}\n      </div>\n      {isViewModalOpen && viewingRecipe && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50 overflow-y-auto\">\n          <Card className=\"w-full max-w-2xl max-h-[90vh] flex flex-col\">\n            <CardHeader>\n              <CardTitle>{viewingRecipe.recipeName}</CardTitle>\n              {viewingRecipe.sourceUrl && <CardDescription><a href={viewingRecipe.sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">Source URL</a></CardDescription>}\n            </CardHeader>\n            <CardContent className=\"flex-grow overflow-y-auto\">\n              <h3 className=\"font-semibold mt-2 mb-1\">Ingredients:</h3>\n              {Array.isArray(viewingRecipe.ingredients) ? (\n                <ul className=\"list-disc pl-5 text-sm\">\n                  {viewingRecipe.ingredients.map((ing: any, index: number) => <li key={index}>{`${ing.quantity || ''} ${ing.unit || ''} ${ing.name}`}</li>)}\n                </ul>\n              ) : <p className=\"text-sm\">{typeof viewingRecipe.ingredients === 'string' ? viewingRecipe.ingredients : 'Not available'}</p>}\n              \n              <h3 className=\"font-semibold mt-4 mb-1\">Instructions:</h3>\n              <p className=\"text-sm whitespace-pre-wrap\">{viewingRecipe.instructions || 'Not available'}</p>\n              \n              <h3 className=\"font-semibold mt-4 mb-1\">Parsed Nutrition:</h3>\n              {viewingRecipe.parsedNutrition && typeof viewingRecipe.parsedNutrition === 'object' ? (\n                <pre className=\"text-sm bg-gray-100 p-2 rounded overflow-x-auto\">{JSON.stringify(viewingRecipe.parsedNutrition, null, 2)}</pre>\n              ) : <p className=\"text-sm\">Not available</p>}\n\n              {viewingRecipe.notes && <><h3 className=\"font-semibold mt-4 mb-1\">Notes:</h3><p className=\"text-sm whitespace-pre-wrap\">{viewingRecipe.notes}</p></>}\n            </CardContent>\n            <CardFooter>\n              <Button onClick={closeViewModal}>Close</Button>\n            </CardFooter>\n          </Card>\n        </div>\n      )}\n\n      {isEditModalOpen && editingRecipe && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50 overflow-y-auto\">\n          <Card className=\"w-full max-w-2xl max-h-[90vh] flex flex-col\">\n            <CardHeader>\n              <CardTitle>Edit: {editingRecipe.recipeName}</CardTitle>\n            </CardHeader>\n            <CardContent className=\"flex-grow overflow-y-auto space-y-4\">\n              <div>\n                <label htmlFor=\"edit-recipeName\" className=\"block text-sm font-medium\">Recipe Name</label>\n                <Input id=\"edit-recipeName\" name=\"recipeName\" value={currentRecipeForm.recipeName || ''} onChange={handleEditFormChange} />\n              </div>\n              <div>\n                <label htmlFor=\"edit-sourceUrl\" className=\"block text-sm font-medium\">Source URL (optional)</label>\n                <Input id=\"edit-sourceUrl\" name=\"sourceUrl\" value={currentRecipeForm.sourceUrl || ''} onChange={handleEditFormChange} />\n              </div>\n              <div>\n                <label htmlFor=\"edit-ingredients\" className=\"block text-sm font-medium\">Ingredients (JSON format)</label>\n                <Textarea id=\"edit-ingredients\" name=\"ingredients\" value={typeof currentRecipeForm.ingredients === 'string' ? currentRecipeForm.ingredients : JSON.stringify(currentRecipeForm.ingredients, null, 2)} onChange={(e) => handleEditFormJsonChange('ingredients', e.target.value)} rows={5} />\n              </div>\n              <div>\n                <label htmlFor=\"edit-instructions\" className=\"block text-sm font-medium\">Instructions</label>\n                <Textarea id=\"edit-instructions\" name=\"instructions\" value={currentRecipeForm.instructions || ''} onChange={handleEditFormChange} rows={5} />\n              </div>\n              <div>\n                <label htmlFor=\"edit-parsedNutrition\" className=\"block text-sm font-medium\">Parsed Nutrition (JSON format)</label>\n                <Textarea id=\"edit-parsedNutrition\" name=\"parsedNutrition\" value={typeof currentRecipeForm.parsedNutrition === 'string' ? currentRecipeForm.parsedNutrition : JSON.stringify(currentRecipeForm.parsedNutrition, null, 2)} onChange={(e) => handleEditFormJsonChange('parsedNutrition', e.target.value)} rows={3} />\n              </div>\n              <div>\n                <label htmlFor=\"edit-notes\" className=\"block text-sm font-medium\">Notes</label>\n                <Textarea id=\"edit-notes\" name=\"notes\" value={currentRecipeForm.notes || ''} onChange={handleEditFormChange} rows={3} />\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex justify-end space-x-2\">\n              <Button variant=\"outline\" onClick={closeEditModal}>Cancel</Button>\n              <Button onClick={handleUpdateRecipe} disabled={isLoading}>\n                {isLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null} Update Recipe\n              </Button>\n            </CardFooter>\n          </Card>\n        </div>\n      )}\n\n    </div>\n  );\n}","import { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { Button } from \"../ui/button\";\r\nimport { Input } from \"../ui/input\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"../ui/card\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"../ui/form\";\r\nimport { Separator } from \"../ui/separator\";\r\nimport { Mail, Lock, User, Apple } from \"lucide-react\";\r\nimport { OnboardingData } from \"../../pages/onboarding-page\";\r\n\r\nconst accountSchema = z.object({\r\n  firstName: z.string().min(1, \"First name is required\"),\r\n  lastName: z.string().min(1, \"Last name is required\"),\r\n  email: z.string().email(\"Please enter a valid email address\"),\r\n  username: z.string().min(3, \"Username must be at least 3 characters\"),\r\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\r\n  confirmPassword: z.string().min(6, \"Please confirm your password\"),\r\n  referralCode: z.string().optional(),\r\n}).refine((data) => data.password === data.confirmPassword, {\r\n  message: \"Passwords do not match\",\r\n  path: [\"confirmPassword\"],\r\n});\r\n\r\ntype AccountFormValues = z.infer<typeof accountSchema>;\r\n\r\ninterface AccountCreationStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function AccountCreationStep({\r\n  data,\r\n  updateData,\r\n  onStepCompleted,\r\n  onNext,\r\n  isCompleted\r\n}: AccountCreationStepProps) {\r\n  const { registerMutation, user } = useAuth();\r\n  const [activeTab, setActiveTab] = useState<'social' | 'email'>('social');\r\n\r\n  // If user is already authenticated, skip this step\r\n  if (user) {\r\n    useEffect(() => {\r\n      onStepCompleted();\r\n      onNext();\r\n    }, [onStepCompleted, onNext]);\r\n\r\n    return (\r\n      <div className=\"max-w-md mx-auto space-y-6\">\r\n        <div className=\"text-center space-y-2\">\r\n          <h2 className=\"text-2xl font-bold text-neutral-900\">Account Already Created</h2>\r\n          <p className=\"text-neutral-600\">You're already logged in. Redirecting to next step...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const form = useForm<AccountFormValues>({\r\n    resolver: zodResolver(accountSchema),\r\n    defaultValues: {\r\n      firstName: data.name?.split(' ')[0] || \"\",\r\n      lastName: data.name?.split(' ')[1] || \"\",\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      referralCode: \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = async (formData: AccountFormValues) => {\r\n    try {\r\n      await registerMutation.mutateAsync({\r\n        firstName: formData.firstName,\r\n        lastName: formData.lastName,\r\n        username: formData.username,\r\n        password: formData.password,\r\n        confirmPassword: formData.password, // Add confirmPassword field\r\n        email: formData.email,\r\n      });\r\n\r\n      updateData({\r\n        name: `${formData.firstName} ${formData.lastName}`\r\n      });\r\n      onStepCompleted();\r\n      onNext();\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      // Handle authentication errors specifically\r\n      if (error instanceof Error && error.message.includes('401')) {\r\n        alert('Authentication failed. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSocialAuth = (provider: 'google' | 'apple') => {\r\n    // Placeholder for social authentication\r\n    console.log(`${provider} auth not implemented yet`);\r\n    // For demo purposes, we'll simulate successful auth\r\n    // In real implementation, this would handle OAuth flow\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto space-y-6\">\r\n      <div className=\"text-center space-y-2\">\r\n        <h2 className=\"text-2xl font-bold text-neutral-900\">Create Your Account</h2>\r\n        <p className=\"text-neutral-600\">Choose how you'd like to sign up</p>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader className=\"pb-4\">\r\n          <div className=\"flex rounded-lg bg-neutral-100 p-1\">\r\n            <button\r\n              onClick={() => setActiveTab('social')}\r\n              className={`flex-1 text-sm font-medium py-2 px-3 rounded-md transition-colors ${\r\n                activeTab === 'social'\r\n                  ? 'bg-white text-neutral-900 shadow-sm'\r\n                  : 'text-neutral-600 hover:text-neutral-900'\r\n              }`}\r\n            >\r\n              Social Sign Up\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('email')}\r\n              className={`flex-1 text-sm font-medium py-2 px-3 rounded-md transition-colors ${\r\n                activeTab === 'email'\r\n                  ? 'bg-white text-neutral-900 shadow-sm'\r\n                  : 'text-neutral-600 hover:text-neutral-900'\r\n              }`}\r\n            >\r\n              Email Sign Up\r\n            </button>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"space-y-4\">\r\n          {activeTab === 'social' ? (\r\n            <div className=\"space-y-3\">\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => handleSocialAuth('google')}\r\n                className=\"w-full flex items-center justify-center gap-3 h-11\"\r\n                disabled\r\n              >\r\n                <Mail className=\"h-5 w-5 text-red-500\" />\r\n                Continue with Google\r\n                <span className=\"text-xs text-neutral-400 ml-2\">(Coming Soon)</span>\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => handleSocialAuth('apple')}\r\n                className=\"w-full flex items-center justify-center gap-3 h-11\"\r\n                disabled\r\n              >\r\n                <Apple className=\"h-5 w-5\" />\r\n                Continue with Apple\r\n                <span className=\"text-xs text-neutral-400 ml-2\">(Coming Soon)</span>\r\n              </Button>\r\n\r\n              <div className=\"relative my-6\">\r\n                <Separator />\r\n                <span className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 bg-white px-2 text-xs text-neutral-500\">\r\n                  or sign up with email\r\n                </span>\r\n              </div>\r\n\r\n              <Button\r\n                variant=\"ghost\"\r\n                onClick={() => setActiveTab('email')}\r\n                className=\"w-full flex items-center justify-center gap-2\"\r\n              >\r\n                <Mail className=\"h-4 w-4\" />\r\n                Use Email Instead\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <Form {...form}>\r\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-3\">\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"firstName\"\r\n                    render={({ field }: any) => (\r\n                      <FormItem>\r\n                        <FormLabel>First Name</FormLabel>\r\n                        <FormControl>\r\n                          <Input placeholder=\"John\" {...field} />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"lastName\"\r\n                    render={({ field }: any) => (\r\n                      <FormItem>\r\n                        <FormLabel>Last Name</FormLabel>\r\n                        <FormControl>\r\n                          <Input placeholder=\"Doe\" {...field} />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                </div>\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"email\"\r\n                  render={({ field }: any) => (\r\n                    <FormItem>\r\n                      <FormLabel>Email</FormLabel>\r\n                      <FormControl>\r\n                        <Input type=\"email\" placeholder=\"john@example.com\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"username\"\r\n                  render={({ field }: any) => (\r\n                    <FormItem>\r\n                      <FormLabel>Username</FormLabel>\r\n                      <FormControl>\r\n                        <Input placeholder=\"johndoe\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"password\"\r\n                  render={({ field }: any) => (\r\n                    <FormItem>\r\n                      <FormLabel>Password</FormLabel>\r\n                      <FormControl>\r\n                        <Input type=\"password\" placeholder=\"Create a password\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"confirmPassword\"\r\n                  render={({ field }: any) => (\r\n                    <FormItem>\r\n                      <FormLabel>Confirm Password</FormLabel>\r\n                      <FormControl>\r\n                        <Input type=\"password\" placeholder=\"Confirm your password\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"referralCode\"\r\n                  render={({ field }: any) => (\r\n                    <FormItem>\r\n                      <FormLabel>Referral Code (optional)</FormLabel>\r\n                      <FormControl>\r\n                        <Input placeholder=\"Enter referral code if you have one\" {...field} />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"w-full\"\r\n                  disabled={registerMutation.isPending}\r\n                >\r\n                  {registerMutation.isPending ? 'Creating Account...' : 'Create Account'}\r\n                </Button>\r\n              </form>\r\n            </Form>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <p className=\"text-xs text-neutral-500 text-center\">\r\n        By creating an account, you agree to our Terms of Service and Privacy Policy\r\n      </p>\r\n    </div>\r\n  );\r\n}","import { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { User, Calendar, Ruler, Weight } from \"lucide-react\";\r\nimport { OnboardingData } from \"@/pages/onboarding-page\";\r\n\r\nconst personalInfoSchema = z.object({\r\n  name: z.string().min(1, \"Name is required\"),\r\n  age: z.number().min(13, \"You must be at least 13 years old\").max(120, \"Please enter a valid age\"),\r\n  gender: z.string().min(1, \"Please select your gender\"),\r\n  height: z.number().min(100, \"Height must be at least 100cm\").max(250, \"Please enter a valid height\"),\r\n  weight: z.number().min(30, \"Weight must be at least 30kg\").max(300, \"Please enter a valid weight\"),\r\n});\r\n\r\ntype PersonalInfoFormValues = z.infer<typeof personalInfoSchema>;\r\n\r\ninterface PersonalInfoStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function PersonalInfoStep({ \r\n  data, \r\n  updateData, \r\n  onStepCompleted, \r\n  onNext,\r\n  isCompleted \r\n}: PersonalInfoStepProps) {\r\n  const form = useForm<PersonalInfoFormValues>({\r\n    resolver: zodResolver(personalInfoSchema),\r\n    defaultValues: {\r\n      name: data.name || \"\",\r\n      age: data.age || undefined,\r\n      gender: data.gender || \"\",\r\n      height: data.height || undefined,\r\n      weight: data.weight || undefined,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (formData: PersonalInfoFormValues) => {\r\n    updateData({\r\n      name: formData.name,\r\n      age: formData.age,\r\n      gender: formData.gender,\r\n      height: formData.height,\r\n      weight: formData.weight,\r\n    });\r\n    onStepCompleted();\r\n    onNext();\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto space-y-6\">\r\n      <div className=\"text-center space-y-2\">\r\n        <div className=\"w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center mx-auto\">\r\n          <User className=\"h-6 w-6 text-primary-600\" />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-neutral-900\">Tell Us About You</h2>\r\n        <p className=\"text-neutral-600\">This helps us personalize your nutrition recommendations</p>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-lg\">Personal Information</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Form {...form}>\r\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\r\n              <FormField\r\n                control={form.control}\r\n                name=\"name\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel className=\"flex items-center gap-2\">\r\n                      <User className=\"h-4 w-4 text-primary-600\" />\r\n                      Full Name\r\n                    </FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Enter your full name\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"age\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"flex items-center gap-2\">\r\n                        <Calendar className=\"h-4 w-4 text-primary-600\" />\r\n                        Age\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input \r\n                          type=\"number\" \r\n                          placeholder=\"25\" \r\n                          {...field}\r\n                          onChange={(e) => field.onChange(e.target.value ? Number(e.target.value) : undefined)}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"gender\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Gender</FormLabel>\r\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                        <FormControl>\r\n                          <SelectTrigger>\r\n                            <SelectValue placeholder=\"Select\" />\r\n                          </SelectTrigger>\r\n                        </FormControl>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"male\">Male</SelectItem>\r\n                          <SelectItem value=\"female\">Female</SelectItem>\r\n                          <SelectItem value=\"other\">Other</SelectItem>\r\n                          <SelectItem value=\"prefer-not-to-say\">Prefer not to say</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"height\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"flex items-center gap-2\">\r\n                        <Ruler className=\"h-4 w-4 text-primary-600\" />\r\n                        Height (cm)\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input \r\n                          type=\"number\" \r\n                          placeholder=\"170\" \r\n                          {...field}\r\n                          onChange={(e) => field.onChange(e.target.value ? Number(e.target.value) : undefined)}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  control={form.control}\r\n                  name=\"weight\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel className=\"flex items-center gap-2\">\r\n                        <Weight className=\"h-4 w-4 text-primary-600\" />\r\n                        Weight (kg)\r\n                      </FormLabel>\r\n                      <FormControl>\r\n                        <Input \r\n                          type=\"number\" \r\n                          placeholder=\"70\" \r\n                          {...field}\r\n                          onChange={(e) => field.onChange(e.target.value ? Number(e.target.value) : undefined)}\r\n                        />\r\n                      </FormControl>\r\n                      <FormMessage />\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <Button type=\"submit\" className=\"w-full\">\r\n                Continue\r\n              </Button>\r\n            </form>\r\n          </Form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"text-xs text-neutral-500 text-center space-y-1\">\r\n        <p>Your personal information is kept private and secure.</p>\r\n        <p>We use this data only to provide personalized recommendations.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Activity, Users, Zap, Mountain, Rocket } from \"lucide-react\";\r\nimport { OnboardingData } from \"@/pages/onboarding-page\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst ACTIVITY_LEVELS = [\r\n  {\r\n    id: 'sedentary',\r\n    title: 'Sedentary',\r\n    description: 'Little to no exercise, desk job',\r\n    details: 'Office work, mostly sitting, minimal physical activity',\r\n    icon: Users,\r\n    multiplier: 1.2,\r\n  },\r\n  {\r\n    id: 'light',\r\n    title: 'Lightly Active',\r\n    description: 'Light exercise 1-3 times per week',\r\n    details: 'Light workouts, walking, occasional sports',\r\n    icon: Activity,\r\n    multiplier: 1.375,\r\n  },\r\n  {\r\n    id: 'moderate',\r\n    title: 'Moderately Active',\r\n    description: 'Moderate exercise 3-5 times per week',\r\n    details: 'Regular gym sessions, consistent exercise routine',\r\n    icon: Zap,\r\n    multiplier: 1.55,\r\n  },\r\n  {\r\n    id: 'active',\r\n    title: 'Very Active',\r\n    description: 'Hard exercise 6-7 times per week',\r\n    details: 'Daily workouts, sports, physically demanding job',\r\n    icon: Mountain,\r\n    multiplier: 1.725,\r\n  },\r\n  {\r\n    id: 'extra-active',\r\n    title: 'Extremely Active',\r\n    description: 'Very hard exercise, physical job',\r\n    details: 'Professional athlete, manual labor, multiple daily workouts',\r\n    icon: Rocket,\r\n    multiplier: 1.9,\r\n  },\r\n];\r\n\r\ninterface ActivityLevelStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function ActivityLevelStep({ \r\n  data, \r\n  updateData, \r\n  onStepCompleted, \r\n  onNext,\r\n  isCompleted \r\n}: ActivityLevelStepProps) {\r\n  const [selectedLevel, setSelectedLevel] = useState<string>(data.activityLevel || '');\r\n\r\n  const handleSelectLevel = (levelId: string) => {\r\n    setSelectedLevel(levelId);\r\n    updateData({ activityLevel: levelId });\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    if (selectedLevel) {\r\n      onStepCompleted();\r\n      onNext();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto space-y-6\">\r\n      <div className=\"text-center space-y-2\">\r\n        <div className=\"w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center mx-auto\">\r\n          <Activity className=\"h-6 w-6 text-primary-600\" />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-neutral-900\">What's Your Activity Level?</h2>\r\n        <p className=\"text-neutral-600\">This helps us calculate your daily calorie needs</p>\r\n      </div>\r\n\r\n      <div className=\"grid gap-3\">\r\n        {ACTIVITY_LEVELS.map((level) => {\r\n          const IconComponent = level.icon;\r\n          const isSelected = selectedLevel === level.id;\r\n          \r\n          return (\r\n            <Card \r\n              key={level.id}\r\n              className={cn(\r\n                \"cursor-pointer transition-all duration-200 hover:shadow-md\",\r\n                isSelected \r\n                  ? \"ring-2 ring-primary-500 bg-primary-50 border-primary-200\" \r\n                  : \"hover:border-primary-200\"\r\n              )}\r\n              onClick={() => handleSelectLevel(level.id)}\r\n            >\r\n              <CardContent className=\"p-4\">\r\n                <div className=\"flex items-start space-x-4\">\r\n                  <div className={cn(\r\n                    \"w-10 h-10 rounded-full flex items-center justify-center\",\r\n                    isSelected ? \"bg-primary-500\" : \"bg-neutral-100\"\r\n                  )}>\r\n                    <IconComponent className={cn(\r\n                      \"h-5 w-5\",\r\n                      isSelected ? \"text-white\" : \"text-neutral-600\"\r\n                    )} />\r\n                  </div>\r\n                  \r\n                  <div className=\"flex-1 space-y-1\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <h3 className=\"font-semibold text-neutral-900\">{level.title}</h3>\r\n                      <span className=\"text-xs text-neutral-500 font-medium\">\r\n                        {level.multiplier}x\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"text-neutral-600 text-sm\">{level.description}</p>\r\n                    <p className=\"text-neutral-500 text-xs\">{level.details}</p>\r\n                  </div>\r\n\r\n                  <div className={cn(\r\n                    \"w-5 h-5 rounded-full border-2 flex items-center justify-center\",\r\n                    isSelected \r\n                      ? \"border-primary-500 bg-primary-500\" \r\n                      : \"border-neutral-300\"\r\n                  )}>\r\n                    {isSelected && (\r\n                      <div className=\"w-2 h-2 bg-white rounded-full\" />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"flex justify-center pt-4\">\r\n        <Button \r\n          onClick={handleContinue}\r\n          disabled={!selectedLevel}\r\n          className=\"px-8\"\r\n        >\r\n          Continue\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"text-center text-xs text-neutral-500\">\r\n        <p>Don't worry, you can change this later in your settings</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Target, TrendingDown, Minus, TrendingUp, Calendar } from \"lucide-react\";\r\nimport { OnboardingData } from \"@/pages/onboarding-page\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst GOALS = [\r\n  {\r\n    id: 'lose-weight',\r\n    title: 'Lose Weight',\r\n    description: 'Reduce body weight and body fat',\r\n    icon: TrendingDown,\r\n    color: 'text-red-500',\r\n    bgColor: 'bg-red-50',\r\n    borderColor: 'border-red-200',\r\n    ringColor: 'ring-red-500',\r\n  },\r\n  {\r\n    id: 'maintain-weight',\r\n    title: 'Maintain Weight',\r\n    description: 'Keep current weight stable',\r\n    icon: Minus,\r\n    color: 'text-blue-500',\r\n    bgColor: 'bg-blue-50',\r\n    borderColor: 'border-blue-200',\r\n    ringColor: 'ring-blue-500',\r\n  },\r\n  {\r\n    id: 'gain-muscle',\r\n    title: 'Gain Muscle',\r\n    description: 'Build lean muscle mass',\r\n    icon: TrendingUp,\r\n    color: 'text-green-500',\r\n    bgColor: 'bg-green-50',\r\n    borderColor: 'border-green-200',\r\n    ringColor: 'ring-green-500',\r\n  },\r\n];\r\n\r\nconst goalDetailsSchema = z.object({\r\n  targetWeight: z.number().min(30, \"Please enter a valid target weight\").max(300, \"Please enter a valid target weight\").optional(),\r\n  timeline: z.string().optional(),\r\n});\r\n\r\ntype GoalDetailsFormValues = z.infer<typeof goalDetailsSchema>;\r\n\r\ninterface GoalSettingStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function GoalSettingStep({ \r\n  data, \r\n  updateData, \r\n  onStepCompleted, \r\n  onNext,\r\n  isCompleted \r\n}: GoalSettingStepProps) {\r\n  const [selectedGoal, setSelectedGoal] = useState<string>(data.primaryGoal || '');\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  const form = useForm<GoalDetailsFormValues>({\r\n    resolver: zodResolver(goalDetailsSchema),\r\n    defaultValues: {\r\n      targetWeight: data.targetWeight || undefined,\r\n      timeline: data.timeline || \"\",\r\n    },\r\n  });\r\n\r\n  const handleSelectGoal = (goalId: string) => {\r\n    setSelectedGoal(goalId);\r\n    updateData({ primaryGoal: goalId });\r\n    \r\n    // Show details form for weight goals\r\n    if (goalId === 'lose-weight' || goalId === 'gain-muscle') {\r\n      setShowDetails(true);\r\n    } else {\r\n      setShowDetails(false);\r\n      handleContinue();\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    if (selectedGoal) {\r\n      onStepCompleted();\r\n      onNext();\r\n    }\r\n  };\r\n\r\n  const onSubmitDetails = (formData: GoalDetailsFormValues) => {\r\n    updateData({\r\n      targetWeight: formData.targetWeight,\r\n      timeline: formData.timeline,\r\n    });\r\n    handleContinue();\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto space-y-6\">\r\n      <div className=\"text-center space-y-2\">\r\n        <div className=\"w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center mx-auto\">\r\n          <Target className=\"h-6 w-6 text-primary-600\" />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-neutral-900\">What's Your Primary Goal?</h2>\r\n        <p className=\"text-neutral-600\">We'll customize your nutrition plan to help you achieve it</p>\r\n      </div>\r\n\r\n      <div className=\"grid gap-4\">\r\n        {GOALS.map((goal) => {\r\n          const IconComponent = goal.icon;\r\n          const isSelected = selectedGoal === goal.id;\r\n          \r\n          return (\r\n            <Card \r\n              key={goal.id}\r\n              className={cn(\r\n                \"cursor-pointer transition-all duration-200 hover:shadow-md\",\r\n                isSelected \r\n                  ? `ring-2 ${goal.ringColor} ${goal.bgColor} ${goal.borderColor}` \r\n                  : \"hover:border-primary-200\"\r\n              )}\r\n              onClick={() => handleSelectGoal(goal.id)}\r\n            >\r\n              <CardContent className=\"p-6\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className={cn(\r\n                    \"w-12 h-12 rounded-full flex items-center justify-center\",\r\n                    isSelected ? \"bg-white\" : goal.bgColor\r\n                  )}>\r\n                    <IconComponent className={cn(\r\n                      \"h-6 w-6\",\r\n                      goal.color\r\n                    )} />\r\n                  </div>\r\n                  \r\n                  <div className=\"flex-1\">\r\n                    <h3 className=\"font-semibold text-neutral-900 text-lg\">{goal.title}</h3>\r\n                    <p className=\"text-neutral-600\">{goal.description}</p>\r\n                  </div>\r\n\r\n                  <div className={cn(\r\n                    \"w-6 h-6 rounded-full border-2 flex items-center justify-center\",\r\n                    isSelected \r\n                      ? `border-primary-500 bg-primary-500` \r\n                      : \"border-neutral-300\"\r\n                  )}>\r\n                    {isSelected && (\r\n                      <div className=\"w-2.5 h-2.5 bg-white rounded-full\" />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {showDetails && selectedGoal && (selectedGoal === 'lose-weight' || selectedGoal === 'gain-muscle') && (\r\n        <Card className=\"bg-neutral-50 border-primary-200\">\r\n          <CardContent className=\"p-6 space-y-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Calendar className=\"h-5 w-5 text-primary-600\" />\r\n              <h3 className=\"font-semibold text-neutral-900\">Additional Details (Optional)</h3>\r\n            </div>\r\n            \r\n            <Form {...form}>\r\n              <form onSubmit={form.handleSubmit(onSubmitDetails)} className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"targetWeight\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Target Weight (kg)</FormLabel>\r\n                        <FormControl>\r\n                          <Input \r\n                            type=\"number\" \r\n                            placeholder={selectedGoal === 'lose-weight' ? '65' : '75'} \r\n                            {...field}\r\n                            onChange={(e) => field.onChange(e.target.value ? Number(e.target.value) : undefined)}\r\n                          />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"timeline\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Timeline</FormLabel>\r\n                        <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                          <FormControl>\r\n                            <SelectTrigger>\r\n                              <SelectValue placeholder=\"Select timeline\" />\r\n                            </SelectTrigger>\r\n                          </FormControl>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"1-3 months\">1-3 Months</SelectItem>\r\n                            <SelectItem value=\"3-6 months\">3-6 Months</SelectItem>\r\n                            <SelectItem value=\"6-12 months\">6-12 Months</SelectItem>\r\n                            <SelectItem value=\"1+ years\">1+ Years</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex justify-between items-center pt-2\">\r\n                  <Button \r\n                    type=\"button\"\r\n                    variant=\"ghost\"\r\n                    onClick={handleContinue}\r\n                  >\r\n                    Skip Details\r\n                  </Button>\r\n                  <Button type=\"submit\">\r\n                    Continue\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </Form>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {selectedGoal === 'maintain-weight' && (\r\n        <div className=\"text-center\">\r\n          <p className=\"text-sm text-neutral-600 mb-4\">\r\n            Great! We'll help you maintain your current weight with balanced nutrition.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"text-center text-xs text-neutral-500\">\r\n        <p>Your goals can be adjusted anytime in your profile settings</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Leaf, Fish, Wheat, Heart, Shield, Globe } from \"lucide-react\";\r\nimport { OnboardingData } from \"@/pages/onboarding-page\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst DIETARY_PREFERENCES = [\r\n  {\r\n    id: 'no-preference',\r\n    title: 'No Preference',\r\n    description: 'I eat everything',\r\n    icon: Globe,\r\n    color: 'text-neutral-600',\r\n  },\r\n  {\r\n    id: 'vegetarian',\r\n    title: 'Vegetarian',\r\n    description: 'No meat, but dairy and eggs are okay',\r\n    icon: Leaf,\r\n    color: 'text-green-600',\r\n  },\r\n  {\r\n    id: 'vegan',\r\n    title: 'Vegan',\r\n    description: 'No animal products at all',\r\n    icon: Leaf,\r\n    color: 'text-green-700',\r\n  },\r\n  {\r\n    id: 'pescatarian',\r\n    title: 'Pescatarian',\r\n    description: 'Fish is okay, but no other meat',\r\n    icon: Fish,\r\n    color: 'text-blue-600',\r\n  },\r\n  {\r\n    id: 'keto',\r\n    title: 'Keto',\r\n    description: 'Low-carb, high-fat diet',\r\n    icon: Heart,\r\n    color: 'text-red-600',\r\n  },\r\n  {\r\n    id: 'paleo',\r\n    title: 'Paleo',\r\n    description: 'Whole foods, no processed items',\r\n    icon: Shield,\r\n    color: 'text-orange-600',\r\n  },\r\n  {\r\n    id: 'gluten-free',\r\n    title: 'Gluten-Free',\r\n    description: 'No wheat, barley, or rye',\r\n    icon: Wheat,\r\n    color: 'text-yellow-600',\r\n  },\r\n  {\r\n    id: 'halal',\r\n    title: 'Halal',\r\n    description: 'Following Islamic dietary laws',\r\n    icon: Shield,\r\n    color: 'text-purple-600',\r\n  },\r\n];\r\n\r\nconst COMMON_ALLERGIES = [\r\n  'Nuts', 'Peanuts', 'Shellfish', 'Fish', 'Eggs', 'Dairy', 'Soy', 'Wheat', 'Sesame'\r\n];\r\n\r\ninterface DietPreferencesStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function DietPreferencesStep({ \r\n  data, \r\n  updateData, \r\n  onStepCompleted, \r\n  onNext,\r\n  isCompleted \r\n}: DietPreferencesStepProps) {\r\n  const [selectedPreferences, setSelectedPreferences] = useState<string[]>(\r\n    data.dietaryPreferences || []\r\n  );\r\n  const [selectedAllergies, setSelectedAllergies] = useState<string[]>(\r\n    data.allergies || []\r\n  );\r\n\r\n  const handleTogglePreference = (preferenceId: string) => {\r\n    setSelectedPreferences(prev => {\r\n      const newPreferences = prev.includes(preferenceId)\r\n        ? prev.filter(id => id !== preferenceId)\r\n        : [...prev, preferenceId];\r\n      \r\n      updateData({ dietaryPreferences: newPreferences });\r\n      return newPreferences;\r\n    });\r\n  };\r\n\r\n  const handleToggleAllergy = (allergyId: string) => {\r\n    setSelectedAllergies(prev => {\r\n      const newAllergies = prev.includes(allergyId)\r\n        ? prev.filter(id => id !== allergyId)\r\n        : [...prev, allergyId];\r\n      \r\n      updateData({ allergies: newAllergies });\r\n      return newAllergies;\r\n    });\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    onStepCompleted();\r\n    onNext();\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    updateData({ \r\n      dietaryPreferences: [], \r\n      allergies: [] \r\n    });\r\n    onNext();\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto space-y-6\">\r\n      <div className=\"text-center space-y-2\">\r\n        <div className=\"w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center mx-auto\">\r\n          <Leaf className=\"h-6 w-6 text-primary-600\" />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-neutral-900\">Dietary Preferences</h2>\r\n        <p className=\"text-neutral-600\">Help us suggest meals that fit your lifestyle</p>\r\n      </div>\r\n\r\n      {/* Dietary Preferences */}\r\n      <Card>\r\n        <CardContent className=\"p-6 space-y-4\">\r\n          <h3 className=\"font-semibold text-neutral-900\">Diet Type (Select all that apply)</h3>\r\n          \r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n            {DIETARY_PREFERENCES.map((preference) => {\r\n              const IconComponent = preference.icon;\r\n              const isSelected = selectedPreferences.includes(preference.id);\r\n              \r\n              return (\r\n                <Card \r\n                  key={preference.id}\r\n                  className={cn(\r\n                    \"cursor-pointer transition-all duration-200 hover:shadow-sm\",\r\n                    isSelected \r\n                      ? \"ring-2 ring-primary-500 bg-primary-50 border-primary-200\" \r\n                      : \"hover:border-primary-200\"\r\n                  )}\r\n                  onClick={() => handleTogglePreference(preference.id)}\r\n                >\r\n                  <CardContent className=\"p-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <IconComponent className={cn(\"h-5 w-5\", preference.color)} />\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <h4 className=\"font-medium text-neutral-900 text-sm\">\r\n                          {preference.title}\r\n                        </h4>\r\n                        <p className=\"text-neutral-600 text-xs truncate\">\r\n                          {preference.description}\r\n                        </p>\r\n                      </div>\r\n                      <div className={cn(\r\n                        \"w-4 h-4 rounded border-2 flex items-center justify-center\",\r\n                        isSelected \r\n                          ? \"border-primary-500 bg-primary-500\" \r\n                          : \"border-neutral-300\"\r\n                      )}>\r\n                        {isSelected && (\r\n                          <div className=\"w-1.5 h-1.5 bg-white rounded-full\" />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              );\r\n            })}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Separator />\r\n\r\n      {/* Allergies */}\r\n      <Card>\r\n        <CardContent className=\"p-6 space-y-4\">\r\n          <div>\r\n            <h3 className=\"font-semibold text-neutral-900\">Food Allergies (Optional)</h3>\r\n            <p className=\"text-sm text-neutral-600\">We'll avoid suggesting foods with these ingredients</p>\r\n          </div>\r\n          \r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {COMMON_ALLERGIES.map((allergy) => {\r\n              const isSelected = selectedAllergies.includes(allergy);\r\n              \r\n              return (\r\n                <Badge\r\n                  key={allergy}\r\n                  variant={isSelected ? \"default\" : \"outline\"}\r\n                  className={cn(\r\n                    \"cursor-pointer transition-colors\",\r\n                    isSelected \r\n                      ? \"bg-primary-500 hover:bg-primary-600\" \r\n                      : \"hover:bg-primary-50 hover:border-primary-300\"\r\n                  )}\r\n                  onClick={() => handleToggleAllergy(allergy)}\r\n                >\r\n                  {allergy}\r\n                </Badge>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {selectedAllergies.length > 0 && (\r\n            <div className=\"p-3 bg-orange-50 border border-orange-200 rounded-lg\">\r\n              <p className=\"text-sm text-orange-800\">\r\n                <strong>Selected allergies:</strong> {selectedAllergies.join(', ')}\r\n              </p>\r\n              <p className=\"text-xs text-orange-600 mt-1\">\r\n                We'll exclude these ingredients from all meal suggestions.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"flex justify-between items-center pt-4\">\r\n        <Button \r\n          variant=\"ghost\"\r\n          onClick={handleSkip}\r\n          className=\"text-neutral-500\"\r\n        >\r\n          Skip This Step\r\n        </Button>\r\n        \r\n        <Button onClick={handleContinue}>\r\n          Continue\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"text-center text-xs text-neutral-500\">\r\n        <p>You can modify these preferences anytime in your settings</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Sparkles, Bot, ChefHat, MessageCircle, Lightbulb, TrendingUp } from \"lucide-react\";\r\nimport { OnboardingData } from \"@/pages/onboarding-page\";\r\n\r\nconst AI_ASSISTANT_NAMES = [\r\n  'NutriBot', 'ChefAI', 'HealthyHelper', 'WellnessWiz', 'FitFriend', 'NutritionNinja'\r\n];\r\n\r\ninterface AIPersonalizationStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function AIPersonalizationStep({ \r\n  data, \r\n  updateData, \r\n  onStepCompleted, \r\n  onNext,\r\n  isCompleted \r\n}: AIPersonalizationStepProps) {\r\n  const [aiMealSuggestions, setAiMealSuggestions] = useState(\r\n    data.aiMealSuggestions !== undefined ? data.aiMealSuggestions : true\r\n  );\r\n  const [aiChatAssistantName, setAiChatAssistantName] = useState(\r\n    data.aiChatAssistantName || ''\r\n  );\r\n\r\n  const handleToggleMealSuggestions = (enabled: boolean) => {\r\n    setAiMealSuggestions(enabled);\r\n    updateData({ aiMealSuggestions: enabled });\r\n  };\r\n\r\n  const handleAssistantNameChange = (name: string) => {\r\n    setAiChatAssistantName(name);\r\n    updateData({ aiChatAssistantName: name });\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    onStepCompleted();\r\n    onNext();\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    updateData({ \r\n      aiMealSuggestions: true,\r\n      aiChatAssistantName: 'NutriBot'\r\n    });\r\n    onNext();\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto space-y-6\">\r\n      <div className=\"text-center space-y-2\">\r\n        <div className=\"w-12 h-12 bg-gradient-to-br from-purple-100 to-primary-100 rounded-full flex items-center justify-center mx-auto\">\r\n          <Sparkles className=\"h-6 w-6 text-primary-600\" />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-neutral-900\">AI-Powered Features</h2>\r\n        <p className=\"text-neutral-600\">Customize how AI helps you reach your goals</p>\r\n      </div>\r\n\r\n      {/* AI Features Overview */}\r\n      <Card className=\"bg-gradient-to-br from-purple-50 to-primary-50 border-primary-200\">\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex items-center space-x-3 mb-4\">\r\n            <Bot className=\"h-6 w-6 text-primary-600\" />\r\n            <h3 className=\"font-semibold text-neutral-900\">How AI Helps You</h3>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              <ChefHat className=\"h-5 w-5 text-primary-600 mt-0.5\" />\r\n              <div>\r\n                <h4 className=\"font-medium text-sm text-neutral-900\">Smart Meal Suggestions</h4>\r\n                <p className=\"text-xs text-neutral-600\">Get personalized recipes based on your goals and preferences</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-start space-x-3\">\r\n              <MessageCircle className=\"h-5 w-5 text-primary-600 mt-0.5\" />\r\n              <div>\r\n                <h4 className=\"font-medium text-sm text-neutral-900\">Nutrition Chat Assistant</h4>\r\n                <p className=\"text-xs text-neutral-600\">Ask questions about nutrition and get instant expert advice</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-start space-x-3\">\r\n              <Lightbulb className=\"h-5 w-5 text-primary-600 mt-0.5\" />\r\n              <div>\r\n                <h4 className=\"font-medium text-sm text-neutral-900\">Intelligent Insights</h4>\r\n                <p className=\"text-xs text-neutral-600\">Discover patterns in your eating habits and get improvement tips</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-start space-x-3\">\r\n              <TrendingUp className=\"h-5 w-5 text-primary-600 mt-0.5\" />\r\n              <div>\r\n                <h4 className=\"font-medium text-sm text-neutral-900\">Progress Optimization</h4>\r\n                <p className=\"text-xs text-neutral-600\">AI adjusts recommendations as you progress toward your goals</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* AI Meal Suggestions Toggle */}\r\n      <Card>\r\n        <CardContent className=\"p-6 space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"ai-meals\" className=\"text-base font-medium\">\r\n                AI Meal Suggestions\r\n              </Label>\r\n              <p className=\"text-sm text-neutral-600\">\r\n                Get daily personalized meal recommendations based on your goals\r\n              </p>\r\n            </div>\r\n            <Switch\r\n              id=\"ai-meals\"\r\n              checked={aiMealSuggestions}\r\n              onCheckedChange={handleToggleMealSuggestions}\r\n            />\r\n          </div>\r\n          \r\n          {aiMealSuggestions && (\r\n            <div className=\"p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n              <p className=\"text-sm text-green-800\">\r\n                ✨ Great! You'll receive 3 personalized meal suggestions every day.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* AI Chat Assistant Name */}\r\n      <Card>\r\n        <CardContent className=\"p-6 space-y-4\">\r\n          <div>\r\n            <Label className=\"text-base font-medium\">AI Chat Assistant Name (Optional)</Label>\r\n            <p className=\"text-sm text-neutral-600 mt-1\">\r\n              Give your AI nutrition assistant a friendly name\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"space-y-3\">\r\n            <Input\r\n              placeholder=\"Enter a custom name or choose from suggestions\"\r\n              value={aiChatAssistantName}\r\n              onChange={(e) => handleAssistantNameChange(e.target.value)}\r\n              className=\"w-full\"\r\n            />\r\n            \r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <p className=\"text-xs text-neutral-500 w-full mb-1\">Quick suggestions:</p>\r\n              {AI_ASSISTANT_NAMES.map((name) => (\r\n                <Button\r\n                  key={name}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleAssistantNameChange(name)}\r\n                  className=\"text-xs h-7\"\r\n                >\r\n                  {name}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          {aiChatAssistantName && (\r\n            <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n              <p className=\"text-sm text-blue-800\">\r\n                👋 Hi! I'm <strong>{aiChatAssistantName}</strong>, your personal nutrition assistant.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"flex justify-between items-center pt-4\">\r\n        <Button \r\n          variant=\"ghost\"\r\n          onClick={handleSkip}\r\n          className=\"text-neutral-500\"\r\n        >\r\n          Use Defaults\r\n        </Button>\r\n        \r\n        <Button onClick={handleContinue}>\r\n          Continue\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"text-center text-xs text-neutral-500\">\r\n        <p>All AI features can be customized later in your settings</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState, useCallback } from \"react\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { Redirect } from \"wouter\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\n\r\n// Import onboarding step components\r\nimport WelcomeStep from \"@/components/onboarding/welcome-step\";\r\nimport AccountCreationStep from \"@/components/onboarding/account-creation-step\";\r\nimport PersonalInfoStep from \"@/components/onboarding/personal-info-step\";\r\nimport ActivityLevelStep from \"@/components/onboarding/activity-level-step\";\r\nimport GoalSettingStep from \"@/components/onboarding/goal-setting-step\";\r\nimport DietPreferencesStep from \"@/components/onboarding/diet-preferences-step\";\r\nimport AIPersonalizationStep from \"@/components/onboarding/ai-personalization-step\";\r\nimport NotificationsStep from \"@/components/onboarding/notifications-step\";\r\nimport FinalSummaryStep from \"@/components/onboarding/final-summary-step\";\r\n\r\nexport interface OnboardingData {\r\n  // Personal Info\r\n  name?: string;\r\n  age?: number;\r\n  gender?: string;\r\n  height?: number;\r\n  weight?: number;\r\n  \r\n  // Activity & Goals\r\n  activityLevel?: string;\r\n  primaryGoal?: string;\r\n  targetWeight?: number;\r\n  timeline?: string;\r\n  \r\n  // Diet Preferences\r\n  dietaryPreferences?: string[];\r\n  allergies?: string[];\r\n  \r\n  // AI Settings\r\n  aiMealSuggestions?: boolean;\r\n  aiChatAssistantName?: string;\r\n  \r\n  // Notifications\r\n  notificationsEnabled?: boolean;\r\n}\r\n\r\n// Define all possible steps\r\nconst ALL_STEPS = [\r\n  { id: 'welcome', title: 'Welcome', component: WelcomeStep, required: true },\r\n  { id: 'account', title: 'Account', component: AccountCreationStep, required: true },\r\n  { id: 'personal', title: 'Personal Info', component: PersonalInfoStep, required: true },\r\n  { id: 'activity', title: 'Activity Level', component: ActivityLevelStep, required: true },\r\n  { id: 'goals', title: 'Goals', component: GoalSettingStep, required: true },\r\n  { id: 'diet', title: 'Diet Preferences', component: DietPreferencesStep, required: false },\r\n  { id: 'ai', title: 'AI Features', component: AIPersonalizationStep, required: false },\r\n  { id: 'notifications', title: 'Notifications', component: NotificationsStep, required: false },\r\n  { id: 'summary', title: 'Summary', component: FinalSummaryStep, required: true },\r\n];\r\n\r\n// Filter steps based on authentication status\r\nconst getStepsForUser = (isAuthenticated: boolean) => {\r\n  if (isAuthenticated) {\r\n    // Skip account creation step for already authenticated users\r\n    return ALL_STEPS.filter(step => step.id !== 'account');\r\n  }\r\n  return ALL_STEPS;\r\n};\r\n\r\nexport default function OnboardingPage() {\r\n  const { user } = useAuth();\r\n  // Get steps based on authentication status\r\n  const STEPS = getStepsForUser(!!user);\r\n  // Determine initial step based on authentication status\r\n  const initialStep = user ? 0 : 0; // Start at 0 for both, but steps will be different\r\n  const [currentStep, setCurrentStep] = useState(initialStep);\r\n  const [onboardingData, setOnboardingData] = useState<OnboardingData>({});\r\n  const [completedSteps, setCompletedSteps] = useState<Set<number>>(new Set());\r\n\r\n  // If user is logged in and has completed onboarding, redirect to dashboard\r\n  if (user?.onboardingCompleted) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  const updateOnboardingData = (newData: Partial<OnboardingData>) => {\r\n    setOnboardingData(prev => ({ ...prev, ...newData }));\r\n  };\r\n\r\n  const markStepCompleted = (stepIndex: number) => {\r\n    setCompletedSteps(prev => new Set([...Array.from(prev), stepIndex]));\r\n  };\r\n\r\n  const canProceedToNext = () => {\r\n    const currentStepConfig = STEPS[currentStep];\r\n    if (currentStepConfig.required) {\r\n      return completedSteps.has(currentStep);\r\n    }\r\n    return true; // Can skip optional steps\r\n  };\r\n\r\n  const goToNext = () => {\r\n    if (currentStep < STEPS.length - 1) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  const goToPrevious = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const skipStep = () => {\r\n    if (!STEPS[currentStep].required) {\r\n      goToNext();\r\n    }\r\n  };\r\n\r\n  const progressPercentage = ((currentStep + 1) / STEPS.length) * 100;\r\n\r\n  // 使用 useCallback 缓存 onStepCompleted 函数，避免无限循环\r\n  const handleStepCompleted = useCallback(() => {\r\n    markStepCompleted(currentStep);\r\n  }, [currentStep]);\r\n\r\n  const CurrentStepComponent = STEPS[currentStep].component;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-50 to-white\">\r\n      {/* Progress Header */}\r\n      <div className=\"sticky top-0 z-50 bg-white/80 backdrop-blur-sm border-b border-primary-100\">\r\n        <div className=\"max-w-4xl mx-auto px-4 py-4\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h1 className=\"text-sm font-medium text-primary-600\">\r\n              Step {currentStep + 1} of {STEPS.length}\r\n            </h1>\r\n            <span className=\"text-sm text-neutral-500\">\r\n              {STEPS[currentStep].title}\r\n            </span>\r\n          </div>\r\n          <Progress value={progressPercentage} className=\"h-2\" />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\r\n        <AnimatePresence mode=\"wait\">\r\n          <motion.div\r\n            key={currentStep}\r\n            initial={{ opacity: 0, x: 20 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            exit={{ opacity: 0, x: -20 }}\r\n            transition={{ duration: 0.3 }}\r\n            className=\"min-h-[calc(100vh-200px)]\"\r\n          >\r\n            <CurrentStepComponent\r\n              data={onboardingData}\r\n              updateData={updateOnboardingData}\r\n              onStepCompleted={handleStepCompleted}\r\n              onNext={goToNext}\r\n              isCompleted={completedSteps.has(currentStep)}\r\n            />\r\n          </motion.div>\r\n        </AnimatePresence>\r\n      </div>\r\n\r\n      {/* Navigation Footer */}\r\n      <div className=\"sticky bottom-0 bg-white border-t border-primary-100 px-4 py-4\">\r\n        <div className=\"max-w-4xl mx-auto flex items-center justify-between\">\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={goToPrevious}\r\n            disabled={currentStep === 0}\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <ChevronLeft className=\"h-4 w-4\" />\r\n            Back\r\n          </Button>\r\n\r\n          <div className=\"flex items-center gap-3\">\r\n            {!STEPS[currentStep].required && currentStep !== 0 && currentStep !== STEPS.length - 1 && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                onClick={skipStep}\r\n                className=\"text-neutral-500 hover:text-neutral-700\"\r\n              >\r\n                Skip\r\n              </Button>\r\n            )}\r\n            \r\n            <Button\r\n              onClick={goToNext}\r\n              disabled={!canProceedToNext() || currentStep === STEPS.length - 1}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              {currentStep === STEPS.length - 1 ? 'Complete' : 'Next'}\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Leaf, Sparkles, ArrowRight } from \"lucide-react\";\r\nimport { OnboardingData } from \"@/pages/onboarding-page\";\r\n\r\ninterface WelcomeStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function WelcomeStep({ onStepCompleted, onNext }: WelcomeStepProps) {\r\n  useEffect(() => {\r\n    // Auto-complete this step since it's just informational\r\n    onStepCompleted();\r\n  }, [onStepCompleted]);\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto text-center space-y-8\">\r\n      {/* App Branding */}\r\n      <div className=\"space-y-4\">\r\n        <div className=\"flex items-center justify-center\">\r\n          <div className=\"relative\">\r\n            <Leaf className=\"h-16 w-16 text-primary-600\" />\r\n            <Sparkles className=\"h-6 w-6 text-primary-400 absolute -top-1 -right-1\" />\r\n          </div>\r\n        </div>\r\n        <h1 className=\"text-4xl font-bold text-neutral-900\">Welcome to NutriScan</h1>\r\n        <p className=\"text-xl text-primary-600 font-medium\">\r\n          Track smarter, eat better with AI.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Welcome Content */}\r\n      <Card className=\"bg-gradient-to-br from-primary-50 to-white border-primary-200\">\r\n        <CardContent className=\"p-8 space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\r\n                <span className=\"text-primary-600 font-semibold\">1</span>\r\n              </div>\r\n              <p className=\"text-left text-neutral-700\">\r\n                Set up your personal profile for AI-powered nutrition recommendations\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\r\n                <span className=\"text-primary-600 font-semibold\">2</span>\r\n              </div>\r\n              <p className=\"text-left text-neutral-700\">\r\n                Choose your health goals and dietary preferences\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\r\n                <span className=\"text-primary-600 font-semibold\">3</span>\r\n              </div>\r\n              <p className=\"text-left text-neutral-700\">\r\n                Get personalized meal suggestions and nutrition insights\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"pt-4\">\r\n            <Button \r\n              onClick={onNext}\r\n              size=\"lg\"\r\n              className=\"w-full flex items-center justify-center gap-2\"\r\n            >\r\n              Get Started\r\n              <ArrowRight className=\"h-5 w-5\" />\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <p className=\"text-sm text-neutral-500\">\r\n        This will only take 2-3 minutes to complete\r\n      </p>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Bell, Clock, TrendingUp, Utensils, Shield } from \"lucide-react\";\r\nimport { OnboardingData } from \"@/pages/onboarding-page\";\r\n\r\ninterface NotificationsStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function NotificationsStep({ \r\n  data, \r\n  updateData, \r\n  onStepCompleted, \r\n  onNext,\r\n  isCompleted \r\n}: NotificationsStepProps) {\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState(\r\n    data.notificationsEnabled !== undefined ? data.notificationsEnabled : true\r\n  );\r\n  const [permissionStatus, setPermissionStatus] = useState<'default' | 'granted' | 'denied'>('default');\r\n\r\n  const handleToggleNotifications = (enabled: boolean) => {\r\n    setNotificationsEnabled(enabled);\r\n    updateData({ notificationsEnabled: enabled });\r\n  };\r\n\r\n  const requestNotificationPermission = async () => {\r\n    if ('Notification' in window) {\r\n      try {\r\n        const permission = await Notification.requestPermission();\r\n        setPermissionStatus(permission);\r\n        \r\n        if (permission === 'granted') {\r\n          setNotificationsEnabled(true);\r\n          updateData({ notificationsEnabled: true });\r\n        } else {\r\n          setNotificationsEnabled(false);\r\n          updateData({ notificationsEnabled: false });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error requesting notification permission:', error);\r\n        setPermissionStatus('denied');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    onStepCompleted();\r\n    onNext();\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    updateData({ notificationsEnabled: false });\r\n    onNext();\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto space-y-6\">\r\n      <div className=\"text-center space-y-2\">\r\n        <div className=\"w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center mx-auto\">\r\n          <Bell className=\"h-6 w-6 text-primary-600\" />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-neutral-900\">Stay on Track</h2>\r\n        <p className=\"text-neutral-600\">Get helpful reminders to maintain your nutrition goals</p>\r\n      </div>\r\n\r\n      {/* Notification Benefits */}\r\n      <Card className=\"bg-gradient-to-br from-primary-50 to-white border-primary-200\">\r\n        <CardContent className=\"p-6 space-y-4\">\r\n          <h3 className=\"font-semibold text-neutral-900 flex items-center gap-2\">\r\n            <Bell className=\"h-5 w-5 text-primary-600\" />\r\n            What you'll get\r\n          </h3>\r\n          \r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-start space-x-3\">\r\n              <Clock className=\"h-5 w-5 text-primary-600 mt-0.5\" />\r\n              <div>\r\n                <h4 className=\"font-medium text-sm text-neutral-900\">Daily Meal Reminders</h4>\r\n                <p className=\"text-xs text-neutral-600\">Gentle nudges to log your meals and stay consistent</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-start space-x-3\">\r\n              <TrendingUp className=\"h-5 w-5 text-primary-600 mt-0.5\" />\r\n              <div>\r\n                <h4 className=\"font-medium text-sm text-neutral-900\">Progress Updates</h4>\r\n                <p className=\"text-xs text-neutral-600\">Weekly summaries of your nutrition achievements</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-start space-x-3\">\r\n              <Utensils className=\"h-5 w-5 text-primary-600 mt-0.5\" />\r\n              <div>\r\n                <h4 className=\"font-medium text-sm text-neutral-900\">Smart Meal Suggestions</h4>\r\n                <p className=\"text-xs text-neutral-600\">AI-powered meal ideas delivered at the right time</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Notification Toggle */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"notifications\" className=\"text-base font-medium\">\r\n                Enable Notifications\r\n              </Label>\r\n              <p className=\"text-sm text-neutral-600\">\r\n                Allow NutriScan to send you helpful reminders\r\n              </p>\r\n            </div>\r\n            <Switch\r\n              id=\"notifications\"\r\n              checked={notificationsEnabled}\r\n              onCheckedChange={handleToggleNotifications}\r\n            />\r\n          </div>\r\n          \r\n          {notificationsEnabled && permissionStatus === 'default' && (\r\n            <div className=\"space-y-3\">\r\n              <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n                <p className=\"text-sm text-blue-800 mb-2\">\r\n                  🔔 To receive notifications, we need your browser's permission.\r\n                </p>\r\n                <Button\r\n                  onClick={requestNotificationPermission}\r\n                  size=\"sm\"\r\n                  className=\"w-full\"\r\n                >\r\n                  Allow Notifications\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {permissionStatus === 'granted' && (\r\n            <div className=\"p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n              <p className=\"text-sm text-green-800\">\r\n                ✅ Perfect! You'll receive helpful reminders to stay on track.\r\n              </p>\r\n            </div>\r\n          )}\r\n          \r\n          {permissionStatus === 'denied' && (\r\n            <div className=\"p-3 bg-orange-50 border border-orange-200 rounded-lg\">\r\n              <p className=\"text-sm text-orange-800\">\r\n                ℹ️ Notifications are blocked. You can enable them later in your browser settings.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Privacy Note */}\r\n      <Card className=\"bg-neutral-50\">\r\n        <CardContent className=\"p-4\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <Shield className=\"h-5 w-5 text-neutral-600 mt-0.5\" />\r\n            <div>\r\n              <h4 className=\"font-medium text-sm text-neutral-900\">Your Privacy</h4>\r\n              <p className=\"text-xs text-neutral-600\">\r\n                We'll only send helpful, relevant notifications. No spam, ever. \r\n                You can adjust or disable these anytime in your settings.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"flex justify-between items-center pt-4\">\r\n        <Button \r\n          variant=\"ghost\"\r\n          onClick={handleSkip}\r\n          className=\"text-neutral-500\"\r\n        >\r\n          Skip for Now\r\n        </Button>\r\n        \r\n        <Button onClick={handleContinue}>\r\n          Continue\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\nimport { apiRequest } from \"../../lib/queryClient\";\r\nimport { Button } from \"../ui/button\";\r\nimport { Card, CardContent } from \"../ui/card\";\r\nimport { Badge } from \"../ui/badge\";\r\nimport { Separator } from \"../ui/separator\";\r\nimport { CheckCircle, Sparkles, User, Target, Utensils, Bell, Loader2 } from \"lucide-react\";\r\nimport { OnboardingData } from \"../../pages/onboarding-page\";\r\nimport { useLocation } from \"wouter\";\r\n\r\ninterface FinalSummaryStepProps {\r\n  data: OnboardingData;\r\n  updateData: (data: Partial<OnboardingData>) => void;\r\n  onStepCompleted: () => void;\r\n  onNext: () => void;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport default function FinalSummaryStep({ \r\n  data, \r\n  onStepCompleted,\r\n  isCompleted \r\n}: FinalSummaryStepProps) {\r\n  const [isCompleting, setIsCompleting] = useState(false);\r\n  const [, setLocation] = useLocation();\r\n  const { user } = useAuth();\r\n\r\n  const completeOnboarding = async () => {\r\n    setIsCompleting(true);\r\n    \r\n    try {\r\n      // Validate required fields before sending\r\n      const requiredFields = ['age', 'gender', 'height', 'weight', 'activityLevel', 'primaryGoal'];\r\n      const missingFields = requiredFields.filter(field => !(data as any)[field]);\r\n      \r\n      if (missingFields.length > 0) {\r\n        throw new Error(`Missing required fields: ${missingFields.join(', ')}`);\r\n      }\r\n\r\n      // Validate numeric fields\r\n      if ((data as any).age && ((data as any).age < 13 || (data as any).age > 120)) {\r\n        throw new Error('Age must be between 13 and 120');\r\n      }\r\n      if ((data as any).height && ((data as any).height < 100 || (data as any).height > 250)) {\r\n        throw new Error('Height must be between 100cm and 250cm');\r\n      }\r\n      if ((data as any).weight && ((data as any).weight < 30 || (data as any).weight > 300)) {\r\n        throw new Error('Weight must be between 30kg and 300kg');\r\n      }\r\n\r\n      // Validate activity level and goal\r\n      const validActivityLevels = ['sedentary', 'light', 'moderate', 'active', 'extra-active'];\r\n      const validGoals = ['lose-weight', 'maintain-weight', 'gain-muscle'];\r\n      \r\n      if (!validActivityLevels.includes((data as any).activityLevel || '')) {\r\n        throw new Error('Invalid activity level selected');\r\n      }\r\n      if (!validGoals.includes((data as any).primaryGoal || '')) {\r\n        throw new Error('Invalid primary goal selected');\r\n      }\r\n\r\n      console.log('Submitting onboarding data:', data);\r\n\r\n      // Save onboarding data to the server using standardized apiRequest\r\n      const response = await apiRequest(\"POST\", \"/api/onboarding/complete\", data);\r\n\r\n      const responseData = await response.json();\r\n      console.log('Onboarding response:', responseData);\r\n\r\n      if (response.ok) {\r\n        console.log('Onboarding successful:', responseData);\r\n        onStepCompleted();\r\n        // Simulate background loading of AI features\r\n        setTimeout(() => {\r\n          setLocation('/dashboard');\r\n        }, 2000);\r\n      } else {\r\n        let errorMessage = 'Failed to complete onboarding';\r\n        if (responseData.error) {\r\n          errorMessage = responseData.error;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error completing onboarding:', error);\r\n      \r\n      // Handle authentication errors specifically\r\n      if (error instanceof Error && error.message.includes('401')) {\r\n        alert('Authentication failed. Please log in again.');\r\n        // Clear token and redirect to login\r\n        const { clearTokens } = await import('../../lib/tokenManager');\r\n        clearTokens();\r\n        setLocation('/login');\r\n      } else {\r\n        alert(`Error: ${error instanceof Error ? error.message : 'Unknown error occurred'}`);\r\n      }\r\n\r\n      setIsCompleting(false);\r\n    }\r\n  };\r\n\r\n  const getActivityLevelDisplay = (level: string) => {\r\n    const levels = {\r\n      'sedentary': 'Sedentary',\r\n      'light': 'Lightly Active',\r\n      'moderate': 'Moderately Active',\r\n      'active': 'Very Active',\r\n      'extra-active': 'Extremely Active'\r\n    };\r\n    return levels[level as keyof typeof levels] || level;\r\n  };\r\n\r\n  const getGoalDisplay = (goal: string) => {\r\n    const goals = {\r\n      'lose-weight': 'Lose Weight',\r\n      'maintain-weight': 'Maintain Weight',\r\n      'gain-muscle': 'Gain Muscle'\r\n    };\r\n    return goals[goal as keyof typeof goals] || goal;\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto space-y-6\">\r\n      {!isCompleting ? (\r\n        <>\r\n          <div className=\"text-center space-y-4\">\r\n            <div className=\"w-16 h-16 bg-gradient-to-br from-green-100 to-primary-100 rounded-full flex items-center justify-center mx-auto\">\r\n              <CheckCircle className=\"h-8 w-8 text-green-600\" />\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-3xl font-bold text-neutral-900\">You're All Set!</h2>\r\n              <p className=\"text-lg text-neutral-600 mt-2\">\r\n                Here's a summary of your personalized nutrition profile\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Profile Summary */}\r\n          <Card className=\"bg-gradient-to-br from-primary-50 to-white border-primary-200\">\r\n            <CardContent className=\"p-6 space-y-6\">\r\n              {/* Personal Info */}\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <User className=\"h-5 w-5 text-primary-600\" />\r\n                  <h3 className=\"font-semibold text-neutral-900\">Personal Information</h3>\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div>\r\n                    <span className=\"text-neutral-600\">Name:</span>\r\n                    <p className=\"font-medium\">{data.name}</p>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"text-neutral-600\">Age:</span>\r\n                    <p className=\"font-medium\">{data.age} years</p>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"text-neutral-600\">Height:</span>\r\n                    <p className=\"font-medium\">{data.height} cm</p>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"text-neutral-600\">Weight:</span>\r\n                    <p className=\"font-medium\">{data.weight} kg</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <Separator />\r\n\r\n              {/* Goals & Activity */}\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Target className=\"h-5 w-5 text-primary-600\" />\r\n                  <h3 className=\"font-semibold text-neutral-900\">Goals & Activity</h3>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-neutral-600 text-sm\">Primary Goal:</span>\r\n                    <Badge variant=\"default\">{getGoalDisplay(data.primaryGoal || '')}</Badge>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-neutral-600 text-sm\">Activity Level:</span>\r\n                    <Badge variant=\"outline\">{getActivityLevelDisplay(data.activityLevel || '')}</Badge>\r\n                  </div>\r\n                  {data.targetWeight && (\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-neutral-600 text-sm\">Target Weight:</span>\r\n                      <span className=\"font-medium\">{data.targetWeight} kg</span>\r\n                    </div>\r\n                  )}\r\n                  {data.timeline && (\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-neutral-600 text-sm\">Timeline:</span>\r\n                      <span className=\"font-medium\">{data.timeline}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <Separator />\r\n\r\n              {/* Diet Preferences */}\r\n              {(data.dietaryPreferences?.length || data.allergies?.length) && (\r\n                <>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Utensils className=\"h-5 w-5 text-primary-600\" />\r\n                      <h3 className=\"font-semibold text-neutral-900\">Dietary Preferences</h3>\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      {data.dietaryPreferences && data.dietaryPreferences.length > 0 && (\r\n                        <div>\r\n                          <span className=\"text-neutral-600 text-sm\">Diet Types:</span>\r\n                          <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                            {data.dietaryPreferences.map((pref) => (\r\n                              <Badge key={pref} variant=\"outline\" className=\"text-xs\">\r\n                                {pref.replace('-', ' ')}\r\n                              </Badge>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {data.allergies && data.allergies.length > 0 && (\r\n                        <div>\r\n                          <span className=\"text-neutral-600 text-sm\">Allergies:</span>\r\n                          <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                            {data.allergies.map((allergy) => (\r\n                              <Badge key={allergy} variant=\"destructive\" className=\"text-xs\">\r\n                                {allergy}\r\n                              </Badge>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <Separator />\r\n                </>\r\n              )}\r\n\r\n              {/* AI Features */}\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Sparkles className=\"h-5 w-5 text-primary-600\" />\r\n                  <h3 className=\"font-semibold text-neutral-900\">AI Features</h3>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-neutral-600 text-sm\">Meal Suggestions:</span>\r\n                    <Badge variant={data.aiMealSuggestions ? \"default\" : \"outline\"}>\r\n                      {data.aiMealSuggestions ? \"Enabled\" : \"Disabled\"}\r\n                    </Badge>\r\n                  </div>\r\n                  {data.aiChatAssistantName && (\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-neutral-600 text-sm\">AI Assistant:</span>\r\n                      <span className=\"font-medium\">{data.aiChatAssistantName}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <Separator />\r\n\r\n              {/* Notifications */}\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Bell className=\"h-5 w-5 text-primary-600\" />\r\n                  <h3 className=\"font-semibold text-neutral-900\">Notifications</h3>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-neutral-600 text-sm\">Reminders:</span>\r\n                  <Badge variant={data.notificationsEnabled ? \"default\" : \"outline\"}>\r\n                    {data.notificationsEnabled ? \"Enabled\" : \"Disabled\"}\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Next Steps */}\r\n          <Card className=\"bg-gradient-to-r from-primary-600 to-primary-700 text-white\">\r\n            <CardContent className=\"p-6\">\r\n              <h3 className=\"font-semibold text-lg mb-3\">What's Next?</h3>\r\n              <div className=\"space-y-2 text-sm text-primary-100\">\r\n                <p>• Your personalized dashboard is being prepared</p>\r\n                <p>• AI meal recommendations are being generated</p>\r\n                <p>• Daily nutrition goals are being calculated</p>\r\n                <p>• Your nutrition coach is getting ready to assist you</p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <div className=\"text-center pt-4\">\r\n            <Button \r\n              onClick={completeOnboarding}\r\n              size=\"lg\"\r\n              className=\"px-8\"\r\n            >\r\n              Start Tracking\r\n            </Button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"text-center space-y-6 py-12\">\r\n          <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto\">\r\n            <Loader2 className=\"h-8 w-8 text-primary-600 animate-spin\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Setting Up Your Experience</h2>\r\n            <p className=\"text-neutral-600 mt-2\">\r\n              We're personalizing your dashboard and preparing your AI recommendations...\r\n            </p>\r\n          </div>\r\n          <div className=\"max-w-xs mx-auto\">\r\n            <div className=\"h-2 bg-neutral-200 rounded-full\">\r\n              <div className=\"h-2 bg-primary-600 rounded-full animate-pulse\" style={{ width: '70%' }}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import { getAccessToken } from './tokenManager';\r\n\r\n/**\r\n * Makes an authenticated API request with automatic token inclusion\r\n * @param url - The API endpoint URL\r\n * @param options - Fetch options (method, body, headers, etc.)\r\n * @returns Promise<Response>\r\n */\r\nexport async function apiRequest(url: string, options: RequestInit = {}): Promise<Response> {\r\n  const token = getAccessToken();\r\n\r\n  const headers = new Headers(options.headers);\r\n\r\n  // Add Authorization header if token exists\r\n  if (token) {\r\n    headers.set('Authorization', `Bearer ${token}`);\r\n  }\r\n\r\n  // Ensure Content-Type is set for JSON requests and stringify body if needed\r\n  if (options.body && !headers.has('Content-Type')) {\r\n    headers.set('Content-Type', 'application/json');\r\n    if (typeof options.body === 'object' && options.body !== null) {\r\n      options.body = JSON.stringify(options.body);\r\n    }\r\n  }\r\n\r\n  const requestOptions: RequestInit = {\r\n    ...options,\r\n    headers,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, requestOptions);\r\n\r\n    // Handle 401 Unauthorized - token might be expired\r\n    if (response.status === 401) {\r\n      console.warn('API request failed with 401 - token might be expired');\r\n      // You could trigger token refresh here if needed\r\n    }\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.error('API request failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Convenience method for GET requests\r\n */\r\nexport async function apiGet(url: string, options: RequestInit = {}): Promise<Response> {\r\n  return apiRequest(url, { ...options, method: 'GET' });\r\n}\r\n\r\n/**\r\n * Convenience method for POST requests\r\n */\r\nexport async function apiPost(url: string, body?: any, options: RequestInit = {}): Promise<Response> {\r\n  return apiRequest(url, {\r\n    ...options,\r\n    method: 'POST',\r\n    body: body ? JSON.stringify(body) : undefined,\r\n  });\r\n}\r\n\r\n/**\r\n * Convenience method for PUT requests\r\n */\r\nexport async function apiPut(url: string, body?: any, options: RequestInit = {}): Promise<Response> {\r\n  return apiRequest(url, {\r\n    ...options,\r\n    method: 'PUT',\r\n    body: body ? JSON.stringify(body) : undefined,\r\n  });\r\n}\r\n\r\n/**\r\n * Convenience method for DELETE requests\r\n */\r\nexport async function apiDelete(url: string, options: RequestInit = {}): Promise<Response> {\r\n  return apiRequest(url, { ...options, method: 'DELETE' });\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { Bot, Sparkles, Settings, Key, CheckCircle, AlertCircle, Save } from \"lucide-react\";\r\nimport { apiRequest } from \"@/lib/apiRequest\";\r\n\r\ninterface AIConfig {\r\n  id: number;\r\n  provider: string;\r\n  apiKeyEncrypted: string | null;\r\n  hasApiKey: boolean;\r\n  modelName: string;\r\n  temperature: number;\r\n  maxTokens: number;\r\n  promptTemplate: string;\r\n  isActive: boolean;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport default function AIConfigPanel() {\r\n  const [configs, setConfigs] = useState<AIConfig[]>([]);\r\n  const [activeTab, setActiveTab] = useState(\"openai\");\r\n  const [formData, setFormData] = useState<{ [key: string]: any }>({});\r\n  const queryClient = useQueryClient();\r\n  const { toast } = useToast();\r\n\r\n  // Fetch AI configurations\r\n  const { data: aiConfigs, isLoading } = useQuery({\r\n    queryKey: ['ai-configs'],\r\n    queryFn: async () => {\r\n      const response = await apiRequest('/api/admin/ai-config');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch AI configurations');\r\n      }\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Update AI configuration\r\n  const updateConfigMutation = useMutation({\r\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\r\n      const response = await apiRequest(`/api/admin/ai-config/${id}`, {\r\n        method: 'PUT',\r\n        body: data,\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update AI configuration');\r\n      }\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"AI configuration updated successfully\",\r\n      });\r\n      queryClient.invalidateQueries({ queryKey: ['ai-configs'] });\r\n    },\r\n    onError: (error) => {\r\n      toast({\r\n        title: \"Error\",\r\n        description: `Failed to update configuration: ${error instanceof Error ? error.message : 'Unknown error'}`,\r\n        variant: \"destructive\",\r\n      });\r\n    },\r\n  });\r\n\r\n  // Activate AI provider\r\n  const activateProviderMutation = useMutation({\r\n    mutationFn: async (id: number) => {\r\n      const response = await apiRequest(`/api/admin/ai-config/${id}/activate`, {\r\n        method: 'POST',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to activate AI provider');\r\n      }\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"AI provider activated successfully\",\r\n      });\r\n      queryClient.invalidateQueries({ queryKey: ['ai-configs'] });\r\n    },\r\n    onError: (error) => {\r\n      toast({\r\n        title: \"Error\",\r\n        description: `Failed to activate provider: ${error instanceof Error ? error.message : 'Unknown error'}`,\r\n        variant: \"destructive\",\r\n      });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (aiConfigs) {\r\n      setConfigs(aiConfigs);\r\n      // Initialize form data\r\n      const initialFormData: { [key: string]: any } = {};\r\n      aiConfigs.forEach((config: AIConfig) => {\r\n        initialFormData[config.provider] = {\r\n          apiKey: '',\r\n          modelName: config.modelName,\r\n          temperature: config.temperature / 100, // Convert back to decimal\r\n          maxTokens: config.maxTokens,\r\n          promptTemplate: config.promptTemplate,\r\n        };\r\n      });\r\n      setFormData(initialFormData);\r\n    }\r\n  }, [aiConfigs]);\r\n\r\n  const handleFormChange = (provider: string, field: string, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [provider]: {\r\n        ...prev[provider],\r\n        [field]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSaveConfig = async (provider: string) => {\r\n    const config = configs.find(c => c.provider === provider);\r\n    if (!config) return;\r\n\r\n    const data = {\r\n      ...formData[provider],\r\n      temperature: Math.round(formData[provider].temperature * 100), // Convert to integer\r\n    };\r\n\r\n    // Only include API key if it's been changed\r\n    if (data.apiKey && data.apiKey.trim()) {\r\n      data.apiKey = data.apiKey.trim();\r\n    } else {\r\n      delete data.apiKey;\r\n    }\r\n\r\n    await updateConfigMutation.mutateAsync({ id: config.id, data });\r\n  };\r\n\r\n  const handleActivateProvider = async (provider: string) => {\r\n    const config = configs.find(c => c.provider === provider);\r\n    if (!config) return;\r\n\r\n    await activateProviderMutation.mutateAsync(config.id);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <div className=\"text-center\">\r\n          <Bot className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\r\n          <p>Loading AI configurations...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center\">\r\n          <Sparkles className=\"h-6 w-6 text-primary-600\" />\r\n        </div>\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-neutral-900\">AI Configuration</h2>\r\n          <p className=\"text-neutral-600\">Manage AI providers for food image analysis</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Current Status */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Settings className=\"h-5 w-5\" />\r\n            Current Status\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {configs.map((config) => (\r\n              <div key={config.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className={`w-3 h-3 rounded-full ${config.isActive ? 'bg-green-500' : 'bg-gray-300'}`} />\r\n                  <div>\r\n                    <p className=\"font-medium capitalize\">{config.provider}</p>\r\n                    <p className=\"text-sm text-neutral-600\">{config.modelName}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  {config.hasApiKey ? (\r\n                    <Badge variant=\"default\">\r\n                      <Key className=\"h-3 w-3 mr-1\" />\r\n                      Configured\r\n                    </Badge>\r\n                  ) : (\r\n                    <Badge variant=\"outline\">\r\n                      <AlertCircle className=\"h-3 w-3 mr-1\" />\r\n                      No API Key\r\n                    </Badge>\r\n                  )}\r\n                  {config.isActive && (\r\n                    <Badge variant=\"secondary\">\r\n                      <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                      Active\r\n                    </Badge>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Configuration Tabs */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Provider Configuration</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n            <TabsList className=\"grid w-full grid-cols-3\">\r\n              <TabsTrigger value=\"openai\">OpenAI</TabsTrigger>\r\n              <TabsTrigger value=\"gemini\">Google Gemini</TabsTrigger>\r\n              <TabsTrigger value=\"testing\">AI Testing</TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent value=\"openai\" className=\"space-y-4 mt-6\">\r\n              {formData.openai && (\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label htmlFor=\"openai-api-key\">API Key</Label>\r\n                      <Input\r\n                        id=\"openai-api-key\"\r\n                        type=\"password\"\r\n                        placeholder=\"sk-...\"\r\n                        value={formData.openai.apiKey}\r\n                        onChange={(e) => handleFormChange('openai', 'apiKey', e.target.value)}\r\n                      />\r\n                      <p className=\"text-xs text-neutral-500 mt-1\">\r\n                        Leave empty to keep existing key\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"openai-model\">Model Name</Label>\r\n                      <Input\r\n                        id=\"openai-model\"\r\n                        value={formData.openai.modelName}\r\n                        onChange={(e) => handleFormChange('openai', 'modelName', e.target.value)}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"openai-temperature\">Temperature ({formData.openai.temperature})</Label>\r\n                      <Input\r\n                        id=\"openai-temperature\"\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max=\"1\"\r\n                        step=\"0.1\"\r\n                        value={formData.openai.temperature}\r\n                        onChange={(e) => handleFormChange('openai', 'temperature', parseFloat(e.target.value))}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"openai-tokens\">Max Tokens</Label>\r\n                      <Input\r\n                        id=\"openai-tokens\"\r\n                        type=\"number\"\r\n                        value={formData.openai.maxTokens}\r\n                        onChange={(e) => handleFormChange('openai', 'maxTokens', parseInt(e.target.value))}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"openai-prompt\">Prompt Template</Label>\r\n                    <Textarea\r\n                      id=\"openai-prompt\"\r\n                      rows={4}\r\n                      value={formData.openai.promptTemplate}\r\n                      onChange={(e) => handleFormChange('openai', 'promptTemplate', e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <Separator />\r\n\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <Button\r\n                      onClick={() => handleSaveConfig('openai')}\r\n                      disabled={updateConfigMutation.isPending}\r\n                    >\r\n                      <Save className=\"h-4 w-4 mr-2\" />\r\n                      Save Configuration\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      onClick={() => handleActivateProvider('openai')}\r\n                      disabled={activateProviderMutation.isPending}\r\n                    >\r\n                      Set as Active Provider\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"gemini\" className=\"space-y-4 mt-6\">\r\n              {formData.gemini && (\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label htmlFor=\"gemini-api-key\">API Key</Label>\r\n                      <Input\r\n                        id=\"gemini-api-key\"\r\n                        type=\"password\"\r\n                        placeholder=\"AI...\"\r\n                        value={formData.gemini.apiKey}\r\n                        onChange={(e) => handleFormChange('gemini', 'apiKey', e.target.value)}\r\n                      />\r\n                      <p className=\"text-xs text-neutral-500 mt-1\">\r\n                        Get your API key from Google AI Studio\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"gemini-model\">Model Name</Label>\r\n                      <Input\r\n                        id=\"gemini-model\"\r\n                        value={formData.gemini.modelName}\r\n                        onChange={(e) => handleFormChange('gemini', 'modelName', e.target.value)}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"gemini-temperature\">Temperature ({formData.gemini.temperature})</Label>\r\n                      <Input\r\n                        id=\"gemini-temperature\"\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max=\"1\"\r\n                        step=\"0.1\"\r\n                        value={formData.gemini.temperature}\r\n                        onChange={(e) => handleFormChange('gemini', 'temperature', parseFloat(e.target.value))}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"gemini-tokens\">Max Tokens</Label>\r\n                      <Input\r\n                        id=\"gemini-tokens\"\r\n                        type=\"number\"\r\n                        value={formData.gemini.maxTokens}\r\n                        onChange={(e) => handleFormChange('gemini', 'maxTokens', parseInt(e.target.value))}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"gemini-prompt\">Prompt Template</Label>\r\n                    <Textarea\r\n                      id=\"gemini-prompt\"\r\n                      rows={4}\r\n                      value={formData.gemini.promptTemplate}\r\n                      onChange={(e) => handleFormChange('gemini', 'promptTemplate', e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <Separator />\r\n\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <Button\r\n                      onClick={() => handleSaveConfig('gemini')}\r\n                      disabled={updateConfigMutation.isPending}\r\n                    >\r\n                      <Save className=\"h-4 w-4 mr-2\" />\r\n                      Save Configuration\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      onClick={() => handleActivateProvider('gemini')}\r\n                      disabled={activateProviderMutation.isPending}\r\n                    >\r\n                      Set as Active Provider\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </TabsContent>\r\n\r\n            {/* AI Testing Tab */}\r\n            <TabsContent value=\"testing\" className=\"space-y-4 mt-6\">\r\n              <AITestingPanel configs={configs} />\r\n            </TabsContent>\r\n          </Tabs>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n// AI Testing Panel Component\r\nfunction AITestingPanel({ configs }: { configs: AIConfig[] }) {\r\n  const [testImage, setTestImage] = useState<string>(\"\");\r\n  const [testResult, setTestResult] = useState<any>(null);\r\n  const [isTestingAI, setIsTestingAI] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setTestImage(e.target?.result as string);\r\n        setTestResult(null);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const testAIAnalysis = async () => {\r\n    if (!testImage) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please upload an image first\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsTestingAI(true);\r\n    try {\r\n      const response = await fetch('/api/demo-analyze', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ imageData: testImage }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('AI analysis failed');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setTestResult(result);\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"AI analysis completed successfully\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Error testing AI:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"AI analysis failed. Check your configuration.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsTestingAI(false);\r\n    }\r\n  };\r\n\r\n  const activeConfig = configs.find(c => c.isActive);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n          <Bot className=\"h-6 w-6 text-blue-600\" />\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-neutral-900\">AI Testing Panel</h3>\r\n          <p className=\"text-neutral-600\">Test your AI configuration with sample images</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Active Configuration Info */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-base\">Active Configuration</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {activeConfig ? (\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"font-medium\">{activeConfig.provider.toUpperCase()}</p>\r\n                <p className=\"text-sm text-neutral-600\">{activeConfig.modelName}</p>\r\n              </div>\r\n              <Badge variant=\"default\">\r\n                <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                Active\r\n              </Badge>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-4\">\r\n              <AlertCircle className=\"h-8 w-8 text-amber-500 mx-auto mb-2\" />\r\n              <p className=\"text-neutral-600\">No AI provider is currently active</p>\r\n              <p className=\"text-sm text-neutral-500\">Configure and activate a provider to test</p>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Image Upload */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-base\">Upload Test Image</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <Input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageUpload}\r\n            disabled={!activeConfig}\r\n          />\r\n          \r\n          {testImage && (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"max-w-xs mx-auto\">\r\n                <img\r\n                  src={testImage}\r\n                  alt=\"Test food\"\r\n                  className=\"w-full h-auto rounded-lg border\"\r\n                />\r\n              </div>\r\n              \r\n              <Button\r\n                onClick={testAIAnalysis}\r\n                disabled={isTestingAI || !activeConfig}\r\n                className=\"w-full\"\r\n              >\r\n                {isTestingAI ? (\r\n                  <>\r\n                    <Bot className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                    Analyzing...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Sparkles className=\"h-4 w-4 mr-2\" />\r\n                    Test AI Analysis\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Test Results */}\r\n      {testResult && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-base\">Analysis Results</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                  <p className=\"text-sm text-green-600 font-medium\">Calories</p>\r\n                  <p className=\"text-xl font-bold text-green-800\">{testResult.calories}</p>\r\n                </div>\r\n                <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                  <p className=\"text-sm text-blue-600 font-medium\">Protein</p>\r\n                  <p className=\"text-xl font-bold text-blue-800\">{testResult.protein}g</p>\r\n                </div>\r\n                <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                  <p className=\"text-sm text-orange-600 font-medium\">Carbs</p>\r\n                  <p className=\"text-xl font-bold text-orange-800\">{testResult.carbs}g</p>\r\n                </div>\r\n                <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                  <p className=\"text-sm text-purple-600 font-medium\">Fat</p>\r\n                  <p className=\"text-xl font-bold text-purple-800\">{testResult.fat}g</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <Label className=\"font-medium\">Food Identified:</Label>\r\n                <p className=\"text-lg\">{testResult.foodName}</p>\r\n              </div>\r\n              \r\n              {testResult.fiber && (\r\n                <div>\r\n                  <Label className=\"font-medium\">Fiber:</Label>\r\n                  <p>{testResult.fiber}g</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","import { useState, useEffect } from \"react\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { apiRequest } from \"@/lib/apiRequest\";\r\nimport { \r\n  Activity, \r\n  Server, \r\n  Database, \r\n  Cpu, \r\n  HardDrive, \r\n \r\n  Network, \r\n  Clock,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  XCircle,\r\n  Zap,\r\n  Settings,\r\n  RefreshCw,\r\n  Download,\r\n  Upload,\r\n  Users,\r\n  Bot,\r\n  DollarSign,\r\n  ShieldCheck,\r\n  Gauge,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  BarChart3,\r\n  PieChart,\r\n  LineChart\r\n} from \"lucide-react\";\r\n\r\ninterface SystemMetrics {\r\n  cpu: {\r\n    usage: number;\r\n    cores: number;\r\n    frequency: number;\r\n    temperature: number;\r\n    processes: number;\r\n  };\r\n  memory: {\r\n    used: number;\r\n    total: number;\r\n    available: number;\r\n    cached: number;\r\n    buffers: number;\r\n  };\r\n  disk: {\r\n    used: number;\r\n    total: number;\r\n    available: number;\r\n    readSpeed: number;\r\n    writeSpeed: number;\r\n  };\r\n  network: {\r\n    bytesIn: number;\r\n    bytesOut: number;\r\n    packetsIn: number;\r\n    packetsOut: number;\r\n    connections: number;\r\n  };\r\n  database: {\r\n    connections: number;\r\n    activeQueries: number;\r\n    queryTime: number;\r\n    cacheHitRate: number;\r\n    indexUsage: number;\r\n  };\r\n  application: {\r\n    uptime: number;\r\n    responseTime: number;\r\n    requestsPerSecond: number;\r\n    errorRate: number;\r\n    userSessions: number;\r\n  };\r\n  ai: {\r\n    apiCalls: number;\r\n    successRate: number;\r\n    averageLatency: number;\r\n    costPerHour: number;\r\n    queueLength: number;\r\n  };\r\n}\r\n\r\ninterface ServiceStatus {\r\n  name: string;\r\n  status: 'healthy' | 'warning' | 'critical' | 'offline';\r\n  uptime: number;\r\n  lastCheck: string;\r\n  responseTime: number;\r\n  dependencies: string[];\r\n  endpoints: {\r\n    name: string;\r\n    url: string;\r\n    status: number;\r\n    responseTime: number;\r\n  }[];\r\n}\r\n\r\ninterface SystemAlert {\r\n  id: string;\r\n  type: 'performance' | 'security' | 'error' | 'warning';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  title: string;\r\n  message: string;\r\n  timestamp: string;\r\n  resolved: boolean;\r\n  resolvedBy?: string;\r\n  resolvedAt?: string;\r\n}\r\n\r\ninterface LogEntry {\r\n  id: string;\r\n  timestamp: string;\r\n  level: 'debug' | 'info' | 'warn' | 'error' | 'fatal';\r\n  service: string;\r\n  message: string;\r\n  metadata?: any;\r\n}\r\n\r\nexport default function EnhancedSystemMonitor() {\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n  const [autoRefresh, setAutoRefresh] = useState(true);\r\n  const [refreshInterval, setRefreshInterval] = useState(5000);\r\n  const [alertFilters, setAlertFilters] = useState({\r\n    type: 'all',\r\n    severity: 'all',\r\n    resolved: 'all'\r\n  });\r\n\r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n\r\n  // Fetch system metrics with real-time updates\r\n  const { data: systemMetrics, isLoading } = useQuery<SystemMetrics>({\r\n    queryKey: ['system-metrics'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/system/metrics/detailed');\r\n      if (!response.ok) throw new Error('Failed to fetch system metrics');\r\n      return response.json();\r\n    },\r\n    refetchInterval: autoRefresh ? refreshInterval : false,\r\n    staleTime: 1000,\r\n  });\r\n\r\n  // Fetch service status\r\n  const { data: serviceStatus } = useQuery<ServiceStatus[]>({\r\n    queryKey: ['service-status'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/system/services/status');\r\n      if (!response.ok) throw new Error('Failed to fetch service status');\r\n      return response.json();\r\n    },\r\n    refetchInterval: autoRefresh ? 10000 : false,\r\n  });\r\n\r\n  // Fetch system alerts\r\n  const { data: systemAlerts } = useQuery<SystemAlert[]>({\r\n    queryKey: ['system-alerts', alertFilters],\r\n    queryFn: async () => {\r\n      const params = new URLSearchParams(alertFilters as any);\r\n      const response = await fetch(`/api/admin/system/alerts?${params}`);\r\n      if (!response.ok) throw new Error('Failed to fetch system alerts');\r\n      return response.json();\r\n    },\r\n    refetchInterval: autoRefresh ? 15000 : false,\r\n  });\r\n\r\n  // Fetch system logs\r\n  const { data: systemLogs } = useQuery<LogEntry[]>({\r\n    queryKey: ['system-logs'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/system/logs?limit=100');\r\n      if (!response.ok) throw new Error('Failed to fetch system logs');\r\n      return response.json();\r\n    },\r\n    refetchInterval: autoRefresh ? 30000 : false,\r\n  });\r\n\r\n  // Restart service mutation\r\n  const restartServiceMutation = useMutation({\r\n    mutationFn: async (serviceName: string) => {\r\n      const response = await apiRequest(`/api/admin/system/services/${serviceName}/restart`, {\r\n        method: 'POST',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to restart service');\r\n      return response.json();\r\n    },\r\n    onSuccess: (data, serviceName) => {\r\n      toast({ title: `Service ${serviceName} restarted successfully` });\r\n      queryClient.invalidateQueries({ queryKey: ['service-status'] });\r\n    },\r\n    onError: (error: Error, serviceName) => {\r\n      toast({ \r\n        title: `Failed to restart ${serviceName}`, \r\n        description: error.message, \r\n        variant: \"destructive\" \r\n      });\r\n    },\r\n  });\r\n\r\n  // Resolve alert mutation\r\n  const resolveAlertMutation = useMutation({\r\n    mutationFn: async (alertId: string) => {\r\n      const response = await apiRequest(`/api/admin/system/alerts/${alertId}/resolve`, {\r\n        method: 'POST',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to resolve alert');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Alert resolved successfully\" });\r\n      queryClient.invalidateQueries({ queryKey: ['system-alerts'] });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Failed to resolve alert\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      healthy: 'text-green-600 bg-green-100',\r\n      warning: 'text-yellow-600 bg-yellow-100',\r\n      critical: 'text-red-600 bg-red-100',\r\n      offline: 'text-gray-600 bg-gray-100'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'text-gray-600 bg-gray-100';\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    const colors = {\r\n      low: 'border-l-green-500 bg-green-50',\r\n      medium: 'border-l-yellow-500 bg-yellow-50',\r\n      high: 'border-l-orange-500 bg-orange-50',\r\n      critical: 'border-l-red-500 bg-red-50'\r\n    };\r\n    return colors[severity as keyof typeof colors] || 'border-l-gray-500 bg-gray-50';\r\n  };\r\n\r\n  const getLogLevelColor = (level: string) => {\r\n    const colors = {\r\n      debug: 'text-gray-600',\r\n      info: 'text-blue-600',\r\n      warn: 'text-yellow-600',\r\n      error: 'text-red-600',\r\n      fatal: 'text-red-800 font-bold'\r\n    };\r\n    return colors[level as keyof typeof colors] || 'text-gray-600';\r\n  };\r\n\r\n  const formatBytes = (bytes: number) => {\r\n    const units = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n    let unitIndex = 0;\r\n    let value = bytes;\r\n    \r\n    while (value >= 1024 && unitIndex < units.length - 1) {\r\n      value /= 1024;\r\n      unitIndex++;\r\n    }\r\n    \r\n    return `${value.toFixed(1)} ${units[unitIndex]}`;\r\n  };\r\n\r\n  const formatUptime = (seconds: number) => {\r\n    const days = Math.floor(seconds / 86400);\r\n    const hours = Math.floor((seconds % 86400) / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    \r\n    if (days > 0) return `${days}d ${hours}h ${minutes}m`;\r\n    if (hours > 0) return `${hours}h ${minutes}m`;\r\n    return `${minutes}m`;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <div className=\"text-center\">\r\n          <Activity className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\r\n          <p>Loading system metrics...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n            <Gauge className=\"h-6 w-6 text-blue-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Enhanced System Monitor</h2>\r\n            <p className=\"text-neutral-600\">Real-time system performance and health monitoring</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Label htmlFor=\"auto-refresh\">Auto Refresh</Label>\r\n            <Switch\r\n              id=\"auto-refresh\"\r\n              checked={autoRefresh}\r\n              onCheckedChange={setAutoRefresh}\r\n            />\r\n          </div>\r\n          {autoRefresh && (\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Label htmlFor=\"refresh-interval\">Interval (ms)</Label>\r\n              <Input\r\n                id=\"refresh-interval\"\r\n                type=\"number\"\r\n                value={refreshInterval}\r\n                onChange={(e) => setRefreshInterval(Number(e.target.value))}\r\n                className=\"w-20\"\r\n                min=\"1000\"\r\n                max=\"60000\"\r\n                step=\"1000\"\r\n              />\r\n            </div>\r\n          )}\r\n          <Button onClick={() => queryClient.invalidateQueries()} variant=\"outline\" size=\"sm\">\r\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n            Refresh All\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Critical Alerts Banner */}\r\n      {(systemAlerts?.filter(alert => alert.severity === 'critical' && !alert.resolved).length || 0) > 0 && (\r\n        <Alert className=\"border-red-200 bg-red-50\">\r\n          <AlertTriangle className=\"h-4 w-4\" />\r\n          <AlertDescription className=\"text-red-800\">\r\n            <strong>Critical System Alerts:</strong> {(systemAlerts || []).filter(alert => alert.severity === 'critical' && !alert.resolved).length} critical issues require immediate attention.\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList className=\"grid grid-cols-6 w-full\">\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"performance\">Performance</TabsTrigger>\r\n          <TabsTrigger value=\"services\">Services</TabsTrigger>\r\n          <TabsTrigger value=\"alerts\">Alerts</TabsTrigger>\r\n          <TabsTrigger value=\"logs\">Logs</TabsTrigger>\r\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {systemMetrics && (\r\n            <>\r\n              {/* Quick Stats */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n                <Card>\r\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">System Uptime</CardTitle>\r\n                    <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-2xl font-bold\">{formatUptime(systemMetrics.application.uptime)}</div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      {systemMetrics.application.uptime > 604800 ? 'Excellent' : 'Good'} uptime\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Response Time</CardTitle>\r\n                    <Zap className=\"h-4 w-4 text-muted-foreground\" />\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-2xl font-bold\">{systemMetrics.application.responseTime}ms</div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Average response time\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\r\n                    <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-2xl font-bold\">{systemMetrics.application.userSessions}</div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Current active sessions\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">AI Cost/Hour</CardTitle>\r\n                    <Bot className=\"h-4 w-4 text-muted-foreground\" />\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-2xl font-bold\">${systemMetrics.ai.costPerHour.toFixed(2)}</div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Current AI usage cost\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n\r\n              {/* Resource Usage */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Cpu className=\"h-5 w-5\" />\r\n                      CPU & Memory Usage\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div>\r\n                      <div className=\"flex justify-between text-sm mb-2\">\r\n                        <span>CPU Usage</span>\r\n                        <span className=\"font-medium\">{systemMetrics.cpu.usage}%</span>\r\n                      </div>\r\n                      <Progress value={systemMetrics.cpu.usage} className=\"h-2\" />\r\n                      <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\r\n                        <span>{systemMetrics.cpu.cores} cores @ {systemMetrics.cpu.frequency}GHz</span>\r\n                        <span>{systemMetrics.cpu.temperature}°C</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"flex justify-between text-sm mb-2\">\r\n                        <span>Memory Usage</span>\r\n                        <span className=\"font-medium\">\r\n                          {formatBytes(systemMetrics.memory.used)} / {formatBytes(systemMetrics.memory.total)}\r\n                        </span>\r\n                      </div>\r\n                      <Progress \r\n                        value={(systemMetrics.memory.used / systemMetrics.memory.total) * 100} \r\n                        className=\"h-2\" \r\n                      />\r\n                      <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\r\n                        <span>Available: {formatBytes(systemMetrics.memory.available)}</span>\r\n                        <span>Cached: {formatBytes(systemMetrics.memory.cached)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <HardDrive className=\"h-5 w-5\" />\r\n                      Storage & Network\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div>\r\n                      <div className=\"flex justify-between text-sm mb-2\">\r\n                        <span>Disk Usage</span>\r\n                        <span className=\"font-medium\">\r\n                          {formatBytes(systemMetrics.disk.used)} / {formatBytes(systemMetrics.disk.total)}\r\n                        </span>\r\n                      </div>\r\n                      <Progress \r\n                        value={(systemMetrics.disk.used / systemMetrics.disk.total) * 100} \r\n                        className=\"h-2\" \r\n                      />\r\n                      <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\r\n                        <span>Read: {formatBytes(systemMetrics.disk.readSpeed)}/s</span>\r\n                        <span>Write: {formatBytes(systemMetrics.disk.writeSpeed)}/s</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <div className=\"flex justify-between text-sm mb-2\">\r\n                        <span>Network Traffic</span>\r\n                        <span className=\"font-medium\">{systemMetrics.network.connections} connections</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between text-xs text-muted-foreground\">\r\n                        <span className=\"flex items-center\">\r\n                          <Download className=\"h-3 w-3 mr-1\" />\r\n                          {formatBytes(systemMetrics.network.bytesIn)}/s\r\n                        </span>\r\n                        <span className=\"flex items-center\">\r\n                          <Upload className=\"h-3 w-3 mr-1\" />\r\n                          {formatBytes(systemMetrics.network.bytesOut)}/s\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n\r\n              {/* Database & AI Performance */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Database className=\"h-5 w-5\" />\r\n                      Database Performance\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm\">Active Connections</span>\r\n                      <span className=\"font-medium\">{systemMetrics.database.connections}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm\">Active Queries</span>\r\n                      <span className=\"font-medium\">{systemMetrics.database.activeQueries}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm\">Avg Query Time</span>\r\n                      <span className=\"font-medium\">{systemMetrics.database.queryTime}ms</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm\">Cache Hit Rate</span>\r\n                      <span className=\"font-medium\">{systemMetrics.database.cacheHitRate}%</span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Bot className=\"h-5 w-5\" />\r\n                      AI Service Performance\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm\">API Calls (Last Hour)</span>\r\n                      <span className=\"font-medium\">{systemMetrics.ai.apiCalls}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm\">Success Rate</span>\r\n                      <span className=\"font-medium\">{systemMetrics.ai.successRate}%</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm\">Average Latency</span>\r\n                      <span className=\"font-medium\">{systemMetrics.ai.averageLatency}ms</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm\">Queue Length</span>\r\n                      <span className=\"font-medium\">{systemMetrics.ai.queueLength}</span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </>\r\n          )}\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"services\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Server className=\"h-5 w-5\" />\r\n                Service Status\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {serviceStatus?.map((service) => (\r\n                  <div key={service.name} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className={`w-3 h-3 rounded-full ${service.status === 'healthy' ? 'bg-green-500' : \r\n                        service.status === 'warning' ? 'bg-yellow-500' : \r\n                        service.status === 'critical' ? 'bg-red-500' : 'bg-gray-500'}`} />\r\n                      <div>\r\n                        <h3 className=\"font-medium\">{service.name}</h3>\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                          Uptime: {formatUptime(service.uptime)} • Response: {service.responseTime}ms\r\n                        </p>\r\n                        <div className=\"flex items-center space-x-2 mt-1\">\r\n                          {service.dependencies.map((dep) => (\r\n                            <Badge key={dep} variant=\"outline\" className=\"text-xs\">\r\n                              {dep}\r\n                            </Badge>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Badge className={getStatusColor(service.status)}>\r\n                        {service.status}\r\n                      </Badge>\r\n                      {service.status !== 'healthy' && (\r\n                        <Button\r\n                          size=\"sm\"\r\n                          onClick={() => restartServiceMutation.mutate(service.name)}\r\n                          disabled={restartServiceMutation.isPending}\r\n                        >\r\n                          Restart\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"alerts\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <AlertTriangle className=\"h-5 w-5\" />\r\n                  System Alerts\r\n                </CardTitle>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <select\r\n                    value={alertFilters.severity}\r\n                    onChange={(e) => setAlertFilters({...alertFilters, severity: e.target.value})}\r\n                    className=\"text-sm border rounded px-2 py-1\"\r\n                  >\r\n                    <option value=\"all\">All Severities</option>\r\n                    <option value=\"critical\">Critical</option>\r\n                    <option value=\"high\">High</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"low\">Low</option>\r\n                  </select>\r\n                  <select\r\n                    value={alertFilters.resolved}\r\n                    onChange={(e) => setAlertFilters({...alertFilters, resolved: e.target.value})}\r\n                    className=\"text-sm border rounded px-2 py-1\"\r\n                  >\r\n                    <option value=\"all\">All Alerts</option>\r\n                    <option value=\"false\">Unresolved</option>\r\n                    <option value=\"true\">Resolved</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96\">\r\n                <div className=\"space-y-3\">\r\n                  {systemAlerts?.map((alert) => (\r\n                    <div key={alert.id} className={`p-4 rounded-lg border-l-4 ${getSeverityColor(alert.severity)}`}>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"flex items-center space-x-2 mb-1\">\r\n                            <h3 className=\"font-medium\">{alert.title}</h3>\r\n                            <Badge variant={alert.severity === 'critical' ? 'destructive' : 'secondary'}>\r\n                              {alert.severity}\r\n                            </Badge>\r\n                            {alert.resolved && (\r\n                              <Badge variant=\"default\">\r\n                                <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                                Resolved\r\n                              </Badge>\r\n                            )}\r\n                          </div>\r\n                          <p className=\"text-sm text-muted-foreground mb-2\">{alert.message}</p>\r\n                          <p className=\"text-xs text-muted-foreground\">\r\n                            {new Date(alert.timestamp).toLocaleString()}\r\n                            {alert.resolvedBy && (\r\n                              <span> • Resolved by {alert.resolvedBy} at {new Date(alert.resolvedAt!).toLocaleString()}</span>\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                        {!alert.resolved && (\r\n                          <Button\r\n                            size=\"sm\"\r\n                            onClick={() => resolveAlertMutation.mutate(alert.id)}\r\n                            disabled={resolveAlertMutation.isPending}\r\n                          >\r\n                            Resolve\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  \r\n                  {(!systemAlerts || systemAlerts.length === 0) && (\r\n                    <div className=\"text-center py-8 text-muted-foreground\">\r\n                      <CheckCircle className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                      <p>No system alerts match the current filters.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"logs\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Activity className=\"h-5 w-5\" />\r\n                System Logs\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96\">\r\n                <div className=\"space-y-2\">\r\n                  {systemLogs?.map((log) => (\r\n                    <div key={log.id} className=\"p-3 border rounded-lg\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <Badge variant=\"outline\" className={getLogLevelColor(log.level)}>\r\n                            {log.level.toUpperCase()}\r\n                          </Badge>\r\n                          <span className=\"text-sm font-medium\">{log.service}</span>\r\n                          <span className=\"text-xs text-muted-foreground\">\r\n                            {new Date(log.timestamp).toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"text-sm mt-1\">{log.message}</p>\r\n                      {log.metadata && (\r\n                        <pre className=\"text-xs bg-gray-100 p-2 rounded mt-2 overflow-auto\">\r\n                          {JSON.stringify(log.metadata, null, 2)}\r\n                        </pre>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"analytics\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <BarChart3 className=\"h-5 w-5\" />\r\n                  Performance Trends\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Response Time Trend</span>\r\n                    <div className=\"flex items-center\">\r\n                      <TrendingUp className=\"h-4 w-4 text-green-500 mr-1\" />\r\n                      <span className=\"text-sm text-green-600\">Improving</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Error Rate Trend</span>\r\n                    <div className=\"flex items-center\">\r\n                      <TrendingDown className=\"h-4 w-4 text-green-500 mr-1\" />\r\n                      <span className=\"text-sm text-green-600\">Decreasing</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Memory Usage Trend</span>\r\n                    <div className=\"flex items-center\">\r\n                      <TrendingUp className=\"h-4 w-4 text-yellow-500 mr-1\" />\r\n                      <span className=\"text-sm text-yellow-600\">Increasing</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <PieChart className=\"h-5 w-5\" />\r\n                  Resource Distribution\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm\">CPU Usage</span>\r\n                    <span className=\"font-medium\">{systemMetrics?.cpu.usage}%</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm\">Memory Usage</span>\r\n                    <span className=\"font-medium\">\r\n                      {systemMetrics ? Math.round((systemMetrics.memory.used / systemMetrics.memory.total) * 100) : 0}%\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm\">Disk Usage</span>\r\n                    <span className=\"font-medium\">\r\n                      {systemMetrics ? Math.round((systemMetrics.disk.used / systemMetrics.disk.total) * 100) : 0}%\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport {\r\n  User,\r\n  Users,\r\n  Search,\r\n  Filter,\r\n  UserPlus,\r\n  Mail,\r\n  Shield,\r\n  Crown,\r\n  Calendar,\r\n  Activity,\r\n  Edit3,\r\n  Trash2,\r\n  MoreHorizontal,\r\n  Download,\r\n  Upload\r\n} from \"lucide-react\";\r\nimport { User as UserType } from \"@shared/schema\";\r\nimport { apiRequest } from \"@/lib/apiRequest\";\r\n\r\ninterface BulkOperationRequest {\r\n  operation: string;\r\n  userIds: number[];\r\n  data?: any;\r\n}\r\n\r\ninterface UserStats {\r\n  totalMeals: number;\r\n  lastLoginAt: string;\r\n  subscriptionStatus: string;\r\n  totalSpent: number;\r\n  registrationDate: string;\r\n}\r\n\r\ninterface ExtendedUser extends UserType {\r\n  stats?: UserStats;\r\n}\r\n\r\nexport default function AdvancedUserManagement() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filterRole, setFilterRole] = useState<string>(\"all\");\r\n  const [filterPremium, setFilterPremium] = useState<string>(\"all\");\r\n  const [selectedUser, setSelectedUser] = useState<ExtendedUser | null>(null);\r\n  const [editUser, setEditUser] = useState<ExtendedUser | null>(null);\r\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\r\n  const [showBulkActions, setShowBulkActions] = useState(false);\r\n  const [selectedUsers, setSelectedUsers] = useState<number[]>([]);\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n  \r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n\r\n  // Fetch users with advanced filtering\r\n  const { data: users = [], isLoading, refetch } = useQuery<ExtendedUser[]>({\r\n    queryKey: ['admin-users', searchTerm, filterRole, filterPremium],\r\n    queryFn: async () => {\r\n      const params = new URLSearchParams();\r\n      if (searchTerm) params.append('search', searchTerm);\r\n      if (filterRole !== 'all') params.append('role', filterRole);\r\n      if (filterPremium !== 'all') params.append('premium', filterPremium);\r\n\r\n      const response = await apiRequest(`/api/admin/users/advanced?${params}`);\r\n      if (!response.ok) throw new Error('Failed to fetch users');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // User statistics\r\n  const { data: userStats } = useQuery({\r\n    queryKey: ['admin-user-stats'],\r\n    queryFn: async () => {\r\n      const response = await apiRequest('/api/admin/users/stats');\r\n      if (!response.ok) throw new Error('Failed to fetch user stats');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Create user mutation\r\n  const createUserMutation = useMutation({\r\n    mutationFn: async (userData: any) => {\r\n      const response = await apiRequest('/api/admin/users', {\r\n        method: 'POST',\r\n        body: userData,\r\n      });\r\n      if (!response.ok) throw new Error('Failed to create user');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"User created successfully\" });\r\n      setShowCreateDialog(false);\r\n      refetch();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error creating user\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Update user mutation\r\n  const updateUserMutation = useMutation({\r\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\r\n      const response = await apiRequest(`/api/admin/users/${id}`, {\r\n        method: 'PUT',\r\n        body: data,\r\n      });\r\n      if (!response.ok) throw new Error('Failed to update user');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"User updated successfully\" });\r\n      setEditUser(null);\r\n      refetch();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error updating user\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Bulk operations mutation\r\n  const bulkOperationMutation = useMutation({\r\n    mutationFn: async ({ operation, userIds, data }: BulkOperationRequest) => {\r\n      const response = await apiRequest('/api/admin/users/bulk', {\r\n        method: 'POST',\r\n        body: { operation, userIds, data } as any,\r\n      });\r\n      if (!response.ok) throw new Error('Failed to perform bulk operation');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Bulk operation completed successfully\" });\r\n      setSelectedUsers([]);\r\n      refetch();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error performing bulk operation\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  const handleUserSelect = (userId: number, checked: boolean) => {\r\n    if (checked) {\r\n      setSelectedUsers([...selectedUsers, userId]);\r\n    } else {\r\n      setSelectedUsers(selectedUsers.filter(id => id !== userId));\r\n    }\r\n  };\r\n\r\n  const handleSelectAll = (checked: boolean) => {\r\n    if (checked) {\r\n      setSelectedUsers(users.map(user => user.id));\r\n    } else {\r\n      setSelectedUsers([]);\r\n    }\r\n  };\r\n\r\n  const exportUsers = () => {\r\n    // Create CSV export\r\n    const csvContent = [\r\n      ['ID', 'Username', 'Email', 'Role', 'Premium', 'Registration Date'],\r\n      ...users.map(user => [\r\n        user.id,\r\n        user.username,\r\n        user.email || '',\r\n        user.role,\r\n        user.isPremium ? 'Yes' : 'No',\r\n        new Date(user.stats?.registrationDate || '').toLocaleDateString()\r\n      ])\r\n    ].map(row => row.join(',')).join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'users-export.csv';\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const filteredUsers = users.filter(user => {\r\n    const matchesSearch = user.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         (user.email || '').toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesSearch;\r\n  });\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n            <Users className=\"h-6 w-6 text-blue-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Advanced User Management</h2>\r\n            <p className=\"text-neutral-600\">Comprehensive user administration and analytics</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button onClick={exportUsers} variant=\"outline\">\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n          <Button onClick={() => setShowCreateDialog(true)}>\r\n            <UserPlus className=\"h-4 w-4 mr-2\" />\r\n            Add User\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"users\">User Management</TabsTrigger>\r\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n          <TabsTrigger value=\"bulk\">Bulk Operations</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {/* User Statistics Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\r\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{userStats?.totalUsers || 0}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  +{userStats?.newUsersThisWeek || 0} this week\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Premium Users</CardTitle>\r\n                <Crown className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{userStats?.premiumUsers || 0}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  {((userStats?.premiumUsers || 0) / (userStats?.totalUsers || 1) * 100).toFixed(1)}% conversion\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Active Today</CardTitle>\r\n                <Activity className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{userStats?.activeToday || 0}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  {((userStats?.activeToday || 0) / (userStats?.totalUsers || 1) * 100).toFixed(1)}% engagement\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Avg. Revenue</CardTitle>\r\n                <Crown className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">${userStats?.avgRevenue || 0}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Per premium user\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"users\" className=\"space-y-6\">\r\n          {/* Filters and Search */}\r\n          <Card>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"flex flex-col md:flex-row gap-4\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"relative\">\r\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n                    <Input\r\n                      placeholder=\"Search users by username or email...\"\r\n                      value={searchTerm}\r\n                      onChange={(e) => setSearchTerm(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Select value={filterRole} onValueChange={setFilterRole}>\r\n                  <SelectTrigger className=\"w-48\">\r\n                    <SelectValue placeholder=\"Filter by role\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"all\">All Roles</SelectItem>\r\n                    <SelectItem value=\"user\">User</SelectItem>\r\n                    <SelectItem value=\"admin\">Admin</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n                <Select value={filterPremium} onValueChange={setFilterPremium}>\r\n                  <SelectTrigger className=\"w-48\">\r\n                    <SelectValue placeholder=\"Filter by subscription\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"all\">All Users</SelectItem>\r\n                    <SelectItem value=\"premium\">Premium Only</SelectItem>\r\n                    <SelectItem value=\"free\">Free Only</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Users Table */}\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle>Users ({filteredUsers.length})</CardTitle>\r\n                {selectedUsers.length > 0 && (\r\n                  <Button \r\n                    variant=\"outline\" \r\n                    onClick={() => setShowBulkActions(true)}\r\n                  >\r\n                    Bulk Actions ({selectedUsers.length})\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96\">\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead className=\"w-12\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={selectedUsers.length === filteredUsers.length && filteredUsers.length > 0}\r\n                          onChange={(e) => handleSelectAll(e.target.checked)}\r\n                        />\r\n                      </TableHead>\r\n                      <TableHead>User</TableHead>\r\n                      <TableHead>Email</TableHead>\r\n                      <TableHead>Role</TableHead>\r\n                      <TableHead>Status</TableHead>\r\n                      <TableHead>Last Active</TableHead>\r\n                      <TableHead>Actions</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {filteredUsers.map((user) => (\r\n                      <TableRow key={user.id}>\r\n                        <TableCell>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={selectedUsers.includes(user.id)}\r\n                            onChange={(e) => handleUserSelect(user.id, e.target.checked)}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-sm font-medium\">\r\n                              {user.username.charAt(0).toUpperCase()}\r\n                            </div>\r\n                            <div>\r\n                              <p className=\"font-medium\">{user.username}</p>\r\n                              <p className=\"text-sm text-muted-foreground\">ID: {user.id}</p>\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{user.email || 'N/A'}</TableCell>\r\n                        <TableCell>\r\n                          <Badge variant={user.role === 'admin' ? 'default' : 'secondary'}>\r\n                            {user.role}\r\n                          </Badge>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            {user.isPremium && (\r\n                              <Badge variant=\"default\">\r\n                                <Crown className=\"h-3 w-3 mr-1\" />\r\n                                Premium\r\n                              </Badge>\r\n                            )}\r\n                            {user.onboardingCompleted && (\r\n                              <Badge variant=\"outline\">Onboarded</Badge>\r\n                            )}\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <p className=\"text-sm\">\r\n                            {user.stats?.lastLoginAt ? \r\n                              new Date(user.stats.lastLoginAt).toLocaleDateString() : \r\n                              'Never'\r\n                            }\r\n                          </p>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              size=\"sm\"\r\n                              onClick={() => setSelectedUser(user)}\r\n                            >\r\n                              View\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              size=\"sm\"\r\n                              onClick={() => setEditUser(user)}\r\n                            >\r\n                              <Edit3 className=\"h-3 w-3\" />\r\n                            </Button>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"analytics\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>User Growth</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">This Month</span>\r\n                    <Badge variant=\"default\">+{userStats?.newUsersThisMonth || 0}</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Last Month</span>\r\n                    <Badge variant=\"outline\">+{userStats?.newUsersLastMonth || 0}</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Growth Rate</span>\r\n                    <Badge variant=\"secondary\">\r\n                      {userStats?.growthRate ? `${userStats.growthRate}%` : 'N/A'}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Engagement Metrics</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Daily Active Users</span>\r\n                    <Badge variant=\"default\">{userStats?.dailyActiveUsers || 0}</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Weekly Active Users</span>\r\n                    <Badge variant=\"default\">{userStats?.weeklyActiveUsers || 0}</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Avg. Session Duration</span>\r\n                    <Badge variant=\"outline\">{userStats?.avgSessionDuration || 'N/A'}</Badge>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"bulk\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Bulk Operations</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Select users from the Users tab to perform bulk operations.\r\n              </p>\r\n              \r\n              {selectedUsers.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  <p className=\"font-medium\">{selectedUsers.length} users selected</p>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      onClick={() => bulkOperationMutation.mutate({ \r\n                        operation: 'make_premium', \r\n                        userIds: selectedUsers \r\n                      })}\r\n                      disabled={bulkOperationMutation.isPending}\r\n                    >\r\n                      Make Premium\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                      variant=\"outline\"\r\n                      onClick={() => bulkOperationMutation.mutate({ \r\n                        operation: 'remove_premium', \r\n                        userIds: selectedUsers \r\n                      })}\r\n                      disabled={bulkOperationMutation.isPending}\r\n                    >\r\n                      Remove Premium\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                      variant=\"outline\"\r\n                      onClick={() => bulkOperationMutation.mutate({ \r\n                        operation: 'send_email', \r\n                        userIds: selectedUsers,\r\n                        data: { subject: 'System Notification', message: 'Important update...' }\r\n                      })}\r\n                      disabled={bulkOperationMutation.isPending}\r\n                    >\r\n                      <Mail className=\"h-4 w-4 mr-2\" />\r\n                      Send Email\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-muted-foreground\">No users selected for bulk operations.</p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* User Details Dialog */}\r\n      <Dialog open={!!selectedUser} onOpenChange={() => setSelectedUser(null)}>\r\n        <DialogContent className=\"max-w-2xl\">\r\n          <DialogHeader>\r\n            <DialogTitle>User Details</DialogTitle>\r\n          </DialogHeader>\r\n          {selectedUser && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Username</Label>\r\n                  <p className=\"text-sm\">{selectedUser.username}</p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Email</Label>\r\n                  <p className=\"text-sm\">{selectedUser.email || 'N/A'}</p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Role</Label>\r\n                  <p className=\"text-sm\">{selectedUser.role}</p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Status</Label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {selectedUser.isPremium && <Badge>Premium</Badge>}\r\n                    <Badge variant=\"outline\">\r\n                      {selectedUser.onboardingCompleted ? 'Onboarded' : 'Pending'}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {selectedUser.stats && (\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Statistics</Label>\r\n                  <div className=\"grid grid-cols-2 gap-4 mt-2\">\r\n                    <div>\r\n                      <p className=\"text-xs text-muted-foreground\">Total Meals</p>\r\n                      <p className=\"text-sm font-medium\">{selectedUser.stats.totalMeals}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-xs text-muted-foreground\">Last Login</p>\r\n                      <p className=\"text-sm font-medium\">\r\n                        {new Date(selectedUser.stats.lastLoginAt).toLocaleDateString()}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Edit User Dialog */}\r\n      <Dialog open={!!editUser} onOpenChange={() => setEditUser(null)}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Edit User</DialogTitle>\r\n          </DialogHeader>\r\n          {editUser && (\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <Label htmlFor=\"edit-username\">Username</Label>\r\n                <Input\r\n                  id=\"edit-username\"\r\n                  value={editUser.username}\r\n                  onChange={(e) => setEditUser({ ...editUser, username: e.target.value })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"edit-email\">Email</Label>\r\n                <Input\r\n                  id=\"edit-email\"\r\n                  value={editUser.email || ''}\r\n                  onChange={(e) => setEditUser({ ...editUser, email: e.target.value })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"edit-role\">Role</Label>\r\n                <Select\r\n                  value={editUser.role || 'user'}\r\n                  onValueChange={(value) => setEditUser({ ...editUser, role: value })}\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"user\">User</SelectItem>\r\n                    <SelectItem value=\"admin\">Admin</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Switch\r\n                  checked={!!editUser.isPremium}\r\n                  onCheckedChange={(checked) => setEditUser({ ...editUser, isPremium: checked })}\r\n                />\r\n                <Label>Premium User</Label>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setEditUser(null)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => editUser && updateUserMutation.mutate({ id: editUser.id, data: editUser })}\r\n              disabled={updateUserMutation.isPending}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Create User Dialog */}\r\n      <Dialog open={showCreateDialog} onOpenChange={setShowCreateDialog}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Create New User</DialogTitle>\r\n          </DialogHeader>\r\n          <CreateUserForm onSubmit={(data) => createUserMutation.mutate(data)} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Create User Form Component\r\nfunction CreateUserForm({ onSubmit }: { onSubmit: (data: any) => void }) {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    role: 'user',\r\n    isPremium: false,\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div>\r\n          <Label htmlFor=\"firstName\">First Name</Label>\r\n          <Input\r\n            id=\"firstName\"\r\n            value={formData.firstName}\r\n            onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <Label htmlFor=\"lastName\">Last Name</Label>\r\n          <Input\r\n            id=\"lastName\"\r\n            value={formData.lastName}\r\n            onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div>\r\n        <Label htmlFor=\"username\">Username</Label>\r\n        <Input\r\n          id=\"username\"\r\n          value={formData.username}\r\n          onChange={(e) => setFormData({ ...formData, username: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div>\r\n        <Label htmlFor=\"email\">Email</Label>\r\n        <Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div>\r\n        <Label htmlFor=\"password\">Password</Label>\r\n        <Input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={formData.password}\r\n          onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div>\r\n        <Label htmlFor=\"role\">Role</Label>\r\n        <Select\r\n          value={formData.role}\r\n          onValueChange={(value) => setFormData({ ...formData, role: value })}\r\n        >\r\n          <SelectTrigger>\r\n            <SelectValue />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"user\">User</SelectItem>\r\n            <SelectItem value=\"admin\">Admin</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n      \r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch\r\n          checked={formData.isPremium}\r\n          onCheckedChange={(checked) => setFormData({ ...formData, isPremium: checked })}\r\n        />\r\n        <Label>Premium User</Label>\r\n      </div>\r\n      \r\n      <DialogFooter>\r\n        <Button type=\"submit\">Create User</Button>\r\n      </DialogFooter>\r\n    </form>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { \r\n  BarChart, \r\n  Bar, \r\n  XAxis, \r\n  YAxis, \r\n  CartesianGrid, \r\n  Tooltip, \r\n  ResponsiveContainer,\r\n  LineChart,\r\n  Line,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  AreaChart,\r\n  Area\r\n} from 'recharts';\r\nimport { \r\n  TrendingUp, \r\n  TrendingDown, \r\n  Users, \r\n  Activity, \r\n  DollarSign, \r\n  Zap,\r\n  Calendar,\r\n  Download,\r\n  RefreshCw\r\n} from \"lucide-react\";\r\n\r\ninterface AnalyticsData {\r\n  userGrowth: Array<{ date: string; users: number; premium: number }>;\r\n  mealAnalytics: Array<{ date: string; analyses: number; calories: number }>;\r\n  revenueData: Array<{ date: string; revenue: number; subscriptions: number }>;\r\n  featureUsage: Array<{ feature: string; usage: number; percentage: number }>;\r\n  aiProviderStats: Array<{ provider: string; usage: number; cost: number }>;\r\n  topFoods: Array<{ food: string; count: number; calories: number }>;\r\n  userRetention: Array<{ cohort: string; retention: number[] }>;\r\n}\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\r\n\r\nexport default function AnalyticsDashboard() {\r\n  const [timeRange, setTimeRange] = useState(\"30d\");\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n\r\n  // Fetch analytics data\r\n  const { data: analytics, isLoading, refetch } = useQuery<AnalyticsData>({\r\n    queryKey: ['admin-analytics', timeRange],\r\n    queryFn: async () => {\r\n      const response = await fetch(`/api/admin/analytics?timeRange=${timeRange}`);\r\n      if (!response.ok) throw new Error('Failed to fetch analytics');\r\n      return response.json();\r\n    },\r\n    refetchInterval: 5 * 60 * 1000, // Refresh every 5 minutes\r\n  });\r\n\r\n  const exportAnalytics = () => {\r\n    // Export analytics data as JSON\r\n    const blob = new Blob([JSON.stringify(analytics, null, 2)], { type: 'application/json' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `analytics-${timeRange}-${new Date().toISOString().split('T')[0]}.json`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <div className=\"text-center\">\r\n          <Activity className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\r\n          <p>Loading analytics...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n            <BarChart className=\"h-6 w-6 text-purple-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Analytics Dashboard</h2>\r\n            <p className=\"text-neutral-600\">Comprehensive business insights and metrics</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Select value={timeRange} onValueChange={setTimeRange}>\r\n            <SelectTrigger className=\"w-32\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"7d\">7 Days</SelectItem>\r\n              <SelectItem value=\"30d\">30 Days</SelectItem>\r\n              <SelectItem value=\"90d\">90 Days</SelectItem>\r\n              <SelectItem value=\"1y\">1 Year</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n          <Button onClick={() => refetch()} variant=\"outline\">\r\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n            Refresh\r\n          </Button>\r\n          <Button onClick={exportAnalytics} variant=\"outline\">\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"users\">User Analytics</TabsTrigger>\r\n          <TabsTrigger value=\"revenue\">Revenue</TabsTrigger>\r\n          <TabsTrigger value=\"features\">Feature Usage</TabsTrigger>\r\n          <TabsTrigger value=\"ai\">AI Performance</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {/* Key Metrics Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\r\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {analytics?.userGrowth?.slice(-1)[0]?.users || 0}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                  +12% from last month\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">AI Analyses</CardTitle>\r\n                <Zap className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {analytics?.mealAnalytics?.reduce((sum, item) => sum + item.analyses, 0) || 0}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                  +23% from last month\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Revenue</CardTitle>\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  ${analytics?.revenueData?.reduce((sum, item) => sum + item.revenue, 0) || 0}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                  +18% from last month\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Premium Users</CardTitle>\r\n                <Activity className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {analytics?.userGrowth?.slice(-1)[0]?.premium || 0}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                  +8% conversion rate\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* User Growth Chart */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>User Growth Trend</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <AreaChart data={analytics?.userGrowth || []}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Area \r\n                    type=\"monotone\" \r\n                    dataKey=\"users\" \r\n                    stackId=\"1\"\r\n                    stroke=\"#8884d8\" \r\n                    fill=\"#8884d8\" \r\n                    fillOpacity={0.6}\r\n                  />\r\n                  <Area \r\n                    type=\"monotone\" \r\n                    dataKey=\"premium\" \r\n                    stackId=\"1\"\r\n                    stroke=\"#82ca9d\" \r\n                    fill=\"#82ca9d\"\r\n                    fillOpacity={0.8}\r\n                  />\r\n                </AreaChart>\r\n              </ResponsiveContainer>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* AI Usage and Top Foods */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Daily AI Analyses</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={250}>\r\n                  <LineChart data={analytics?.mealAnalytics || []}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Line \r\n                      type=\"monotone\" \r\n                      dataKey=\"analyses\" \r\n                      stroke=\"#8884d8\" \r\n                      strokeWidth={2}\r\n                    />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Top Analyzed Foods</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {analytics?.topFoods?.slice(0, 5).map((food, index) => (\r\n                    <div key={food.food} className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-sm font-medium\">\r\n                          {index + 1}\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"font-medium\">{food.food}</p>\r\n                          <p className=\"text-sm text-muted-foreground\">{food.calories} avg calories</p>\r\n                        </div>\r\n                      </div>\r\n                      <Badge variant=\"outline\">{food.count} times</Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"users\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* User Registration Trend */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>User Registration Trend</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <BarChart data={analytics?.userGrowth || []}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"users\" fill=\"#8884d8\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* User Retention */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>User Retention by Cohort</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {analytics?.userRetention?.map((cohort, index) => (\r\n                    <div key={cohort.cohort} className=\"space-y-2\">\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-sm font-medium\">{cohort.cohort}</span>\r\n                        <Badge variant=\"outline\">\r\n                          {cohort.retention[0]}% Day 1\r\n                        </Badge>\r\n                      </div>\r\n                      <div className=\"flex space-x-1\">\r\n                        {cohort.retention.map((rate, i) => (\r\n                          <div\r\n                            key={i}\r\n                            className=\"h-2 flex-1 rounded\"\r\n                            style={{\r\n                              backgroundColor: `rgba(34, 197, 94, ${rate / 100})`,\r\n                            }}\r\n                            title={`Day ${i + 1}: ${rate}%`}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"revenue\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Revenue Trend */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Revenue Trend</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <LineChart data={analytics?.revenueData || []}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Line \r\n                      type=\"monotone\" \r\n                      dataKey=\"revenue\" \r\n                      stroke=\"#22c55e\" \r\n                      strokeWidth={3}\r\n                    />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Subscription Growth */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Subscription Growth</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <AreaChart data={analytics?.revenueData || []}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Area \r\n                      type=\"monotone\" \r\n                      dataKey=\"subscriptions\" \r\n                      stroke=\"#3b82f6\" \r\n                      fill=\"#3b82f6\"\r\n                      fillOpacity={0.6}\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Revenue Metrics */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-base\">Monthly Recurring Revenue</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  ${analytics?.revenueData?.slice(-1)[0]?.revenue || 0}\r\n                </div>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                  +15% from last month\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-base\">Average Revenue Per User</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">$12.50</div>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                  +5% from last month\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-base\">Customer Lifetime Value</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">$89.40</div>\r\n                <p className=\"text-sm text-muted-foreground\">Based on 7.2 months avg</p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"features\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Feature Usage */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Feature Usage Distribution</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={analytics?.featureUsage || []}\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      labelLine={false}\r\n                      label={({ name, percentage }) => `${name} ${percentage}%`}\r\n                      outerRadius={80}\r\n                      fill=\"#8884d8\"\r\n                      dataKey=\"usage\"\r\n                    >\r\n                      {analytics?.featureUsage?.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Feature Usage List */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Feature Usage Statistics</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {analytics?.featureUsage?.map((feature, index) => (\r\n                    <div key={feature.feature} className=\"space-y-2\">\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-sm font-medium\">{feature.feature}</span>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <Badge variant=\"outline\">{feature.usage} uses</Badge>\r\n                          <Badge style={{ backgroundColor: COLORS[index % COLORS.length] }}>\r\n                            {feature.percentage}%\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                        <div \r\n                          className=\"h-2 rounded-full transition-all duration-300\" \r\n                          style={{ \r\n                            width: `${feature.percentage}%`,\r\n                            backgroundColor: COLORS[index % COLORS.length]\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"ai\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* AI Provider Usage */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>AI Provider Usage</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <BarChart data={analytics?.aiProviderStats || []}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"provider\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"usage\" fill=\"#8884d8\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* AI Cost Analysis */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>AI Usage Costs</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {analytics?.aiProviderStats?.map((provider) => (\r\n                    <div key={provider.provider} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                      <div>\r\n                        <p className=\"font-medium capitalize\">{provider.provider}</p>\r\n                        <p className=\"text-sm text-muted-foreground\">{provider.usage} analyses</p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"font-semibold\">${provider.cost}</p>\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                          ${(provider.cost / provider.usage).toFixed(3)} per analysis\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"mt-4 p-3 bg-gray-50 rounded-lg\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"font-medium\">Total AI Costs</span>\r\n                    <span className=\"text-lg font-bold\">\r\n                      ${analytics?.aiProviderStats?.reduce((sum, p) => sum + p.cost, 0) || 0}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* AI Performance Metrics */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>AI Performance Metrics</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div className=\"text-center p-4 border rounded-lg\">\r\n                  <p className=\"text-2xl font-bold\">95.8%</p>\r\n                  <p className=\"text-sm text-muted-foreground\">Accuracy Rate</p>\r\n                </div>\r\n                <div className=\"text-center p-4 border rounded-lg\">\r\n                  <p className=\"text-2xl font-bold\">2.3s</p>\r\n                  <p className=\"text-sm text-muted-foreground\">Avg Response Time</p>\r\n                </div>\r\n                <div className=\"text-center p-4 border rounded-lg\">\r\n                  <p className=\"text-2xl font-bold\">99.2%</p>\r\n                  <p className=\"text-sm text-muted-foreground\">Uptime</p>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { apiRequest } from \"@/lib/apiRequest\";\r\nimport { \r\n  CreditCard, \r\n  DollarSign, \r\n  Users, \r\n  TrendingUp, \r\n  AlertCircle, \r\n  CheckCircle, \r\n  XCircle,\r\n  RefreshCw,\r\n  Download,\r\n  Settings,\r\n  Crown,\r\n  Calendar,\r\n  Search\r\n} from \"lucide-react\";\r\n\r\ninterface Subscription {\r\n  id: string;\r\n  userId: number;\r\n  username: string;\r\n  email: string;\r\n  status: 'active' | 'canceled' | 'past_due' | 'incomplete';\r\n  planId: string;\r\n  planName: string;\r\n  amount: number;\r\n  currency: string;\r\n  interval: 'monthly' | 'yearly';\r\n  currentPeriodStart: string;\r\n  currentPeriodEnd: string;\r\n  cancelAt?: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface PaymentMethod {\r\n  id: string;\r\n  userId: number;\r\n  type: string;\r\n  brand: string;\r\n  last4: string;\r\n  expMonth: number;\r\n  expYear: number;\r\n  isDefault: boolean;\r\n}\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  userId: number;\r\n  username: string;\r\n  amount: number;\r\n  currency: string;\r\n  status: 'succeeded' | 'pending' | 'failed';\r\n  description: string;\r\n  createdAt: string;\r\n  subscriptionId?: string;\r\n}\r\n\r\ninterface RevenueMetrics {\r\n  totalRevenue: number;\r\n  monthlyRevenue: number;\r\n  yearlyRevenue: number;\r\n  totalSubscriptions: number;\r\n  activeSubscriptions: number;\r\n  canceledSubscriptions: number;\r\n  churnRate: number;\r\n  averageRevenuePerUser: number;\r\n  lifetimeValue: number;\r\n}\r\n\r\ninterface ReferralSettings {\r\n  commission_percent: number;\r\n  is_recurring: boolean;\r\n}\r\n\r\nexport default function PaymentManagement() {\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState<string>(\"all\");\r\n  const [selectedSubscription, setSelectedSubscription] = useState<Subscription | null>(null);\r\n  const [showRefundDialog, setShowRefundDialog] = useState(false);\r\n  const [refundAmount, setRefundAmount] = useState(\"\");\r\n  const [refundReason, setRefundReason] = useState(\"\");\r\n  \r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n\r\n  const [referralSettings, setReferralSettings] = useState<ReferralSettings>({\r\n    commission_percent: 0,\r\n    is_recurring: false\r\n  });\r\n\r\n  // Fetch revenue metrics\r\n  const { data: metrics, isLoading: metricsLoading } = useQuery<RevenueMetrics>({\r\n    queryKey: ['admin-revenue-metrics'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/payments/metrics');\r\n      if (!response.ok) throw new Error('Failed to fetch revenue metrics');\r\n      return response.json();\r\n    },\r\n    refetchInterval: 5 * 60 * 1000, // Refresh every 5 minutes\r\n  });\r\n\r\n  // Fetch subscriptions\r\n  const { data: subscriptions, isLoading: subscriptionsLoading, refetch: refetchSubscriptions } = useQuery<Subscription[]>({\r\n    queryKey: ['admin-subscriptions', searchTerm, statusFilter],\r\n    queryFn: async () => {\r\n      const params = new URLSearchParams();\r\n      if (searchTerm) params.append('search', searchTerm);\r\n      if (statusFilter !== 'all') params.append('status', statusFilter);\r\n      \r\n      const response = await fetch(`/api/admin/payments/subscriptions?${params}`);\r\n      if (!response.ok) throw new Error('Failed to fetch subscriptions');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Fetch transactions\r\n  const { data: transactions, isLoading: transactionsLoading } = useQuery<Transaction[]>({\r\n    queryKey: ['admin-transactions'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/payments/transactions');\r\n      if (!response.ok) throw new Error('Failed to fetch transactions');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Fetch payment methods\r\n  const { data: paymentMethods } = useQuery<PaymentMethod[]>({\r\n    queryKey: ['admin-payment-methods'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/payments/methods');\r\n      if (!response.ok) throw new Error('Failed to fetch payment methods');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Cancel subscription mutation\r\n  const cancelSubscriptionMutation = useMutation({\r\n    mutationFn: async (subscriptionId: string) => {\r\n      const response = await apiRequest(`/api/admin/payments/subscriptions/${subscriptionId}/cancel`, {\r\n        method: 'POST',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to cancel subscription');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Subscription canceled successfully\" });\r\n      refetchSubscriptions();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error canceling subscription\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Refund payment mutation\r\n  const refundPaymentMutation = useMutation({\r\n    mutationFn: async (data: { transactionId: string; amount: number; reason: string }) => {\r\n      const response = await apiRequest(`/api/admin/payments/refund`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n      });\r\n      if (!response.ok) throw new Error('Failed to process refund');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Refund processed successfully\" });\r\n      setShowRefundDialog(false);\r\n      setRefundAmount(\"\");\r\n      setRefundReason(\"\");\r\n      queryClient.invalidateQueries({ queryKey: ['admin-transactions'] });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error processing refund\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Update referral settings mutation\r\n  const updateReferralSettings = useMutation({\r\n    mutationFn: async (settings: ReferralSettings) => {\r\n      const response = await apiRequest('/api/admin/referral-settings', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(settings),\r\n      });\r\n      if (!response.ok) throw new Error('Failed to update referral settings');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Referral settings updated successfully\" });\r\n      queryClient.invalidateQueries({ queryKey: ['admin-referral-settings'] });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error updating referral settings\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return <Badge variant=\"default\"><CheckCircle className=\"h-3 w-3 mr-1\" />Active</Badge>;\r\n      case 'canceled':\r\n        return <Badge variant=\"destructive\"><XCircle className=\"h-3 w-3 mr-1\" />Canceled</Badge>;\r\n      case 'past_due':\r\n        return <Badge variant=\"secondary\"><AlertCircle className=\"h-3 w-3 mr-1\" />Past Due</Badge>;\r\n      case 'incomplete':\r\n        return <Badge variant=\"outline\"><AlertCircle className=\"h-3 w-3 mr-1\" />Incomplete</Badge>;\r\n      case 'succeeded':\r\n        return <Badge variant=\"default\"><CheckCircle className=\"h-3 w-3 mr-1\" />Succeeded</Badge>;\r\n      case 'pending':\r\n        return <Badge variant=\"secondary\">Pending</Badge>;\r\n      case 'failed':\r\n        return <Badge variant=\"destructive\"><XCircle className=\"h-3 w-3 mr-1\" />Failed</Badge>;\r\n      default:\r\n        return <Badge variant=\"outline\">{status}</Badge>;\r\n    }\r\n  };\r\n\r\n  const exportData = (type: 'subscriptions' | 'transactions') => {\r\n    const data = type === 'subscriptions' ? subscriptions : transactions;\r\n    const csvContent = [\r\n      type === 'subscriptions' \r\n        ? ['ID', 'User', 'Email', 'Plan', 'Status', 'Amount', 'Created']\r\n        : ['ID', 'User', 'Amount', 'Status', 'Description', 'Created'],\r\n      ...(data || []).map(item => \r\n        type === 'subscriptions' \r\n          ? [\r\n              (item as Subscription).id,\r\n              (item as Subscription).username,\r\n              (item as Subscription).email,\r\n              (item as Subscription).planName,\r\n              (item as Subscription).status,\r\n              (item as Subscription).amount,\r\n              new Date((item as Subscription).createdAt).toLocaleDateString()\r\n            ]\r\n          : [\r\n              (item as Transaction).id,\r\n              (item as Transaction).username,\r\n              (item as Transaction).amount,\r\n              (item as Transaction).status,\r\n              (item as Transaction).description,\r\n              new Date((item as Transaction).createdAt).toLocaleDateString()\r\n            ]\r\n      )\r\n    ].map(row => row.join(',')).join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${type}-${new Date().toISOString().split('T')[0]}.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\r\n            <DollarSign className=\"h-6 w-6 text-green-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Payment Management</h2>\r\n            <p className=\"text-neutral-600\">Manage subscriptions, transactions, and revenue</p>\r\n          </div>\r\n        </div>\r\n        <Button onClick={() => queryClient.invalidateQueries()} variant=\"outline\">\r\n          <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n          Refresh All\r\n        </Button>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"subscriptions\">Subscriptions</TabsTrigger>\r\n          <TabsTrigger value=\"transactions\">Transactions</TabsTrigger>\r\n          <TabsTrigger value=\"methods\">Payment Methods</TabsTrigger>\r\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {/* Revenue Metrics */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">${metrics?.totalRevenue || 0}</div>\r\n                <p className=\"text-xs text-muted-foreground\">All time</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Monthly Revenue</CardTitle>\r\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">${metrics?.monthlyRevenue || 0}</div>\r\n                <p className=\"text-xs text-muted-foreground\">This month</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Active Subscriptions</CardTitle>\r\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{metrics?.activeSubscriptions || 0}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  {metrics?.canceledSubscriptions || 0} canceled\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Churn Rate</CardTitle>\r\n                <AlertCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{metrics?.churnRate || 0}%</div>\r\n                <p className=\"text-xs text-muted-foreground\">This month</p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Additional Metrics */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Revenue Breakdown</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Monthly Subscriptions</span>\r\n                    <span className=\"font-medium\">${metrics?.monthlyRevenue || 0}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Yearly Subscriptions</span>\r\n                    <span className=\"font-medium\">${metrics?.yearlyRevenue || 0}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Average Revenue Per User</span>\r\n                    <span className=\"font-medium\">${metrics?.averageRevenuePerUser || 0}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Customer Lifetime Value</span>\r\n                    <span className=\"font-medium\">${metrics?.lifetimeValue || 0}</span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Subscription Status</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Active</span>\r\n                    <Badge variant=\"default\">{metrics?.activeSubscriptions || 0}</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Canceled</span>\r\n                    <Badge variant=\"destructive\">{metrics?.canceledSubscriptions || 0}</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Total</span>\r\n                    <Badge variant=\"outline\">{metrics?.totalSubscriptions || 0}</Badge>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"subscriptions\" className=\"space-y-6\">\r\n          {/* Filters */}\r\n          <Card>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"flex flex-col md:flex-row gap-4\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"relative\">\r\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n                    <Input\r\n                      placeholder=\"Search by username or email...\"\r\n                      value={searchTerm}\r\n                      onChange={(e) => setSearchTerm(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Select value={statusFilter} onValueChange={setStatusFilter}>\r\n                  <SelectTrigger className=\"w-48\">\r\n                    <SelectValue placeholder=\"Filter by status\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"all\">All Status</SelectItem>\r\n                    <SelectItem value=\"active\">Active</SelectItem>\r\n                    <SelectItem value=\"canceled\">Canceled</SelectItem>\r\n                    <SelectItem value=\"past_due\">Past Due</SelectItem>\r\n                    <SelectItem value=\"incomplete\">Incomplete</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n                <Button onClick={() => exportData('subscriptions')} variant=\"outline\">\r\n                  <Download className=\"h-4 w-4 mr-2\" />\r\n                  Export\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Subscriptions Table */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Subscriptions ({subscriptions?.length || 0})</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96\">\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>User</TableHead>\r\n                      <TableHead>Plan</TableHead>\r\n                      <TableHead>Status</TableHead>\r\n                      <TableHead>Amount</TableHead>\r\n                      <TableHead>Next Billing</TableHead>\r\n                      <TableHead>Actions</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {subscriptions?.map((subscription) => (\r\n                      <TableRow key={subscription.id}>\r\n                        <TableCell>\r\n                          <div>\r\n                            <p className=\"font-medium\">{subscription.username}</p>\r\n                            <p className=\"text-sm text-muted-foreground\">{subscription.email}</p>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Crown className=\"h-4 w-4 text-yellow-500\" />\r\n                            <span>{subscription.planName}</span>\r\n                            <Badge variant=\"outline\">{subscription.interval}</Badge>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{getStatusBadge(subscription.status)}</TableCell>\r\n                        <TableCell>\r\n                          ${subscription.amount} {subscription.currency.toUpperCase()}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {subscription.status === 'active' ? (\r\n                            <div>\r\n                              <p className=\"text-sm\">\r\n                                {new Date(subscription.currentPeriodEnd).toLocaleDateString()}\r\n                              </p>\r\n                              {subscription.cancelAt && (\r\n                                <p className=\"text-xs text-muted-foreground\">\r\n                                  Cancels: {new Date(subscription.cancelAt).toLocaleDateString()}\r\n                                </p>\r\n                              )}\r\n                            </div>\r\n                          ) : (\r\n                            <span className=\"text-muted-foreground\">N/A</span>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              size=\"sm\"\r\n                              onClick={() => setSelectedSubscription(subscription)}\r\n                            >\r\n                              View\r\n                            </Button>\r\n                            {subscription.status === 'active' && (\r\n                              <Button\r\n                                variant=\"destructive\"\r\n                                size=\"sm\"\r\n                                onClick={() => cancelSubscriptionMutation.mutate(subscription.id)}\r\n                                disabled={cancelSubscriptionMutation.isPending}\r\n                              >\r\n                                Cancel\r\n                              </Button>\r\n                            )}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"transactions\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle>Recent Transactions</CardTitle>\r\n                <Button onClick={() => exportData('transactions')} variant=\"outline\">\r\n                  <Download className=\"h-4 w-4 mr-2\" />\r\n                  Export\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96\">\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>Transaction ID</TableHead>\r\n                      <TableHead>User</TableHead>\r\n                      <TableHead>Amount</TableHead>\r\n                      <TableHead>Status</TableHead>\r\n                      <TableHead>Description</TableHead>\r\n                      <TableHead>Date</TableHead>\r\n                      <TableHead>Actions</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {transactions?.map((transaction) => (\r\n                      <TableRow key={transaction.id}>\r\n                        <TableCell className=\"font-mono text-sm\">\r\n                          {transaction.id.slice(0, 8)}...\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <p className=\"font-medium\">{transaction.username}</p>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          ${transaction.amount} {transaction.currency.toUpperCase()}\r\n                        </TableCell>\r\n                        <TableCell>{getStatusBadge(transaction.status)}</TableCell>\r\n                        <TableCell className=\"max-w-xs truncate\">\r\n                          {transaction.description}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {new Date(transaction.createdAt).toLocaleDateString()}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {transaction.status === 'succeeded' && (\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              size=\"sm\"\r\n                              onClick={() => {\r\n                                setSelectedSubscription(null);\r\n                                setShowRefundDialog(true);\r\n                                setRefundAmount(transaction.amount.toString());\r\n                              }}\r\n                            >\r\n                              Refund\r\n                            </Button>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"methods\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Payment Methods</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96\">\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>User ID</TableHead>\r\n                      <TableHead>Type</TableHead>\r\n                      <TableHead>Card</TableHead>\r\n                      <TableHead>Expires</TableHead>\r\n                      <TableHead>Default</TableHead>\r\n                      <TableHead>Actions</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {paymentMethods?.map((method) => (\r\n                      <TableRow key={method.id}>\r\n                        <TableCell>{method.userId}</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <CreditCard className=\"h-4 w-4\" />\r\n                            <span className=\"capitalize\">{method.type}</span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <span className=\"capitalize\">{method.brand}</span> •••• {method.last4}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {method.expMonth.toString().padStart(2, '0')}/{method.expYear}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {method.isDefault && <Badge variant=\"default\">Default</Badge>}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Button variant=\"outline\" size=\"sm\">\r\n                            View\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"settings\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Payment Settings</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                <div>\r\n                  <h3 className=\"text-lg font-medium mb-4\">Stripe Configuration</h3>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label>Publishable Key</Label>\r\n                      <Input placeholder=\"pk_...\" disabled />\r\n                    </div>\r\n                    <div>\r\n                      <Label>Webhook Endpoint</Label>\r\n                      <Input value=\"/api/webhooks/stripe\" disabled />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3 className=\"text-lg font-medium mb-4\">Plan Settings</h3>\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                      <div>\r\n                        <p className=\"font-medium\">Monthly Plan</p>\r\n                        <p className=\"text-sm text-muted-foreground\">$9.99/month</p>\r\n                      </div>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Settings className=\"h-4 w-4 mr-2\" />\r\n                        Configure\r\n                      </Button>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                      <div>\r\n                        <p className=\"font-medium\">Yearly Plan</p>\r\n                        <p className=\"text-sm text-muted-foreground\">$99.99/year</p>\r\n                      </div>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Settings className=\"h-4 w-4 mr-2\" />\r\n                        Configure\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3 className=\"text-lg font-medium mb-4\">Referral Program</h3>\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <Label>Commission Percentage</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        value={referralSettings.commission_percent}\r\n                        onChange={(e) => setReferralSettings({\r\n                          ...referralSettings,\r\n                          commission_percent: parseFloat(e.target.value)\r\n                        })}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        step=\"0.01\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Switch\r\n                        id=\"recurring-commissions\"\r\n                        checked={referralSettings.is_recurring}\r\n                        onCheckedChange={(checked) => setReferralSettings({\r\n                          ...referralSettings,\r\n                          is_recurring: checked\r\n                        })}\r\n                      />\r\n                      <Label htmlFor=\"recurring-commissions\">Recurring Commissions</Label>\r\n                    </div>\r\n                    <Button\r\n                      onClick={() => updateReferralSettings.mutate(referralSettings)}\r\n                      disabled={updateReferralSettings.isPending}\r\n                    >\r\n                      Save Referral Settings\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* Subscription Details Dialog */}\r\n      <Dialog open={!!selectedSubscription} onOpenChange={() => setSelectedSubscription(null)}>\r\n        <DialogContent className=\"max-w-2xl\">\r\n          <DialogHeader>\r\n            <DialogTitle>Subscription Details</DialogTitle>\r\n          </DialogHeader>\r\n          {selectedSubscription && (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Subscription ID</Label>\r\n                  <p className=\"text-sm font-mono\">{selectedSubscription.id}</p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">User</Label>\r\n                  <p className=\"text-sm\">{selectedSubscription.username}</p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Status</Label>\r\n                  <div className=\"mt-1\">{getStatusBadge(selectedSubscription.status)}</div>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Plan</Label>\r\n                  <p className=\"text-sm\">{selectedSubscription.planName}</p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Amount</Label>\r\n                  <p className=\"text-sm\">\r\n                    ${selectedSubscription.amount} {selectedSubscription.currency.toUpperCase()}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Billing Cycle</Label>\r\n                  <p className=\"text-sm capitalize\">{selectedSubscription.interval}</p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Current Period</Label>\r\n                  <p className=\"text-sm\">\r\n                    {new Date(selectedSubscription.currentPeriodStart).toLocaleDateString()} - {\" \"}\r\n                    {new Date(selectedSubscription.currentPeriodEnd).toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <Label className=\"text-sm font-medium\">Created</Label>\r\n                  <p className=\"text-sm\">\r\n                    {new Date(selectedSubscription.createdAt).toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Refund Dialog */}\r\n      <Dialog open={showRefundDialog} onOpenChange={setShowRefundDialog}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Process Refund</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <Label htmlFor=\"refund-amount\">Refund Amount</Label>\r\n              <Input\r\n                id=\"refund-amount\"\r\n                type=\"number\"\r\n                value={refundAmount}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setRefundAmount(e.target.value)}\r\n                placeholder=\"0.00\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <Label htmlFor=\"refund-reason\">Reason</Label>\r\n              <Select value={refundReason} onValueChange={setRefundReason}>\r\n                <SelectTrigger>\r\n                  <SelectValue placeholder=\"Select reason\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"requested_by_customer\">Requested by customer</SelectItem>\r\n                  <SelectItem value=\"duplicate\">Duplicate charge</SelectItem>\r\n                  <SelectItem value=\"fraudulent\">Fraudulent</SelectItem>\r\n                  <SelectItem value=\"subscription_cancellation\">Subscription cancellation</SelectItem>\r\n                  <SelectItem value=\"other\">Other</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setShowRefundDialog(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={() => refundPaymentMutation.mutate({\r\n                transactionId: 'tx_123', // This should be the actual transaction ID\r\n                amount: parseFloat(refundAmount),\r\n                reason: refundReason\r\n              })}\r\n              disabled={refundPaymentMutation.isPending || !refundAmount || !refundReason}\r\n            >\r\n              Process Refund\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport {\r\n  Settings,\r\n  Database,\r\n  Mail,\r\n  Shield,\r\n  Bell,\r\n  Palette,\r\n  Globe,\r\n  Code,\r\n  Save,\r\n  RefreshCw,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Key,\r\n  Server,\r\n  Cloud,\r\n  Lock\r\n} from \"lucide-react\";\r\nimport { apiRequest } from \"@/lib/apiRequest\";\r\n\r\ninterface AppSettings {\r\n  general: {\r\n    siteName: string;\r\n    siteDescription: string;\r\n    supportEmail: string;\r\n    maintenanceMode: boolean;\r\n    registrationEnabled: boolean;\r\n    emailVerificationRequired: boolean;\r\n  };\r\n  ai: {\r\n    defaultProvider: string;\r\n    maxAnalysesPerDay: number;\r\n    enableAutoAnalysis: boolean;\r\n    analysisTimeout: number;\r\n  };\r\n  payment: {\r\n    stripeEnabled: boolean;\r\n    monthlyPrice: number;\r\n    yearlyPrice: number;\r\n    trialDays: number;\r\n    currency: string;\r\n  };\r\n  email: {\r\n    provider: string;\r\n    smtpHost: string;\r\n    smtpPort: number;\r\n    smtpUsername: string;\r\n    smtpPassword: string;\r\n    fromAddress: string;\r\n    fromName: string;\r\n  };\r\n  security: {\r\n    passwordMinLength: number;\r\n    sessionTimeout: number;\r\n    maxLoginAttempts: number;\r\n    lockoutDuration: number;\r\n    twoFactorEnabled: boolean;\r\n  };\r\n  notifications: {\r\n    emailEnabled: boolean;\r\n    pushEnabled: boolean;\r\n    slackWebhook: string;\r\n    discordWebhook: string;\r\n  };\r\n  storage: {\r\n    provider: string;\r\n    maxFileSize: number;\r\n    allowedTypes: string[];\r\n    retentionDays: number;\r\n  };\r\n  performance: {\r\n    cacheEnabled: boolean;\r\n    cacheTtl: number;\r\n    compressionEnabled: boolean;\r\n    rateLimitEnabled: boolean;\r\n  };\r\n}\r\n\r\nexport default function SettingsPanel() {\r\n  const [activeTab, setActiveTab] = useState(\"general\");\r\n  const [settings, setSettings] = useState<AppSettings | null>(null);\r\n  const [hasChanges, setHasChanges] = useState(false);\r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n\r\n  // Fetch app settings\r\n  const { data: appSettings, isLoading } = useQuery<AppSettings>({\r\n    queryKey: ['admin-settings'],\r\n    queryFn: async () => {\r\n      const response = await apiRequest('/api/admin/settings');\r\n      if (!response.ok) throw new Error('Failed to fetch settings');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Update settings mutation\r\n  const updateSettingsMutation = useMutation({\r\n    mutationFn: async (data: { section: string; settings: any }) => {\r\n      const response = await apiRequest(`/api/admin/settings/${data.section}`, {\r\n        method: 'PUT',\r\n        body: data.settings,\r\n      });\r\n      if (!response.ok) throw new Error('Failed to update settings');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Settings updated successfully\" });\r\n      setHasChanges(false);\r\n      queryClient.invalidateQueries({ queryKey: ['admin-settings'] });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error updating settings\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Test email configuration mutation\r\n  const testEmailMutation = useMutation({\r\n    mutationFn: async () => {\r\n      const response = await apiRequest('/api/admin/settings/test-email', {\r\n        method: 'POST',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to send test email');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Test email sent successfully\" });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error sending test email\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (appSettings) {\r\n      setSettings(appSettings);\r\n    }\r\n  }, [appSettings]);\r\n\r\n  const handleSettingsChange = (section: keyof AppSettings, field: string, value: any) => {\r\n    if (!settings) return;\r\n    \r\n    setSettings(prev => ({\r\n      ...prev!,\r\n      [section]: {\r\n        ...prev![section],\r\n        [field]: value\r\n      }\r\n    }));\r\n    setHasChanges(true);\r\n  };\r\n\r\n  const handleSaveSection = async (section: keyof AppSettings) => {\r\n    if (!settings) return;\r\n    \r\n    await updateSettingsMutation.mutateAsync({\r\n      section,\r\n      settings: settings[section]\r\n    });\r\n  };\r\n\r\n  const handleTestEmail = async () => {\r\n    await testEmailMutation.mutateAsync();\r\n  };\r\n\r\n  if (isLoading || !settings) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <div className=\"text-center\">\r\n          <Settings className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\r\n          <p>Loading settings...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n            <Settings className=\"h-6 w-6 text-blue-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">System Settings</h2>\r\n            <p className=\"text-neutral-600\">Configure application settings and preferences</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          {hasChanges && (\r\n            <Badge variant=\"outline\" className=\"text-orange-600\">\r\n              <AlertCircle className=\"h-3 w-3 mr-1\" />\r\n              Unsaved Changes\r\n            </Badge>\r\n          )}\r\n          <Button \r\n            onClick={() => queryClient.invalidateQueries({ queryKey: ['admin-settings'] })} \r\n            variant=\"outline\"\r\n          >\r\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList className=\"grid grid-cols-4 lg:grid-cols-8\">\r\n          <TabsTrigger value=\"general\">General</TabsTrigger>\r\n          <TabsTrigger value=\"ai\">AI Config</TabsTrigger>\r\n          <TabsTrigger value=\"payment\">Payment</TabsTrigger>\r\n          <TabsTrigger value=\"email\">Email</TabsTrigger>\r\n          <TabsTrigger value=\"security\">Security</TabsTrigger>\r\n          <TabsTrigger value=\"notifications\">Notifications</TabsTrigger>\r\n          <TabsTrigger value=\"storage\">Storage</TabsTrigger>\r\n          <TabsTrigger value=\"performance\">Performance</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"general\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Globe className=\"h-5 w-5\" />\r\n                General Settings\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"site-name\">Site Name</Label>\r\n                  <Input\r\n                    id=\"site-name\"\r\n                    value={settings.general.siteName}\r\n                    onChange={(e) => handleSettingsChange('general', 'siteName', e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"support-email\">Support Email</Label>\r\n                  <Input\r\n                    id=\"support-email\"\r\n                    type=\"email\"\r\n                    value={settings.general.supportEmail}\r\n                    onChange={(e) => handleSettingsChange('general', 'supportEmail', e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <Label htmlFor=\"site-description\">Site Description</Label>\r\n                <Textarea\r\n                  id=\"site-description\"\r\n                  value={settings.general.siteDescription}\r\n                  onChange={(e) => handleSettingsChange('general', 'siteDescription', e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Maintenance Mode</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Temporarily disable the application</p>\r\n                  </div>\r\n                  <Switch\r\n                    checked={settings.general.maintenanceMode}\r\n                    onCheckedChange={(checked) => handleSettingsChange('general', 'maintenanceMode', checked)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Registration Enabled</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Allow new user registrations</p>\r\n                  </div>\r\n                  <Switch\r\n                    checked={settings.general.registrationEnabled}\r\n                    onCheckedChange={(checked) => handleSettingsChange('general', 'registrationEnabled', checked)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Email Verification Required</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Require email verification for new accounts</p>\r\n                  </div>\r\n                  <Switch\r\n                    checked={settings.general.emailVerificationRequired}\r\n                    onCheckedChange={(checked) => handleSettingsChange('general', 'emailVerificationRequired', checked)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <Button \r\n                  onClick={() => handleSaveSection('general')}\r\n                  disabled={updateSettingsMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save General Settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"ai\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Code className=\"h-5 w-5\" />\r\n                AI Configuration\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"default-provider\">Default AI Provider</Label>\r\n                  <Select\r\n                    value={settings.ai.defaultProvider}\r\n                    onValueChange={(value) => handleSettingsChange('ai', 'defaultProvider', value)}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"openai\">OpenAI</SelectItem>\r\n                      <SelectItem value=\"gemini\">Google Gemini</SelectItem>\r\n                      <SelectItem value=\"testing\">Testing Mode</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"max-analyses\">Max Analyses Per Day (Free Users)</Label>\r\n                  <Input\r\n                    id=\"max-analyses\"\r\n                    type=\"number\"\r\n                    value={settings.ai.maxAnalysesPerDay}\r\n                    onChange={(e) => handleSettingsChange('ai', 'maxAnalysesPerDay', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"analysis-timeout\">Analysis Timeout (seconds)</Label>\r\n                  <Input\r\n                    id=\"analysis-timeout\"\r\n                    type=\"number\"\r\n                    value={settings.ai.analysisTimeout}\r\n                    onChange={(e) => handleSettingsChange('ai', 'analysisTimeout', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <Label className=\"text-base font-medium\">Auto Analysis</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Automatically analyze uploaded images</p>\r\n                </div>\r\n                <Switch\r\n                  checked={settings.ai.enableAutoAnalysis}\r\n                  onCheckedChange={(checked) => handleSettingsChange('ai', 'enableAutoAnalysis', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <Button \r\n                  onClick={() => handleSaveSection('ai')}\r\n                  disabled={updateSettingsMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save AI Settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"payment\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-5 w-5\" />\r\n                Payment Configuration\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <Label className=\"text-base font-medium\">Stripe Enabled</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Enable Stripe payment processing</p>\r\n                </div>\r\n                <Switch\r\n                  checked={settings.payment.stripeEnabled}\r\n                  onCheckedChange={(checked) => handleSettingsChange('payment', 'stripeEnabled', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"monthly-price\">Monthly Price</Label>\r\n                  <Input\r\n                    id=\"monthly-price\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={settings.payment.monthlyPrice}\r\n                    onChange={(e) => handleSettingsChange('payment', 'monthlyPrice', parseFloat(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"yearly-price\">Yearly Price</Label>\r\n                  <Input\r\n                    id=\"yearly-price\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={settings.payment.yearlyPrice}\r\n                    onChange={(e) => handleSettingsChange('payment', 'yearlyPrice', parseFloat(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"trial-days\">Trial Days</Label>\r\n                  <Input\r\n                    id=\"trial-days\"\r\n                    type=\"number\"\r\n                    value={settings.payment.trialDays}\r\n                    onChange={(e) => handleSettingsChange('payment', 'trialDays', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"currency\">Currency</Label>\r\n                  <Select\r\n                    value={settings.payment.currency}\r\n                    onValueChange={(value) => handleSettingsChange('payment', 'currency', value)}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"usd\">USD</SelectItem>\r\n                      <SelectItem value=\"eur\">EUR</SelectItem>\r\n                      <SelectItem value=\"gbp\">GBP</SelectItem>\r\n                      <SelectItem value=\"cad\">CAD</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <Button \r\n                  onClick={() => handleSaveSection('payment')}\r\n                  disabled={updateSettingsMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save Payment Settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"email\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Mail className=\"h-5 w-5\" />\r\n                Email Configuration\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"email-provider\">Email Provider</Label>\r\n                  <Select\r\n                    value={settings.email.provider}\r\n                    onValueChange={(value) => handleSettingsChange('email', 'provider', value)}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"smtp\">SMTP</SelectItem>\r\n                      <SelectItem value=\"sendgrid\">SendGrid</SelectItem>\r\n                      <SelectItem value=\"mailgun\">Mailgun</SelectItem>\r\n                      <SelectItem value=\"ses\">Amazon SES</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"smtp-host\">SMTP Host</Label>\r\n                  <Input\r\n                    id=\"smtp-host\"\r\n                    value={settings.email.smtpHost}\r\n                    onChange={(e) => handleSettingsChange('email', 'smtpHost', e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"smtp-port\">SMTP Port</Label>\r\n                  <Input\r\n                    id=\"smtp-port\"\r\n                    type=\"number\"\r\n                    value={settings.email.smtpPort}\r\n                    onChange={(e) => handleSettingsChange('email', 'smtpPort', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"smtp-username\">SMTP Username</Label>\r\n                  <Input\r\n                    id=\"smtp-username\"\r\n                    value={settings.email.smtpUsername}\r\n                    onChange={(e) => handleSettingsChange('email', 'smtpUsername', e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"smtp-password\">SMTP Password</Label>\r\n                  <Input\r\n                    id=\"smtp-password\"\r\n                    type=\"password\"\r\n                    value={settings.email.smtpPassword}\r\n                    onChange={(e) => handleSettingsChange('email', 'smtpPassword', e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"from-address\">From Address</Label>\r\n                  <Input\r\n                    id=\"from-address\"\r\n                    type=\"email\"\r\n                    value={settings.email.fromAddress}\r\n                    onChange={(e) => handleSettingsChange('email', 'fromAddress', e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"from-name\">From Name</Label>\r\n                  <Input\r\n                    id=\"from-name\"\r\n                    value={settings.email.fromName}\r\n                    onChange={(e) => handleSettingsChange('email', 'fromName', e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-between\">\r\n                <Button \r\n                  onClick={handleTestEmail}\r\n                  variant=\"outline\"\r\n                  disabled={testEmailMutation.isPending}\r\n                >\r\n                  <Mail className=\"h-4 w-4 mr-2\" />\r\n                  Send Test Email\r\n                </Button>\r\n                <Button \r\n                  onClick={() => handleSaveSection('email')}\r\n                  disabled={updateSettingsMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save Email Settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"security\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Lock className=\"h-5 w-5\" />\r\n                Security Settings\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"password-min-length\">Password Min Length</Label>\r\n                  <Input\r\n                    id=\"password-min-length\"\r\n                    type=\"number\"\r\n                    value={settings.security.passwordMinLength}\r\n                    onChange={(e) => handleSettingsChange('security', 'passwordMinLength', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"session-timeout\">Session Timeout (minutes)</Label>\r\n                  <Input\r\n                    id=\"session-timeout\"\r\n                    type=\"number\"\r\n                    value={settings.security.sessionTimeout}\r\n                    onChange={(e) => handleSettingsChange('security', 'sessionTimeout', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"max-login-attempts\">Max Login Attempts</Label>\r\n                  <Input\r\n                    id=\"max-login-attempts\"\r\n                    type=\"number\"\r\n                    value={settings.security.maxLoginAttempts}\r\n                    onChange={(e) => handleSettingsChange('security', 'maxLoginAttempts', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"lockout-duration\">Lockout Duration (minutes)</Label>\r\n                  <Input\r\n                    id=\"lockout-duration\"\r\n                    type=\"number\"\r\n                    value={settings.security.lockoutDuration}\r\n                    onChange={(e) => handleSettingsChange('security', 'lockoutDuration', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <Label className=\"text-base font-medium\">Two-Factor Authentication</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Enable 2FA for admin accounts</p>\r\n                </div>\r\n                <Switch\r\n                  checked={settings.security.twoFactorEnabled}\r\n                  onCheckedChange={(checked) => handleSettingsChange('security', 'twoFactorEnabled', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <Button \r\n                  onClick={() => handleSaveSection('security')}\r\n                  disabled={updateSettingsMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save Security Settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"notifications\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Bell className=\"h-5 w-5\" />\r\n                Notification Settings\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Email Notifications</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Send email notifications to admins</p>\r\n                  </div>\r\n                  <Switch\r\n                    checked={settings.notifications.emailEnabled}\r\n                    onCheckedChange={(checked) => handleSettingsChange('notifications', 'emailEnabled', checked)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Push Notifications</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Send push notifications</p>\r\n                  </div>\r\n                  <Switch\r\n                    checked={settings.notifications.pushEnabled}\r\n                    onCheckedChange={(checked) => handleSettingsChange('notifications', 'pushEnabled', checked)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"slack-webhook\">Slack Webhook URL</Label>\r\n                  <Input\r\n                    id=\"slack-webhook\"\r\n                    type=\"url\"\r\n                    placeholder=\"https://hooks.slack.com/...\"\r\n                    value={settings.notifications.slackWebhook}\r\n                    onChange={(e) => handleSettingsChange('notifications', 'slackWebhook', e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"discord-webhook\">Discord Webhook URL</Label>\r\n                  <Input\r\n                    id=\"discord-webhook\"\r\n                    type=\"url\"\r\n                    placeholder=\"https://discord.com/api/webhooks/...\"\r\n                    value={settings.notifications.discordWebhook}\r\n                    onChange={(e) => handleSettingsChange('notifications', 'discordWebhook', e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <Button \r\n                  onClick={() => handleSaveSection('notifications')}\r\n                  disabled={updateSettingsMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save Notification Settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"storage\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Database className=\"h-5 w-5\" />\r\n                Storage Settings\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"storage-provider\">Storage Provider</Label>\r\n                  <Select\r\n                    value={settings.storage.provider}\r\n                    onValueChange={(value) => handleSettingsChange('storage', 'provider', value)}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"local\">Local Storage</SelectItem>\r\n                      <SelectItem value=\"s3\">Amazon S3</SelectItem>\r\n                      <SelectItem value=\"gcs\">Google Cloud Storage</SelectItem>\r\n                      <SelectItem value=\"azure\">Azure Blob Storage</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"max-file-size\">Max File Size (MB)</Label>\r\n                  <Input\r\n                    id=\"max-file-size\"\r\n                    type=\"number\"\r\n                    value={settings.storage.maxFileSize}\r\n                    onChange={(e) => handleSettingsChange('storage', 'maxFileSize', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"retention-days\">Retention Days</Label>\r\n                  <Input\r\n                    id=\"retention-days\"\r\n                    type=\"number\"\r\n                    value={settings.storage.retentionDays}\r\n                    onChange={(e) => handleSettingsChange('storage', 'retentionDays', parseInt(e.target.value))}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"allowed-types\">Allowed File Types (comma-separated)</Label>\r\n                <Input\r\n                  id=\"allowed-types\"\r\n                  value={settings.storage.allowedTypes.join(', ')}\r\n                  onChange={(e) => handleSettingsChange('storage', 'allowedTypes', e.target.value.split(', '))}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <Button \r\n                  onClick={() => handleSaveSection('storage')}\r\n                  disabled={updateSettingsMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save Storage Settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"performance\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Server className=\"h-5 w-5\" />\r\n                Performance Settings\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Enable Caching</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Cache frequently accessed data</p>\r\n                  </div>\r\n                  <Switch\r\n                    checked={settings.performance.cacheEnabled}\r\n                    onCheckedChange={(checked) => handleSettingsChange('performance', 'cacheEnabled', checked)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Enable Compression</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Compress API responses</p>\r\n                  </div>\r\n                  <Switch\r\n                    checked={settings.performance.compressionEnabled}\r\n                    onCheckedChange={(checked) => handleSettingsChange('performance', 'compressionEnabled', checked)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Enable Rate Limiting</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Limit API requests per user</p>\r\n                  </div>\r\n                  <Switch\r\n                    checked={settings.performance.rateLimitEnabled}\r\n                    onCheckedChange={(checked) => handleSettingsChange('performance', 'rateLimitEnabled', checked)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"cache-ttl\">Cache TTL (seconds)</Label>\r\n                <Input\r\n                  id=\"cache-ttl\"\r\n                  type=\"number\"\r\n                  value={settings.performance.cacheTtl}\r\n                  onChange={(e) => handleSettingsChange('performance', 'cacheTtl', parseInt(e.target.value))}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <Button \r\n                  onClick={() => handleSaveSection('performance')}\r\n                  disabled={updateSettingsMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Save Performance Settings\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { apiPost, apiDelete } from \"@/lib/apiRequest\";\r\nimport {\r\n  Download,\r\n  Upload,\r\n  Database,\r\n  Calendar,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  RefreshCw,\r\n  Trash2,\r\n  Copy,\r\n  Server,\r\n  Clock,\r\n  HardDrive\r\n} from \"lucide-react\";\r\n\r\ninterface BackupItem {\r\n  id: string;\r\n  name: string;\r\n  type: 'full' | 'settings' | 'data' | 'logs';\r\n  size: string;\r\n  createdAt: string;\r\n  status: 'completed' | 'failed' | 'in_progress';\r\n  downloadUrl?: string;\r\n}\r\n\r\ninterface BackupStats {\r\n  totalBackups: number;\r\n  totalSize: string;\r\n  lastBackup: string;\r\n  nextScheduledBackup: string;\r\n  storageUsed: number;\r\n  storageLimit: number;\r\n}\r\n\r\nexport default function BackupSystem() {\r\n  const [activeTab, setActiveTab] = useState(\"backups\");\r\n  const [selectedBackupType, setSelectedBackupType] = useState(\"full\");\r\n  const [backupName, setBackupName] = useState(\"\");\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [isCreatingBackup, setIsCreatingBackup] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  // Fetch backup stats\r\n  const { data: backupStats } = useQuery<BackupStats>({\r\n    queryKey: ['admin-backup-stats'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/backup/stats');\r\n      if (!response.ok) throw new Error('Failed to fetch backup stats');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Fetch backups list\r\n  const { data: backups, refetch: refetchBackups } = useQuery<BackupItem[]>({\r\n    queryKey: ['admin-backups'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/backup');\r\n      if (!response.ok) throw new Error('Failed to fetch backups');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Create backup mutation\r\n  const createBackupMutation = useMutation({\r\n    mutationFn: async (data: { type: string; name: string }) => {\r\n      const response = await apiPost('/api/admin/backup/create', data);\r\n      if (!response.ok) throw new Error('Failed to create backup');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Backup created successfully\" });\r\n      refetchBackups();\r\n      setBackupName(\"\");\r\n      setIsCreatingBackup(false);\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error creating backup\", description: error.message, variant: \"destructive\" });\r\n      setIsCreatingBackup(false);\r\n    },\r\n  });\r\n\r\n  // Delete backup mutation\r\n  const deleteBackupMutation = useMutation({\r\n    mutationFn: async (backupId: string) => {\r\n      const response = await apiDelete(`/api/admin/backup/${backupId}`);\r\n      if (!response.ok) throw new Error('Failed to delete backup');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Backup deleted successfully\" });\r\n      refetchBackups();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error deleting backup\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Restore backup mutation\r\n  const restoreBackupMutation = useMutation({\r\n    mutationFn: async (backupId: string) => {\r\n      const response = await apiPost(`/api/admin/backup/${backupId}/restore`);\r\n      if (!response.ok) throw new Error('Failed to restore backup');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Backup restored successfully\" });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error restoring backup\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  const handleCreateBackup = async () => {\r\n    if (!backupName.trim()) {\r\n      toast({ title: \"Please enter a backup name\", variant: \"destructive\" });\r\n      return;\r\n    }\r\n\r\n    setIsCreatingBackup(true);\r\n    await createBackupMutation.mutateAsync({\r\n      type: selectedBackupType,\r\n      name: backupName.trim()\r\n    });\r\n  };\r\n\r\n  const handleDownloadBackup = (backup: BackupItem) => {\r\n    if (backup.downloadUrl) {\r\n      window.open(backup.downloadUrl, '_blank');\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <Badge variant=\"default\"><CheckCircle className=\"h-3 w-3 mr-1\" />Completed</Badge>;\r\n      case 'failed':\r\n        return <Badge variant=\"destructive\"><AlertCircle className=\"h-3 w-3 mr-1\" />Failed</Badge>;\r\n      case 'in_progress':\r\n        return <Badge variant=\"secondary\"><RefreshCw className=\"h-3 w-3 mr-1 animate-spin\" />In Progress</Badge>;\r\n      default:\r\n        return <Badge variant=\"outline\">{status}</Badge>;\r\n    }\r\n  };\r\n\r\n  const getTypeBadge = (type: string) => {\r\n    const badges = {\r\n      full: <Badge className=\"bg-blue-100 text-blue-800\">Full Backup</Badge>,\r\n      settings: <Badge className=\"bg-green-100 text-green-800\">Settings</Badge>,\r\n      data: <Badge className=\"bg-purple-100 text-purple-800\">Data Only</Badge>,\r\n      logs: <Badge className=\"bg-gray-100 text-gray-800\">Logs</Badge>,\r\n    };\r\n    return badges[type as keyof typeof badges] || <Badge variant=\"outline\">{type}</Badge>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-indigo-100 rounded-lg flex items-center justify-center\">\r\n            <Database className=\"h-6 w-6 text-indigo-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Backup & Restore</h2>\r\n            <p className=\"text-neutral-600\">Manage system backups and data exports</p>\r\n          </div>\r\n        </div>\r\n        <Button onClick={() => refetchBackups()} variant=\"outline\">\r\n          <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n          Refresh\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      {backupStats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Backups</CardTitle>\r\n              <Database className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{backupStats.totalBackups}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Size</CardTitle>\r\n              <HardDrive className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{backupStats.totalSize}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Last Backup</CardTitle>\r\n              <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-sm font-medium\">\r\n                {backupStats.lastBackup ? new Date(backupStats.lastBackup).toLocaleDateString() : 'Never'}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Storage Used</CardTitle>\r\n              <Server className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-sm font-medium\">\r\n                {Math.round((backupStats.storageUsed / backupStats.storageLimit) * 100)}%\r\n              </div>\r\n              <Progress value={(backupStats.storageUsed / backupStats.storageLimit) * 100} className=\"mt-2\" />\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"backups\">Backups</TabsTrigger>\r\n          <TabsTrigger value=\"create\">Create Backup</TabsTrigger>\r\n          <TabsTrigger value=\"schedule\">Schedule</TabsTrigger>\r\n          <TabsTrigger value=\"import\">Import/Export</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"backups\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Backup History</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {backups?.map((backup) => (\r\n                  <div key={backup.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div>\r\n                        <div className=\"flex items-center space-x-2 mb-1\">\r\n                          <h3 className=\"font-medium\">{backup.name}</h3>\r\n                          {getTypeBadge(backup.type)}\r\n                          {getStatusBadge(backup.status)}\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\r\n                          <span className=\"flex items-center\">\r\n                            <Calendar className=\"h-3 w-3 mr-1\" />\r\n                            {new Date(backup.createdAt).toLocaleString()}\r\n                          </span>\r\n                          <span className=\"flex items-center\">\r\n                            <HardDrive className=\"h-3 w-3 mr-1\" />\r\n                            {backup.size}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-2\">\r\n                      {backup.status === 'completed' && (\r\n                        <>\r\n                          <Button\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleDownloadBackup(backup)}\r\n                          >\r\n                            <Download className=\"h-4 w-4 mr-1\" />\r\n                            Download\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={() => restoreBackupMutation.mutate(backup.id)}\r\n                            disabled={restoreBackupMutation.isPending}\r\n                          >\r\n                            <Copy className=\"h-4 w-4 mr-1\" />\r\n                            Restore\r\n                          </Button>\r\n                        </>\r\n                      )}\r\n                      <Button\r\n                        variant=\"destructive\"\r\n                        size=\"sm\"\r\n                        onClick={() => deleteBackupMutation.mutate(backup.id)}\r\n                        disabled={deleteBackupMutation.isPending}\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {(!backups || backups.length === 0) && (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    <Database className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                    <p>No backups found. Create your first backup to get started.</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"create\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Create New Backup</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <Label htmlFor=\"backup-name\">Backup Name</Label>\r\n                <Input\r\n                  id=\"backup-name\"\r\n                  placeholder=\"Enter backup name...\"\r\n                  value={backupName}\r\n                  onChange={(e) => setBackupName(e.target.value)}\r\n                  disabled={isCreatingBackup}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"backup-type\">Backup Type</Label>\r\n                <Select\r\n                  value={selectedBackupType}\r\n                  onValueChange={setSelectedBackupType}\r\n                  disabled={isCreatingBackup}\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"full\">Full Backup (All data)</SelectItem>\r\n                    <SelectItem value=\"settings\">Settings Only</SelectItem>\r\n                    <SelectItem value=\"data\">User Data Only</SelectItem>\r\n                    <SelectItem value=\"logs\">Logs Only</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              {isCreatingBackup && (\r\n                <div className=\"space-y-2\">\r\n                  <Label>Creating Backup...</Label>\r\n                  <Progress value={uploadProgress} />\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <Button\r\n                  onClick={handleCreateBackup}\r\n                  disabled={isCreatingBackup || createBackupMutation.isPending}\r\n                >\r\n                  <Database className=\"h-4 w-4 mr-2\" />\r\n                  {isCreatingBackup ? 'Creating...' : 'Create Backup'}\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"schedule\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Backup Schedule</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"schedule-frequency\">Frequency</Label>\r\n                  <Select defaultValue=\"weekly\">\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"daily\">Daily</SelectItem>\r\n                      <SelectItem value=\"weekly\">Weekly</SelectItem>\r\n                      <SelectItem value=\"monthly\">Monthly</SelectItem>\r\n                      <SelectItem value=\"disabled\">Disabled</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"schedule-time\">Time</Label>\r\n                  <Input type=\"time\" defaultValue=\"02:00\" />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"retention-days\">Retention (days)</Label>\r\n                  <Input type=\"number\" defaultValue=\"30\" />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"max-backups\">Max Backups</Label>\r\n                  <Input type=\"number\" defaultValue=\"10\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                <div>\r\n                  <h3 className=\"font-medium\">Auto-cleanup Old Backups</h3>\r\n                  <p className=\"text-sm text-muted-foreground\">Automatically delete backups older than retention period</p>\r\n                </div>\r\n                <input type=\"checkbox\" defaultChecked className=\"rounded\" />\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <Button>\r\n                  <Calendar className=\"h-4 w-4 mr-2\" />\r\n                  Save Schedule\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"import\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Upload className=\"h-5 w-5\" />\r\n                  Import Backup\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <Label htmlFor=\"import-file\">Select Backup File</Label>\r\n                  <Input type=\"file\" accept=\".zip,.tar.gz,.backup\" />\r\n                </div>\r\n                \r\n                <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                  <div className=\"flex items-start space-x-2\">\r\n                    <AlertCircle className=\"h-5 w-5 text-yellow-600 mt-0.5\" />\r\n                    <div>\r\n                      <h3 className=\"font-medium text-yellow-800\">Warning</h3>\r\n                      <p className=\"text-sm text-yellow-700\">\r\n                        Importing a backup will overwrite existing data. This action cannot be undone.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <Button className=\"w-full\">\r\n                  <Upload className=\"h-4 w-4 mr-2\" />\r\n                  Import Backup\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Download className=\"h-5 w-5\" />\r\n                  Quick Export\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                    <Database className=\"h-4 w-4 mr-2\" />\r\n                    Export All Settings\r\n                  </Button>\r\n                  \r\n                  <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                    <HardDrive className=\"h-4 w-4 mr-2\" />\r\n                    Export User Data\r\n                  </Button>\r\n                  \r\n                  <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                    <Server className=\"h-4 w-4 mr-2\" />\r\n                    Export System Logs\r\n                  </Button>\r\n                  \r\n                  <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                    <Copy className=\"h-4 w-4 mr-2\" />\r\n                    Export AI Configurations\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport {\r\n  Shield,\r\n  AlertTriangle,\r\n  Lock,\r\n  Eye,\r\n  Activity,\r\n  Ban,\r\n  CheckCircle,\r\n  XCircle,\r\n  Key,\r\n  Globe,\r\n  Smartphone,\r\n  Clock,\r\n  UserX,\r\n  TrendingUp,\r\n  Filter,\r\n  Download,\r\n  RefreshCw\r\n} from \"lucide-react\";\r\nimport { apiRequest } from '../../lib/apiRequest';\r\n\r\ninterface SecurityEvent {\r\n  id: string;\r\n  type: 'login_attempt' | 'failed_login' | 'suspicious_activity' | 'password_change' | 'admin_action' | 'api_abuse';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  user: {\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n  };\r\n  timestamp: string;\r\n  ipAddress: string;\r\n  userAgent: string;\r\n  location: string;\r\n  details: string;\r\n  status: 'resolved' | 'investigating' | 'blocked' | 'pending';\r\n}\r\n\r\ninterface SecurityMetrics {\r\n  totalEvents: number;\r\n  criticalEvents: number;\r\n  blockedIPs: number;\r\n  failedLogins: number;\r\n  suspiciousActivities: number;\r\n  activeThreats: number;\r\n}\r\n\r\ninterface BlockedIP {\r\n  id: string;\r\n  ipAddress: string;\r\n  reason: string;\r\n  blockedAt: string;\r\n  blockedBy: string;\r\n  attempts: number;\r\n  isActive: boolean;\r\n}\r\n\r\nexport default function SecurityCenter() {\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n  const [selectedSeverity, setSelectedSeverity] = useState<string>(\"all\");\r\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"24h\");\r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n\r\n  // Fetch security metrics\r\n  const { data: securityMetrics } = useQuery<SecurityMetrics>({\r\n    queryKey: ['admin-security-metrics'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/security/metrics');\r\n      if (!response.ok) throw new Error('Failed to fetch security metrics');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Fetch security events\r\n  const { data: securityEvents, refetch: refetchEvents } = useQuery<SecurityEvent[]>({\r\n    queryKey: ['admin-security-events', selectedSeverity, selectedTimeRange],\r\n    queryFn: async () => {\r\n      const params = new URLSearchParams({\r\n        severity: selectedSeverity,\r\n        timeRange: selectedTimeRange\r\n      });\r\n      const response = await fetch(`/api/admin/security/events?${params}`);\r\n      if (!response.ok) throw new Error('Failed to fetch security events');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Fetch blocked IPs\r\n  const { data: blockedIPs, refetch: refetchBlockedIPs } = useQuery<BlockedIP[]>({\r\n    queryKey: ['admin-security-blocked-ips'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/security/blocked-ips');\r\n      if (!response.ok) throw new Error('Failed to fetch blocked IPs');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Block IP mutation\r\n  const blockIPMutation = useMutation({\r\n    mutationFn: async (data: { ipAddress: string; reason: string }) => {\r\n      const response = await apiRequest('/api/admin/security/block-ip', {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n      });\r\n      if (!response.ok) throw new Error('Failed to block IP');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"IP address blocked successfully\" });\r\n      refetchBlockedIPs();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error blocking IP\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Unblock IP mutation\r\n  const unblockIPMutation = useMutation({\r\n    mutationFn: async (ipId: string) => {\r\n      const response = await apiRequest(`/api/admin/security/unblock-ip/${ipId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to unblock IP');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"IP address unblocked successfully\" });\r\n      refetchBlockedIPs();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error unblocking IP\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Resolve security event mutation\r\n  const resolveEventMutation = useMutation({\r\n    mutationFn: async (eventId: string) => {\r\n      const response = await apiRequest(`/api/admin/security/events/${eventId}/resolve`, {\r\n        method: 'POST',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to resolve event');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Security event resolved\" });\r\n      refetchEvents();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error resolving event\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  const getSeverityBadge = (severity: string) => {\r\n    const variants = {\r\n      low: <Badge variant=\"secondary\">Low</Badge>,\r\n      medium: <Badge variant=\"outline\">Medium</Badge>,\r\n      high: <Badge className=\"bg-orange-100 text-orange-800\">High</Badge>,\r\n      critical: <Badge variant=\"destructive\">Critical</Badge>,\r\n    };\r\n    return variants[severity as keyof typeof variants] || <Badge>{severity}</Badge>;\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    const variants = {\r\n      resolved: <Badge variant=\"default\"><CheckCircle className=\"h-3 w-3 mr-1\" />Resolved</Badge>,\r\n      investigating: <Badge variant=\"secondary\"><Eye className=\"h-3 w-3 mr-1\" />Investigating</Badge>,\r\n      blocked: <Badge variant=\"destructive\"><Ban className=\"h-3 w-3 mr-1\" />Blocked</Badge>,\r\n      pending: <Badge variant=\"outline\"><Clock className=\"h-3 w-3 mr-1\" />Pending</Badge>,\r\n    };\r\n    return variants[status as keyof typeof variants] || <Badge>{status}</Badge>;\r\n  };\r\n\r\n  const getEventIcon = (type: string) => {\r\n    const icons = {\r\n      login_attempt: Activity,\r\n      failed_login: XCircle,\r\n      suspicious_activity: AlertTriangle,\r\n      password_change: Key,\r\n      admin_action: Shield,\r\n      api_abuse: Globe,\r\n    };\r\n    const IconComponent = icons[type as keyof typeof icons] || Activity;\r\n    return <IconComponent className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center\">\r\n            <Shield className=\"h-6 w-6 text-red-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Security Center</h2>\r\n            <p className=\"text-neutral-600\">Monitor and manage system security</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button onClick={() => refetchEvents()} variant=\"outline\">\r\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n            Refresh\r\n          </Button>\r\n          <Button variant=\"outline\">\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export Report\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Security Metrics */}\r\n      {securityMetrics && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Events</CardTitle>\r\n              <Activity className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{securityMetrics.totalEvents}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Critical Events</CardTitle>\r\n              <AlertTriangle className=\"h-4 w-4 text-red-500\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-red-600\">{securityMetrics.criticalEvents}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Blocked IPs</CardTitle>\r\n              <Ban className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{securityMetrics.blockedIPs}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Failed Logins</CardTitle>\r\n              <XCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{securityMetrics.failedLogins}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Suspicious Activities</CardTitle>\r\n              <Eye className=\"h-4 w-4 text-orange-500\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-orange-600\">{securityMetrics.suspiciousActivities}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Active Threats</CardTitle>\r\n              <TrendingUp className=\"h-4 w-4 text-red-500\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-red-600\">{securityMetrics.activeThreats}</div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"events\">Security Events</TabsTrigger>\r\n          <TabsTrigger value=\"blocked-ips\">Blocked IPs</TabsTrigger>\r\n          <TabsTrigger value=\"settings\">Security Settings</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\r\n                  Recent Critical Events\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {securityEvents?.filter(e => e.severity === 'critical').slice(0, 5).map((event) => (\r\n                    <div key={event.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        {getEventIcon(event.type)}\r\n                        <div>\r\n                          <p className=\"font-medium text-sm\">{event.details}</p>\r\n                          <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\r\n                            <span>{event.user.email}</span>\r\n                            <span>•</span>\r\n                            <span>{new Date(event.timestamp).toLocaleString()}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {getSeverityBadge(event.severity)}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Ban className=\"h-5 w-5 text-red-500\" />\r\n                  Recent Blocked IPs\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {blockedIPs?.filter(ip => ip.isActive).slice(0, 5).map((ip) => (\r\n                    <div key={ip.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                      <div>\r\n                        <p className=\"font-medium text-sm\">{ip.ipAddress}</p>\r\n                        <p className=\"text-xs text-muted-foreground\">{ip.reason}</p>\r\n                        <p className=\"text-xs text-muted-foreground\">\r\n                          {ip.attempts} attempts • Blocked {new Date(ip.blockedAt).toLocaleString()}\r\n                        </p>\r\n                      </div>\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => unblockIPMutation.mutate(ip.id)}\r\n                      >\r\n                        Unblock\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"events\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle>Security Events</CardTitle>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Select value={selectedSeverity} onValueChange={setSelectedSeverity}>\r\n                    <SelectTrigger className=\"w-32\">\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">All Severity</SelectItem>\r\n                      <SelectItem value=\"critical\">Critical</SelectItem>\r\n                      <SelectItem value=\"high\">High</SelectItem>\r\n                      <SelectItem value=\"medium\">Medium</SelectItem>\r\n                      <SelectItem value=\"low\">Low</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n\r\n                  <Select value={selectedTimeRange} onValueChange={setSelectedTimeRange}>\r\n                    <SelectTrigger className=\"w-32\">\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"1h\">Last Hour</SelectItem>\r\n                      <SelectItem value=\"24h\">Last 24h</SelectItem>\r\n                      <SelectItem value=\"7d\">Last 7 days</SelectItem>\r\n                      <SelectItem value=\"30d\">Last 30 days</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {securityEvents?.map((event) => (\r\n                  <div key={event.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      {getEventIcon(event.type)}\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center space-x-2 mb-1\">\r\n                          <p className=\"font-medium\">{event.details}</p>\r\n                          {getSeverityBadge(event.severity)}\r\n                          {getStatusBadge(event.status)}\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\r\n                          <span className=\"flex items-center\">\r\n                            <UserX className=\"h-3 w-3 mr-1\" />\r\n                            {event.user.email}\r\n                          </span>\r\n                          <span className=\"flex items-center\">\r\n                            <Globe className=\"h-3 w-3 mr-1\" />\r\n                            {event.ipAddress}\r\n                          </span>\r\n                          <span className=\"flex items-center\">\r\n                            <Clock className=\"h-3 w-3 mr-1\" />\r\n                            {new Date(event.timestamp).toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"text-sm text-muted-foreground mt-1\">\r\n                          {event.location} • {event.userAgent.substring(0, 50)}...\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-2\">\r\n                      {event.status !== 'resolved' && (\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => resolveEventMutation.mutate(event.id)}\r\n                        >\r\n                          Resolve\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        variant=\"destructive\"\r\n                        size=\"sm\"\r\n                        onClick={() => blockIPMutation.mutate({\r\n                          ipAddress: event.ipAddress,\r\n                          reason: `Security event: ${event.details}`\r\n                        })}\r\n                      >\r\n                        Block IP\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {(!securityEvents || securityEvents.length === 0) && (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    <Shield className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                    <p>No security events found for the selected criteria.</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"blocked-ips\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Blocked IP Addresses</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Input placeholder=\"Enter IP address to block...\" className=\"flex-1\" />\r\n                  <Input placeholder=\"Reason...\" className=\"flex-1\" />\r\n                  <Button>Block IP</Button>\r\n                </div>\r\n\r\n                <div className=\"space-y-3\">\r\n                  {blockedIPs?.map((ip) => (\r\n                    <div key={ip.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                      <div>\r\n                        <div className=\"flex items-center space-x-2 mb-1\">\r\n                          <p className=\"font-medium\">{ip.ipAddress}</p>\r\n                          <Badge variant={ip.isActive ? \"destructive\" : \"secondary\"}>\r\n                            {ip.isActive ? \"Active\" : \"Inactive\"}\r\n                          </Badge>\r\n                        </div>\r\n                        <p className=\"text-sm text-muted-foreground\">{ip.reason}</p>\r\n                        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\r\n                          <span>{ip.attempts} attempts</span>\r\n                          <span>Blocked by {ip.blockedBy}</span>\r\n                          <span>{new Date(ip.blockedAt).toLocaleString()}</span>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {ip.isActive ? (\r\n                          <Button\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={() => unblockIPMutation.mutate(ip.id)}\r\n                          >\r\n                            Unblock\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"destructive\"\r\n                            size=\"sm\"\r\n                            onClick={() => blockIPMutation.mutate({\r\n                              ipAddress: ip.ipAddress,\r\n                              reason: ip.reason\r\n                            })}\r\n                          >\r\n                            Reactivate\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"settings\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Security Policies</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Auto-block Suspicious IPs</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Automatically block IPs with suspicious activity</p>\r\n                  </div>\r\n                  <Switch defaultChecked />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Rate Limiting</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Enable API rate limiting</p>\r\n                  </div>\r\n                  <Switch defaultChecked />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Failed Login Monitoring</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Monitor and alert on failed login attempts</p>\r\n                  </div>\r\n                  <Switch defaultChecked />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Max Login Attempts</Label>\r\n                  <Input type=\"number\" defaultValue=\"5\" />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Lockout Duration (minutes)</Label>\r\n                  <Input type=\"number\" defaultValue=\"15\" />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Notification Settings</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Email Alerts</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Send email alerts for security events</p>\r\n                  </div>\r\n                  <Switch defaultChecked />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Slack Notifications</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Send alerts to Slack channel</p>\r\n                  </div>\r\n                  <Switch />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Alert Threshold</Label>\r\n                  <Select defaultValue=\"medium\">\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"low\">Low and above</SelectItem>\r\n                      <SelectItem value=\"medium\">Medium and above</SelectItem>\r\n                      <SelectItem value=\"high\">High and above</SelectItem>\r\n                      <SelectItem value=\"critical\">Critical only</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Admin Email</Label>\r\n                  <Input type=\"email\" placeholder=\"admin@example.com\" />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import { useState } from \"react\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { apiRequest } from \"@/lib/apiRequest\";\r\nimport { \r\n  Bell, \r\n  Mail, \r\n  MessageSquare, \r\n  Send, \r\n  Users, \r\n  Clock, \r\n  CheckCircle, \r\n  AlertCircle,\r\n  Settings,\r\n  Filter,\r\n  Plus,\r\n  Edit,\r\n  Trash2,\r\n  Copy,\r\n  Eye,\r\n  Calendar,\r\n  Zap\r\n} from \"lucide-react\";\r\n\r\ninterface Notification {\r\n  id: string;\r\n  title: string;\r\n  message: string;\r\n  type: 'info' | 'warning' | 'error' | 'success';\r\n  priority: 'low' | 'medium' | 'high' | 'urgent';\r\n  status: 'draft' | 'scheduled' | 'sent' | 'failed';\r\n  channels: ('email' | 'push' | 'sms' | 'slack' | 'discord')[];\r\n  recipients: {\r\n    type: 'all' | 'premium' | 'free' | 'custom';\r\n    customList?: string[];\r\n    count: number;\r\n  };\r\n  scheduledAt?: string;\r\n  sentAt?: string;\r\n  createdAt: string;\r\n  createdBy: string;\r\n  openRate?: number;\r\n  clickRate?: number;\r\n}\r\n\r\ninterface NotificationTemplate {\r\n  id: string;\r\n  name: string;\r\n  subject: string;\r\n  content: string;\r\n  type: 'email' | 'push' | 'sms';\r\n  variables: string[];\r\n  isActive: boolean;\r\n}\r\n\r\ninterface NotificationStats {\r\n  totalSent: number;\r\n  totalScheduled: number;\r\n  averageOpenRate: number;\r\n  averageClickRate: number;\r\n  failedDeliveries: number;\r\n  activeSubscribers: number;\r\n}\r\n\r\nexport default function NotificationCenter() {\r\n  const [activeTab, setActiveTab] = useState(\"notifications\");\r\n  const [selectedType, setSelectedType] = useState<string>(\"all\");\r\n  const [selectedStatus, setSelectedStatus] = useState<string>(\"all\");\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [newNotification, setNewNotification] = useState({\r\n    title: '',\r\n    message: '',\r\n    type: 'info' as const,\r\n    priority: 'medium' as const,\r\n    channels: [] as string[],\r\n    recipients: { type: 'all' as const, count: 0 }\r\n  });\r\n  \r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n\r\n  // Fetch notification stats\r\n  const { data: notificationStats } = useQuery<NotificationStats>({\r\n    queryKey: ['admin-notification-stats'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/notifications/stats');\r\n      if (!response.ok) throw new Error('Failed to fetch notification stats');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Fetch notifications\r\n  const { data: notifications, refetch: refetchNotifications } = useQuery<Notification[]>({\r\n    queryKey: ['admin-notifications', selectedType, selectedStatus],\r\n    queryFn: async () => {\r\n      const params = new URLSearchParams({\r\n        type: selectedType,\r\n        status: selectedStatus\r\n      });\r\n      const response = await fetch(`/api/admin/notifications?${params}`);\r\n      if (!response.ok) throw new Error('Failed to fetch notifications');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Fetch notification templates\r\n  const { data: templates } = useQuery<NotificationTemplate[]>({\r\n    queryKey: ['admin-notification-templates'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/notifications/templates');\r\n      if (!response.ok) throw new Error('Failed to fetch templates');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Create notification mutation\r\n  const createNotificationMutation = useMutation({\r\n    mutationFn: async (data: any) => {\r\n      const response = await apiRequest('/api/admin/notifications', {\r\n        method: 'POST',\r\n        body: data,\r\n      });\r\n      if (!response.ok) throw new Error('Failed to create notification');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Notification created successfully\" });\r\n      refetchNotifications();\r\n      setIsCreating(false);\r\n      setNewNotification({\r\n        title: '',\r\n        message: '',\r\n        type: 'info',\r\n        priority: 'medium',\r\n        channels: [],\r\n        recipients: { type: 'all', count: 0 }\r\n      });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error creating notification\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Send notification mutation\r\n  const sendNotificationMutation = useMutation({\r\n    mutationFn: async (notificationId: string) => {\r\n      const response = await apiRequest(`/api/admin/notifications/${notificationId}/send`, {\r\n        method: 'POST',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to send notification');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Notification sent successfully\" });\r\n      refetchNotifications();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error sending notification\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  const getTypeBadge = (type: string) => {\r\n    const variants = {\r\n      info: <Badge variant=\"secondary\">Info</Badge>,\r\n      warning: <Badge className=\"bg-yellow-100 text-yellow-800\">Warning</Badge>,\r\n      error: <Badge variant=\"destructive\">Error</Badge>,\r\n      success: <Badge variant=\"default\">Success</Badge>,\r\n    };\r\n    return variants[type as keyof typeof variants] || <Badge>{type}</Badge>;\r\n  };\r\n\r\n  const getPriorityBadge = (priority: string) => {\r\n    const variants = {\r\n      low: <Badge variant=\"outline\">Low</Badge>,\r\n      medium: <Badge variant=\"secondary\">Medium</Badge>,\r\n      high: <Badge className=\"bg-orange-100 text-orange-800\">High</Badge>,\r\n      urgent: <Badge variant=\"destructive\">Urgent</Badge>,\r\n    };\r\n    return variants[priority as keyof typeof variants] || <Badge>{priority}</Badge>;\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    const variants = {\r\n      draft: <Badge variant=\"outline\">Draft</Badge>,\r\n      scheduled: <Badge className=\"bg-blue-100 text-blue-800\">Scheduled</Badge>,\r\n      sent: <Badge variant=\"default\">Sent</Badge>,\r\n      failed: <Badge variant=\"destructive\">Failed</Badge>,\r\n    };\r\n    return variants[status as keyof typeof variants] || <Badge>{status}</Badge>;\r\n  };\r\n\r\n  const handleCreateNotification = async () => {\r\n    if (!newNotification.title || !newNotification.message) {\r\n      toast({ title: \"Please fill in all required fields\", variant: \"destructive\" });\r\n      return;\r\n    }\r\n\r\n    await createNotificationMutation.mutateAsync(newNotification);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n            <Bell className=\"h-6 w-6 text-purple-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Notification Center</h2>\r\n            <p className=\"text-neutral-600\">Manage system notifications and alerts</p>\r\n          </div>\r\n        </div>\r\n        <Button onClick={() => setIsCreating(true)}>\r\n          <Plus className=\"h-4 w-4 mr-2\" />\r\n          Create Notification\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      {notificationStats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Sent</CardTitle>\r\n              <Send className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{notificationStats.totalSent}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Scheduled</CardTitle>\r\n              <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{notificationStats.totalScheduled}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Open Rate</CardTitle>\r\n              <Eye className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{notificationStats.averageOpenRate}%</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Click Rate</CardTitle>\r\n              <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{notificationStats.averageClickRate}%</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Failed</CardTitle>\r\n              <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-red-600\">{notificationStats.failedDeliveries}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Subscribers</CardTitle>\r\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{notificationStats.activeSubscribers}</div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"notifications\">Notifications</TabsTrigger>\r\n          <TabsTrigger value=\"templates\">Templates</TabsTrigger>\r\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"notifications\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle>Notifications</CardTitle>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Select value={selectedType} onValueChange={setSelectedType}>\r\n                    <SelectTrigger className=\"w-32\">\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">All Types</SelectItem>\r\n                      <SelectItem value=\"info\">Info</SelectItem>\r\n                      <SelectItem value=\"warning\">Warning</SelectItem>\r\n                      <SelectItem value=\"error\">Error</SelectItem>\r\n                      <SelectItem value=\"success\">Success</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n\r\n                  <Select value={selectedStatus} onValueChange={setSelectedStatus}>\r\n                    <SelectTrigger className=\"w-32\">\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">All Status</SelectItem>\r\n                      <SelectItem value=\"draft\">Draft</SelectItem>\r\n                      <SelectItem value=\"scheduled\">Scheduled</SelectItem>\r\n                      <SelectItem value=\"sent\">Sent</SelectItem>\r\n                      <SelectItem value=\"failed\">Failed</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {notifications?.map((notification) => (\r\n                  <div key={notification.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center space-x-2 mb-2\">\r\n                        <h3 className=\"font-medium\">{notification.title}</h3>\r\n                        {getTypeBadge(notification.type)}\r\n                        {getPriorityBadge(notification.priority)}\r\n                        {getStatusBadge(notification.status)}\r\n                      </div>\r\n                      <p className=\"text-sm text-muted-foreground mb-2\">{notification.message}</p>\r\n                      <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\r\n                        <span className=\"flex items-center\">\r\n                          <Users className=\"h-3 w-3 mr-1\" />\r\n                          {notification.recipients.count} recipients\r\n                        </span>\r\n                        <span className=\"flex items-center\">\r\n                          <Calendar className=\"h-3 w-3 mr-1\" />\r\n                          {new Date(notification.createdAt).toLocaleString()}\r\n                        </span>\r\n                        {notification.openRate && (\r\n                          <span className=\"flex items-center\">\r\n                            <Eye className=\"h-3 w-3 mr-1\" />\r\n                            {notification.openRate}% open rate\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2 mt-2\">\r\n                        {notification.channels.map((channel) => (\r\n                          <Badge key={channel} variant=\"outline\" className=\"text-xs\">\r\n                            {channel}\r\n                          </Badge>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-2\">\r\n                      {notification.status === 'draft' && (\r\n                        <Button\r\n                          variant=\"default\"\r\n                          size=\"sm\"\r\n                          onClick={() => sendNotificationMutation.mutate(notification.id)}\r\n                        >\r\n                          <Send className=\"h-4 w-4 mr-1\" />\r\n                          Send\r\n                        </Button>\r\n                      )}\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Copy className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button variant=\"destructive\" size=\"sm\">\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {(!notifications || notifications.length === 0) && (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    <Bell className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                    <p>No notifications found for the selected criteria.</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"templates\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle>Notification Templates</CardTitle>\r\n                <Button>\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  Create Template\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {templates?.map((template) => (\r\n                  <div key={template.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div>\r\n                      <div className=\"flex items-center space-x-2 mb-1\">\r\n                        <h3 className=\"font-medium\">{template.name}</h3>\r\n                        <Badge variant=\"outline\">{template.type}</Badge>\r\n                        <Badge variant={template.isActive ? \"default\" : \"secondary\"}>\r\n                          {template.isActive ? \"Active\" : \"Inactive\"}\r\n                        </Badge>\r\n                      </div>\r\n                      <p className=\"text-sm text-muted-foreground\">{template.subject}</p>\r\n                      <div className=\"flex items-center space-x-2 mt-2\">\r\n                        {template.variables.map((variable) => (\r\n                          <Badge key={variable} variant=\"outline\" className=\"text-xs\">\r\n                            {variable}\r\n                          </Badge>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Copy className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button variant=\"destructive\" size=\"sm\">\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"settings\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Notification Channels</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Email Notifications</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Send notifications via email</p>\r\n                  </div>\r\n                  <Switch defaultChecked />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Push Notifications</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Send browser push notifications</p>\r\n                  </div>\r\n                  <Switch defaultChecked />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">SMS Notifications</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Send SMS notifications</p>\r\n                  </div>\r\n                  <Switch />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Slack Integration</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Send notifications to Slack</p>\r\n                  </div>\r\n                  <Switch />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Delivery Settings</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Default Send Time</Label>\r\n                  <Input type=\"time\" defaultValue=\"09:00\" />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Max Daily Notifications</Label>\r\n                  <Input type=\"number\" defaultValue=\"5\" />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Retry Failed Deliveries</Label>\r\n                  <Select defaultValue=\"3\">\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"1\">1 time</SelectItem>\r\n                      <SelectItem value=\"3\">3 times</SelectItem>\r\n                      <SelectItem value=\"5\">5 times</SelectItem>\r\n                      <SelectItem value=\"0\">Never</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <Label className=\"text-base font-medium\">Delivery Confirmation</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">Track delivery status</p>\r\n                  </div>\r\n                  <Switch defaultChecked />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"analytics\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Delivery Analytics</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Email Delivery Rate</span>\r\n                    <span className=\"font-medium\">95.2%</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Push Delivery Rate</span>\r\n                    <span className=\"font-medium\">87.8%</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>SMS Delivery Rate</span>\r\n                    <span className=\"font-medium\">99.1%</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Average Open Rate</span>\r\n                    <span className=\"font-medium\">24.3%</span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Engagement Metrics</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Click-through Rate</span>\r\n                    <span className=\"font-medium\">3.2%</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Unsubscribe Rate</span>\r\n                    <span className=\"font-medium\">0.8%</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Bounce Rate</span>\r\n                    <span className=\"font-medium\">2.1%</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Complaint Rate</span>\r\n                    <span className=\"font-medium\">0.1%</span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* Create Notification Dialog */}\r\n      {isCreating && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl mx-4\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Create New Notification</h3>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <Label htmlFor=\"title\">Title</Label>\r\n                <Input\r\n                  id=\"title\"\r\n                  value={newNotification.title}\r\n                  onChange={(e) => setNewNotification({...newNotification, title: e.target.value})}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"message\">Message</Label>\r\n                <Textarea\r\n                  id=\"message\"\r\n                  value={newNotification.message}\r\n                  onChange={(e) => setNewNotification({...newNotification, message: e.target.value})}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label>Type</Label>\r\n                  <Select\r\n                    value={newNotification.type}\r\n                    onValueChange={(value: any) => setNewNotification({...newNotification, type: value})}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"info\">Info</SelectItem>\r\n                      <SelectItem value=\"warning\">Warning</SelectItem>\r\n                      <SelectItem value=\"error\">Error</SelectItem>\r\n                      <SelectItem value=\"success\">Success</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Priority</Label>\r\n                  <Select\r\n                    value={newNotification.priority}\r\n                    onValueChange={(value: any) => setNewNotification({...newNotification, priority: value})}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"low\">Low</SelectItem>\r\n                      <SelectItem value=\"medium\">Medium</SelectItem>\r\n                      <SelectItem value=\"high\">High</SelectItem>\r\n                      <SelectItem value=\"urgent\">Urgent</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <Label>Channels</Label>\r\n                <div className=\"flex items-center space-x-4 mt-2\">\r\n                  {['email', 'push', 'sms', 'slack'].map((channel) => (\r\n                    <div key={channel} className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        checked={newNotification.channels.includes(channel)}\r\n                        onCheckedChange={(checked) => {\r\n                          if (checked) {\r\n                            setNewNotification({\r\n                              ...newNotification,\r\n                              channels: [...newNotification.channels, channel]\r\n                            });\r\n                          } else {\r\n                            setNewNotification({\r\n                              ...newNotification,\r\n                              channels: newNotification.channels.filter(c => c !== channel)\r\n                            });\r\n                          }\r\n                        }}\r\n                      />\r\n                      <Label className=\"capitalize\">{channel}</Label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-2 mt-6\">\r\n              <Button variant=\"outline\" onClick={() => setIsCreating(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleCreateNotification} disabled={createNotificationMutation.isPending}>\r\n                Create Notification\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { \r\n  Activity, \r\n  Users, \r\n  DollarSign, \r\n  Bot, \r\n  TrendingUp, \r\n  TrendingDown,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Clock,\r\n  Globe,\r\n  Smartphone,\r\n  Monitor,\r\n  Brain,\r\n  Zap,\r\n  Database,\r\n  Shield,\r\n  Bell,\r\n  RefreshCw\r\n} from \"lucide-react\";\r\n\r\ninterface DashboardStats {\r\n  users: {\r\n    total: number;\r\n    premium: number;\r\n    active: number;\r\n    newToday: number;\r\n    growthRate: number;\r\n  };\r\n  revenue: {\r\n    total: number;\r\n    monthly: number;\r\n    daily: number;\r\n    growthRate: number;\r\n  };\r\n  ai: {\r\n    totalAnalyses: number;\r\n    successRate: number;\r\n    averageResponseTime: number;\r\n    costToday: number;\r\n  };\r\n  system: {\r\n    uptime: number;\r\n    cpuUsage: number;\r\n    memoryUsage: number;\r\n    diskUsage: number;\r\n    activeConnections: number;\r\n  };\r\n  security: {\r\n    threatsBlocked: number;\r\n    failedLogins: number;\r\n    activeThreats: number;\r\n    lastIncident: string;\r\n  };\r\n}\r\n\r\ninterface RecentActivity {\r\n  id: string;\r\n  type: 'user_registration' | 'premium_upgrade' | 'ai_analysis' | 'system_alert' | 'security_event';\r\n  message: string;\r\n  timestamp: string;\r\n  severity?: 'low' | 'medium' | 'high' | 'critical';\r\n  user?: {\r\n    name: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\ninterface SystemAlert {\r\n  id: string;\r\n  title: string;\r\n  message: string;\r\n  severity: 'info' | 'warning' | 'error' | 'critical';\r\n  timestamp: string;\r\n  acknowledged: boolean;\r\n}\r\n\r\nexport default function AdvancedDashboard() {\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n  const [autoRefresh, setAutoRefresh] = useState(true);\r\n\r\n  // Fetch dashboard stats\r\n  const { data: dashboardStats, refetch: refetchStats } = useQuery<DashboardStats>({\r\n    queryKey: ['admin-dashboard-stats'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/dashboard/stats');\r\n      if (!response.ok) throw new Error('Failed to fetch dashboard stats');\r\n      return response.json();\r\n    },\r\n    refetchInterval: autoRefresh ? 30000 : false, // Refresh every 30 seconds\r\n  });\r\n\r\n  // Fetch recent activity\r\n  const { data: recentActivity } = useQuery<RecentActivity[]>({\r\n    queryKey: ['admin-dashboard-activity'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/dashboard/activity');\r\n      if (!response.ok) throw new Error('Failed to fetch recent activity');\r\n      return response.json();\r\n    },\r\n    refetchInterval: autoRefresh ? 15000 : false, // Refresh every 15 seconds\r\n  });\r\n\r\n  // Fetch system alerts\r\n  const { data: systemAlerts } = useQuery<SystemAlert[]>({\r\n    queryKey: ['admin-dashboard-alerts'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/dashboard/alerts');\r\n      if (!response.ok) throw new Error('Failed to fetch system alerts');\r\n      return response.json();\r\n    },\r\n    refetchInterval: autoRefresh ? 10000 : false, // Refresh every 10 seconds\r\n  });\r\n\r\n  const getActivityIcon = (type: string) => {\r\n    const icons = {\r\n      user_registration: Users,\r\n      premium_upgrade: DollarSign,\r\n      ai_analysis: Bot,\r\n      system_alert: AlertTriangle,\r\n      security_event: Shield,\r\n    };\r\n    const IconComponent = icons[type as keyof typeof icons] || Activity;\r\n    return <IconComponent className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    const colors = {\r\n      low: 'text-green-600',\r\n      medium: 'text-yellow-600',\r\n      high: 'text-orange-600',\r\n      critical: 'text-red-600',\r\n      info: 'text-blue-600',\r\n      warning: 'text-yellow-600',\r\n      error: 'text-red-600',\r\n    };\r\n    return colors[severity as keyof typeof colors] || 'text-gray-600';\r\n  };\r\n\r\n  const getUsageColor = (percentage: number) => {\r\n    if (percentage >= 90) return 'bg-red-500';\r\n    if (percentage >= 75) return 'bg-orange-500';\r\n    if (percentage >= 50) return 'bg-yellow-500';\r\n    return 'bg-green-500';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-neutral-900\">Dashboard Overview</h2>\r\n          <p className=\"text-neutral-600\">Real-time system monitoring and analytics</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button\r\n            variant={autoRefresh ? \"default\" : \"outline\"}\r\n            size=\"sm\"\r\n            onClick={() => setAutoRefresh(!autoRefresh)}\r\n          >\r\n            {autoRefresh ? (\r\n              <Activity className=\"h-4 w-4 mr-2 animate-pulse\" />\r\n            ) : (\r\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n            )}\r\n            {autoRefresh ? 'Live' : 'Manual'}\r\n          </Button>\r\n          <Button onClick={() => refetchStats()} variant=\"outline\" size=\"sm\">\r\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Critical Alerts */}\r\n      {(systemAlerts?.filter(alert => alert.severity === 'critical' && !alert.acknowledged).length || 0) > 0 && (\r\n        <Card className=\"border-red-200 bg-red-50\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-red-800 flex items-center gap-2\">\r\n              <AlertTriangle className=\"h-5 w-5\" />\r\n              Critical Alerts Require Attention\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-2\">\r\n              {(systemAlerts || [])\r\n                .filter(alert => alert.severity === 'critical' && !alert.acknowledged)\r\n                .map((alert) => (\r\n                  <div key={alert.id} className=\"flex items-center justify-between p-3 bg-white rounded border\">\r\n                    <div>\r\n                      <p className=\"font-medium text-red-900\">{alert.title}</p>\r\n                      <p className=\"text-sm text-red-700\">{alert.message}</p>\r\n                    </div>\r\n                    <Button variant=\"destructive\" size=\"sm\">\r\n                      Acknowledge\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"performance\">Performance</TabsTrigger>\r\n          <TabsTrigger value=\"activity\">Activity</TabsTrigger>\r\n          <TabsTrigger value=\"alerts\">Alerts</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {/* Main Stats Grid */}\r\n          {dashboardStats && (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              {/* Users Stats */}\r\n              <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\r\n                  <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">{dashboardStats.users.total.toLocaleString()}</div>\r\n                  <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\r\n                    <div className=\"flex items-center\">\r\n                      {dashboardStats.users.growthRate > 0 ? (\r\n                        <TrendingUp className=\"h-3 w-3 text-green-600 mr-1\" />\r\n                      ) : (\r\n                        <TrendingDown className=\"h-3 w-3 text-red-600 mr-1\" />\r\n                      )}\r\n                      <span className={dashboardStats.users.growthRate > 0 ? 'text-green-600' : 'text-red-600'}>\r\n                        {Math.abs(dashboardStats.users.growthRate)}%\r\n                      </span>\r\n                    </div>\r\n                    <span>•</span>\r\n                    <span>{dashboardStats.users.newToday} new today</span>\r\n                  </div>\r\n                  <div className=\"mt-2 space-y-1\">\r\n                    <div className=\"flex justify-between text-xs\">\r\n                      <span>Premium: {dashboardStats.users.premium}</span>\r\n                      <span>Active: {dashboardStats.users.active}</span>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Revenue Stats */}\r\n              <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">Revenue</CardTitle>\r\n                  <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">${dashboardStats.revenue.total.toLocaleString()}</div>\r\n                  <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\r\n                    <div className=\"flex items-center\">\r\n                      {dashboardStats.revenue.growthRate > 0 ? (\r\n                        <TrendingUp className=\"h-3 w-3 text-green-600 mr-1\" />\r\n                      ) : (\r\n                        <TrendingDown className=\"h-3 w-3 text-red-600 mr-1\" />\r\n                      )}\r\n                      <span className={dashboardStats.revenue.growthRate > 0 ? 'text-green-600' : 'text-red-600'}>\r\n                        {Math.abs(dashboardStats.revenue.growthRate)}%\r\n                      </span>\r\n                    </div>\r\n                    <span>•</span>\r\n                    <span>${dashboardStats.revenue.daily} today</span>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                    <div className=\"text-xs text-muted-foreground\">\r\n                      Monthly: ${dashboardStats.revenue.monthly.toLocaleString()}\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* AI Performance */}\r\n              <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">AI Analyses</CardTitle>\r\n                  <Bot className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">{dashboardStats.ai.totalAnalyses.toLocaleString()}</div>\r\n                  <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\r\n                    <CheckCircle className=\"h-3 w-3 text-green-600\" />\r\n                    <span>{dashboardStats.ai.successRate}% success rate</span>\r\n                  </div>\r\n                  <div className=\"mt-2 space-y-1\">\r\n                    <div className=\"flex justify-between text-xs\">\r\n                      <span>Avg Response: {dashboardStats.ai.averageResponseTime}ms</span>\r\n                      <span>Cost Today: ${dashboardStats.ai.costToday}</span>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* System Health */}\r\n              <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">System Health</CardTitle>\r\n                  <Monitor className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">{dashboardStats.system.uptime}%</div>\r\n                  <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\r\n                    <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                    <span>System Online</span>\r\n                  </div>\r\n                  <div className=\"mt-2 space-y-1\">\r\n                    <div className=\"flex justify-between text-xs\">\r\n                      <span>CPU: {dashboardStats.system.cpuUsage}%</span>\r\n                      <span>Memory: {dashboardStats.system.memoryUsage}%</span>\r\n                    </div>\r\n                    <div className=\"text-xs text-muted-foreground\">\r\n                      {dashboardStats.system.activeConnections} active connections\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n\r\n          {/* System Resources */}\r\n          {dashboardStats && (\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Monitor className=\"h-5 w-5\" />\r\n                    System Resources\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm mb-1\">\r\n                      <span>CPU Usage</span>\r\n                      <span>{dashboardStats.system.cpuUsage}%</span>\r\n                    </div>\r\n                    <Progress \r\n                      value={dashboardStats.system.cpuUsage} \r\n                      className={`h-2 ${getUsageColor(dashboardStats.system.cpuUsage)}`}\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm mb-1\">\r\n                      <span>Memory Usage</span>\r\n                      <span>{dashboardStats.system.memoryUsage}%</span>\r\n                    </div>\r\n                    <Progress \r\n                      value={dashboardStats.system.memoryUsage} \r\n                      className={`h-2 ${getUsageColor(dashboardStats.system.memoryUsage)}`}\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm mb-1\">\r\n                      <span>Disk Usage</span>\r\n                      <span>{dashboardStats.system.diskUsage}%</span>\r\n                    </div>\r\n                    <Progress \r\n                      value={dashboardStats.system.diskUsage} \r\n                      className={`h-2 ${getUsageColor(dashboardStats.system.diskUsage)}`}\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Shield className=\"h-5 w-5\" />\r\n                    Security Overview\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-red-600\">{dashboardStats.security.threatsBlocked}</div>\r\n                      <div className=\"text-sm text-muted-foreground\">Threats Blocked</div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-orange-600\">{dashboardStats.security.failedLogins}</div>\r\n                      <div className=\"text-sm text-muted-foreground\">Failed Logins</div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm\">Active Threats</span>\r\n                    <Badge variant={dashboardStats.security.activeThreats > 0 ? \"destructive\" : \"default\"}>\r\n                      {dashboardStats.security.activeThreats}\r\n                    </Badge>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-xs text-muted-foreground\">\r\n                    Last incident: {dashboardStats.security.lastIncident}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          )}\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"performance\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Brain className=\"h-5 w-5\" />\r\n                  AI Performance\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex justify-between\">\r\n                  <span>Success Rate</span>\r\n                  <span className=\"font-medium\">{dashboardStats?.ai.successRate}%</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Avg Response Time</span>\r\n                  <span className=\"font-medium\">{dashboardStats?.ai.averageResponseTime}ms</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Daily Cost</span>\r\n                  <span className=\"font-medium\">${dashboardStats?.ai.costToday}</span>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Database className=\"h-5 w-5\" />\r\n                  Database Performance\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex justify-between\">\r\n                  <span>Query Time</span>\r\n                  <span className=\"font-medium\">12ms avg</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Connections</span>\r\n                  <span className=\"font-medium\">{dashboardStats?.system.activeConnections}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Cache Hit Rate</span>\r\n                  <span className=\"font-medium\">94.5%</span>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Globe className=\"h-5 w-5\" />\r\n                  Network Performance\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex justify-between\">\r\n                  <span>Uptime</span>\r\n                  <span className=\"font-medium\">{dashboardStats?.system.uptime}%</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Response Time</span>\r\n                  <span className=\"font-medium\">45ms avg</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span>Error Rate</span>\r\n                  <span className=\"font-medium\">0.02%</span>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"activity\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Activity className=\"h-5 w-5\" />\r\n                Recent Activity\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {recentActivity?.map((activity) => (\r\n                  <div key={activity.id} className=\"flex items-center space-x-3 p-3 border rounded-lg\">\r\n                    {getActivityIcon(activity.type)}\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"text-sm font-medium\">{activity.message}</p>\r\n                      <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\r\n                        <Clock className=\"h-3 w-3\" />\r\n                        <span>{new Date(activity.timestamp).toLocaleString()}</span>\r\n                        {activity.user && (\r\n                          <>\r\n                            <span>•</span>\r\n                            <span>{activity.user.name}</span>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    {activity.severity && (\r\n                      <Badge \r\n                        variant={activity.severity === 'critical' ? 'destructive' : 'secondary'}\r\n                        className={getSeverityColor(activity.severity)}\r\n                      >\r\n                        {activity.severity}\r\n                      </Badge>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"alerts\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Bell className=\"h-5 w-5\" />\r\n                System Alerts\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {systemAlerts?.map((alert) => (\r\n                  <div key={alert.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <AlertTriangle className={`h-4 w-4 ${getSeverityColor(alert.severity)}`} />\r\n                      <div>\r\n                        <p className=\"text-sm font-medium\">{alert.title}</p>\r\n                        <p className=\"text-xs text-muted-foreground\">{alert.message}</p>\r\n                        <div className=\"flex items-center space-x-2 text-xs text-muted-foreground mt-1\">\r\n                          <Clock className=\"h-3 w-3\" />\r\n                          <span>{new Date(alert.timestamp).toLocaleString()}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Badge \r\n                        variant={alert.severity === 'critical' ? 'destructive' : 'secondary'}\r\n                        className={getSeverityColor(alert.severity)}\r\n                      >\r\n                        {alert.severity}\r\n                      </Badge>\r\n                      {!alert.acknowledged && (\r\n                        <Button variant=\"outline\" size=\"sm\">\r\n                          Acknowledge\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {(!systemAlerts || systemAlerts.length === 0) && (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    <CheckCircle className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                    <p>No active system alerts. All systems operating normally.</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { \r\n  Activity,\r\n  Clock,\r\n  User,\r\n  Shield,\r\n  Database,\r\n  Server,\r\n  Bot,\r\n  CreditCard,\r\n  Settings,\r\n  FileText,\r\n  Download,\r\n  Search,\r\n  Filter,\r\n  Calendar,\r\n  MapPin,\r\n  Eye,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  XCircle,\r\n  Info\r\n} from \"lucide-react\";\r\n\r\ninterface ActivityLog {\r\n  id: string;\r\n  timestamp: string;\r\n  userId?: string;\r\n  userEmail?: string;\r\n  userName?: string;\r\n  action: string;\r\n  category: 'auth' | 'user' | 'admin' | 'system' | 'payment' | 'ai' | 'security' | 'data';\r\n  description: string;\r\n  ipAddress: string;\r\n  userAgent: string;\r\n  success: boolean;\r\n  metadata?: {\r\n    [key: string]: any;\r\n  };\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  location?: {\r\n    country: string;\r\n    city: string;\r\n    region: string;\r\n  };\r\n}\r\n\r\ninterface ActivityStats {\r\n  totalActivities: number;\r\n  activitiesLast24h: number;\r\n  activitiesLast7d: number;\r\n  topActions: { action: string; count: number }[];\r\n  topUsers: { email: string; count: number }[];\r\n  securityEvents: number;\r\n  failedAttempts: number;\r\n  uniqueIPs: number;\r\n}\r\n\r\nexport default function ActivityLogger() {\r\n  const [activeTab, setActiveTab] = useState(\"logs\");\r\n  const [filters, setFilters] = useState({\r\n    category: 'all',\r\n    severity: 'all',\r\n    success: 'all',\r\n    timeRange: '24h',\r\n    userId: '',\r\n    action: '',\r\n    ipAddress: ''\r\n  });\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  \r\n  const { toast } = useToast();\r\n\r\n  // Fetch activity statistics\r\n  const { data: activityStats } = useQuery<ActivityStats>({\r\n    queryKey: ['admin-activity-stats'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/activity/stats');\r\n      if (!response.ok) throw new Error('Failed to fetch activity stats');\r\n      return response.json();\r\n    },\r\n    refetchInterval: 30000,\r\n  });\r\n\r\n  // Fetch activity logs\r\n  const { data: activityLogs, refetch } = useQuery<ActivityLog[]>({\r\n    queryKey: ['admin-activity-logs', filters, searchTerm],\r\n    queryFn: async () => {\r\n      const params = new URLSearchParams({\r\n        ...filters,\r\n        search: searchTerm\r\n      } as any);\r\n      const response = await fetch(`/api/admin/activity/logs?${params}`);\r\n      if (!response.ok) throw new Error('Failed to fetch activity logs');\r\n      return response.json();\r\n    },\r\n    refetchInterval: 15000,\r\n  });\r\n\r\n  // Export logs mutation\r\n  const exportLogsMutation = useMutation({\r\n    mutationFn: async (format: 'csv' | 'json') => {\r\n      const params = new URLSearchParams({\r\n        ...filters,\r\n        search: searchTerm,\r\n        format\r\n      } as any);\r\n      const response = await fetch(`/api/admin/activity/export?${params}`);\r\n      if (!response.ok) throw new Error('Failed to export logs');\r\n      return response.blob();\r\n    },\r\n    onSuccess: (blob, format) => {\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `activity-logs-${new Date().toISOString().split('T')[0]}.${format}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n      toast({ title: `Activity logs exported as ${format.toUpperCase()}` });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Export failed\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  const getCategoryIcon = (category: string) => {\r\n    const icons = {\r\n      auth: Shield,\r\n      user: User,\r\n      admin: Settings,\r\n      system: Server,\r\n      payment: CreditCard,\r\n      ai: Bot,\r\n      security: Shield,\r\n      data: Database\r\n    };\r\n    const IconComponent = icons[category as keyof typeof icons] || Activity;\r\n    return <IconComponent className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  const getCategoryColor = (category: string) => {\r\n    const colors = {\r\n      auth: 'bg-blue-100 text-blue-800',\r\n      user: 'bg-green-100 text-green-800',\r\n      admin: 'bg-purple-100 text-purple-800',\r\n      system: 'bg-gray-100 text-gray-800',\r\n      payment: 'bg-emerald-100 text-emerald-800',\r\n      ai: 'bg-orange-100 text-orange-800',\r\n      security: 'bg-red-100 text-red-800',\r\n      data: 'bg-indigo-100 text-indigo-800'\r\n    };\r\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    const colors = {\r\n      low: 'text-green-600',\r\n      medium: 'text-yellow-600',\r\n      high: 'text-orange-600',\r\n      critical: 'text-red-600'\r\n    };\r\n    return colors[severity as keyof typeof colors] || 'text-gray-600';\r\n  };\r\n\r\n  const formatTimeAgo = (timestamp: string) => {\r\n    const now = new Date();\r\n    const time = new Date(timestamp);\r\n    const diffInMinutes = Math.floor((now.getTime() - time.getTime()) / 60000);\r\n    \r\n    if (diffInMinutes < 1) return 'Just now';\r\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\r\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\r\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n            <Activity className=\"h-6 w-6 text-purple-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Activity Logger</h2>\r\n            <p className=\"text-neutral-600\">Comprehensive system activity tracking and audit logs</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => exportLogsMutation.mutate('csv')}\r\n            disabled={exportLogsMutation.isPending}\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export CSV\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => exportLogsMutation.mutate('json')}\r\n            disabled={exportLogsMutation.isPending}\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export JSON\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Activity Statistics */}\r\n      {activityStats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Activities</CardTitle>\r\n              <Activity className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{activityStats.totalActivities.toLocaleString()}</div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                {activityStats.activitiesLast24h} in last 24h\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Security Events</CardTitle>\r\n              <Shield className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{activityStats.securityEvents}</div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                {activityStats.failedAttempts} failed attempts\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Unique IPs</CardTitle>\r\n              <MapPin className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{activityStats.uniqueIPs}</div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                Last 7 days\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Weekly Growth</CardTitle>\r\n              <Calendar className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{activityStats.activitiesLast7d}</div>\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                Activities this week\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"logs\">Activity Logs</TabsTrigger>\r\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n          <TabsTrigger value=\"filters\">Advanced Filters</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"logs\" className=\"space-y-6\">\r\n          {/* Search and Quick Filters */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Search className=\"h-5 w-5\" />\r\n                Search & Filter\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4\">\r\n                <div className=\"md:col-span-2\">\r\n                  <Label htmlFor=\"search\">Search</Label>\r\n                  <Input\r\n                    id=\"search\"\r\n                    placeholder=\"Search activities...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Category</Label>\r\n                  <Select value={filters.category} onValueChange={(value) => setFilters({...filters, category: value})}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">All Categories</SelectItem>\r\n                      <SelectItem value=\"auth\">Authentication</SelectItem>\r\n                      <SelectItem value=\"user\">User Actions</SelectItem>\r\n                      <SelectItem value=\"admin\">Admin Actions</SelectItem>\r\n                      <SelectItem value=\"system\">System Events</SelectItem>\r\n                      <SelectItem value=\"payment\">Payments</SelectItem>\r\n                      <SelectItem value=\"ai\">AI Operations</SelectItem>\r\n                      <SelectItem value=\"security\">Security</SelectItem>\r\n                      <SelectItem value=\"data\">Data Operations</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Severity</Label>\r\n                  <Select value={filters.severity} onValueChange={(value) => setFilters({...filters, severity: value})}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">All Severities</SelectItem>\r\n                      <SelectItem value=\"low\">Low</SelectItem>\r\n                      <SelectItem value=\"medium\">Medium</SelectItem>\r\n                      <SelectItem value=\"high\">High</SelectItem>\r\n                      <SelectItem value=\"critical\">Critical</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Success</Label>\r\n                  <Select value={filters.success} onValueChange={(value) => setFilters({...filters, success: value})}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">All</SelectItem>\r\n                      <SelectItem value=\"true\">Success</SelectItem>\r\n                      <SelectItem value=\"false\">Failed</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Time Range</Label>\r\n                  <Select value={filters.timeRange} onValueChange={(value) => setFilters({...filters, timeRange: value})}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"1h\">Last Hour</SelectItem>\r\n                      <SelectItem value=\"24h\">Last 24 Hours</SelectItem>\r\n                      <SelectItem value=\"7d\">Last 7 Days</SelectItem>\r\n                      <SelectItem value=\"30d\">Last 30 Days</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Activity Logs */}\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle>Activity Logs</CardTitle>\r\n                <Button onClick={() => refetch()} variant=\"outline\" size=\"sm\">\r\n                  <Activity className=\"h-4 w-4 mr-2\" />\r\n                  Refresh\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96\">\r\n                <div className=\"space-y-3\">\r\n                  {activityLogs?.map((log) => (\r\n                    <div key={log.id} className=\"flex items-start space-x-4 p-4 border rounded-lg\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {getCategoryIcon(log.category)}\r\n                        {log.success ? (\r\n                          <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                        ) : (\r\n                          <XCircle className=\"h-4 w-4 text-red-500\" />\r\n                        )}\r\n                      </div>\r\n                      \r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"flex items-center space-x-2 mb-1\">\r\n                          <h3 className=\"font-medium truncate\">{log.action}</h3>\r\n                          <Badge className={getCategoryColor(log.category)}>\r\n                            {log.category}\r\n                          </Badge>\r\n                          <Badge variant=\"outline\" className={getSeverityColor(log.severity)}>\r\n                            {log.severity}\r\n                          </Badge>\r\n                        </div>\r\n                        \r\n                        <p className=\"text-sm text-muted-foreground mb-2\">{log.description}</p>\r\n                        \r\n                        <div className=\"flex items-center space-x-4 text-xs text-muted-foreground\">\r\n                          <span className=\"flex items-center\">\r\n                            <Clock className=\"h-3 w-3 mr-1\" />\r\n                            {formatTimeAgo(log.timestamp)}\r\n                          </span>\r\n                          \r\n                          {log.userEmail && (\r\n                            <span className=\"flex items-center\">\r\n                              <User className=\"h-3 w-3 mr-1\" />\r\n                              {log.userEmail}\r\n                            </span>\r\n                          )}\r\n                          \r\n                          <span className=\"flex items-center\">\r\n                            <MapPin className=\"h-3 w-3 mr-1\" />\r\n                            {log.ipAddress}\r\n                          </span>\r\n\r\n                          {log.location && (\r\n                            <span>\r\n                              {log.location.city}, {log.location.country}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n\r\n                        {log.metadata && Object.keys(log.metadata).length > 0 && (\r\n                          <details className=\"mt-2\">\r\n                            <summary className=\"text-xs text-muted-foreground cursor-pointer\">\r\n                              Show metadata\r\n                            </summary>\r\n                            <pre className=\"text-xs bg-gray-100 p-2 rounded mt-1 overflow-auto\">\r\n                              {JSON.stringify(log.metadata, null, 2)}\r\n                            </pre>\r\n                          </details>\r\n                        )}\r\n                      </div>\r\n                      \r\n                      <div className=\"text-xs text-muted-foreground\">\r\n                        {new Date(log.timestamp).toLocaleString()}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  \r\n                  {(!activityLogs || activityLogs.length === 0) && (\r\n                    <div className=\"text-center py-8 text-muted-foreground\">\r\n                      <FileText className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                      <p>No activity logs found for the current filters.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"analytics\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Top Actions</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {activityStats?.topActions.map((item, index) => (\r\n                    <div key={item.action} className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-sm font-medium\">#{index + 1}</span>\r\n                        <span className=\"text-sm\">{item.action}</span>\r\n                      </div>\r\n                      <Badge variant=\"secondary\">{item.count}</Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Most Active Users</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {activityStats?.topUsers.map((item, index) => (\r\n                    <div key={item.email} className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-sm font-medium\">#{index + 1}</span>\r\n                        <span className=\"text-sm truncate\">{item.email}</span>\r\n                      </div>\r\n                      <Badge variant=\"secondary\">{item.count}</Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"filters\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Filter className=\"h-5 w-5\" />\r\n                Advanced Filters\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"user-id\">User ID</Label>\r\n                  <Input\r\n                    id=\"user-id\"\r\n                    placeholder=\"Filter by user ID\"\r\n                    value={filters.userId}\r\n                    onChange={(e) => setFilters({...filters, userId: e.target.value})}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"action\">Action</Label>\r\n                  <Input\r\n                    id=\"action\"\r\n                    placeholder=\"Filter by action\"\r\n                    value={filters.action}\r\n                    onChange={(e) => setFilters({...filters, action: e.target.value})}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"ip-address\">IP Address</Label>\r\n                  <Input\r\n                    id=\"ip-address\"\r\n                    placeholder=\"Filter by IP address\"\r\n                    value={filters.ipAddress}\r\n                    onChange={(e) => setFilters({...filters, ipAddress: e.target.value})}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { apiPost, apiPut } from \"@/lib/apiRequest\";\r\nimport { \r\n  FileText,\r\n  Download,\r\n  Clock,\r\n  Calendar,\r\n  BarChart3,\r\n  PieChart,\r\n  TrendingUp,\r\n  Users,\r\n  DollarSign,\r\n  Bot,\r\n  Shield,\r\n  Activity,\r\n  Settings,\r\n  Zap,\r\n  Eye,\r\n  Send,\r\n  Save,\r\n  Trash2,\r\n  Copy,\r\n  RefreshCw\r\n} from \"lucide-react\";\r\n\r\ninterface ReportTemplate {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  type: 'system' | 'analytics' | 'financial' | 'security' | 'user' | 'ai' | 'custom';\r\n  sections: string[];\r\n  schedule?: {\r\n    frequency: 'daily' | 'weekly' | 'monthly';\r\n    time: string;\r\n    recipients: string[];\r\n    enabled: boolean;\r\n  };\r\n  createdAt: string;\r\n  lastGenerated?: string;\r\n}\r\n\r\ninterface ReportConfig {\r\n  title: string;\r\n  description: string;\r\n  type: string;\r\n  timeRange: {\r\n    start: string;\r\n    end: string;\r\n  };\r\n  sections: {\r\n    userMetrics: boolean;\r\n    financialMetrics: boolean;\r\n    systemMetrics: boolean;\r\n    aiMetrics: boolean;\r\n    securityMetrics: boolean;\r\n    activityLogs: boolean;\r\n    customCharts: boolean;\r\n  };\r\n  format: 'pdf' | 'excel' | 'csv' | 'html';\r\n  includeCharts: boolean;\r\n  includeRawData: boolean;\r\n  emailRecipients: string[];\r\n}\r\n\r\ninterface GeneratedReport {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  generatedAt: string;\r\n  generatedBy: string;\r\n  fileSize: number;\r\n  downloadUrl: string;\r\n  status: 'pending' | 'completed' | 'failed';\r\n  progress?: number;\r\n  error?: string;\r\n}\r\n\r\nexport default function ReportGenerator() {\r\n  const [activeTab, setActiveTab] = useState(\"generator\");\r\n  const [reportConfig, setReportConfig] = useState<ReportConfig>({\r\n    title: '',\r\n    description: '',\r\n    type: 'system',\r\n    timeRange: {\r\n      start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n      end: new Date().toISOString().split('T')[0]\r\n    },\r\n    sections: {\r\n      userMetrics: true,\r\n      financialMetrics: true,\r\n      systemMetrics: true,\r\n      aiMetrics: true,\r\n      securityMetrics: false,\r\n      activityLogs: false,\r\n      customCharts: false\r\n    },\r\n    format: 'pdf',\r\n    includeCharts: true,\r\n    includeRawData: false,\r\n    emailRecipients: []\r\n  });\r\n  const [newTemplate, setNewTemplate] = useState({\r\n    name: '',\r\n    description: '',\r\n    type: 'system' as const,\r\n    sections: [] as string[],\r\n    schedule: {\r\n      frequency: 'weekly' as const,\r\n      time: '09:00',\r\n      recipients: [] as string[],\r\n      enabled: false\r\n    }\r\n  });\r\n  const [emailList, setEmailList] = useState('');\r\n\r\n  const { toast } = useToast();\r\n\r\n  // Fetch report templates\r\n  const { data: templates } = useQuery<ReportTemplate[]>({\r\n    queryKey: ['admin-report-templates'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/reports/templates');\r\n      if (!response.ok) throw new Error('Failed to fetch report templates');\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  // Fetch generated reports\r\n  const { data: generatedReports, refetch: refetchReports } = useQuery<GeneratedReport[]>({\r\n    queryKey: ['admin-generated-reports'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/reports/generated');\r\n      if (!response.ok) throw new Error('Failed to fetch generated reports');\r\n      return response.json();\r\n    },\r\n    refetchInterval: 5000, // Poll for updates\r\n  });\r\n\r\n  // Generate report mutation\r\n  const generateReportMutation = useMutation({\r\n    mutationFn: async (config: ReportConfig) => {\r\n      const response = await apiPost('/api/admin/reports/generate', config);\r\n      if (!response.ok) throw new Error('Failed to generate report');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Report generation started\", description: \"You'll be notified when it's ready\" });\r\n      refetchReports();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Report generation failed\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Create template mutation\r\n  const createTemplateMutation = useMutation({\r\n    mutationFn: async (template: any) => {\r\n      const response = await apiPost('/api/admin/reports/templates', template);\r\n      if (!response.ok) throw new Error('Failed to create template');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Template created successfully\" });\r\n      setNewTemplate({\r\n        name: '',\r\n        description: '',\r\n        type: 'system',\r\n        sections: [],\r\n        schedule: {\r\n          frequency: 'weekly',\r\n          time: '09:00',\r\n          recipients: [],\r\n          enabled: false\r\n        }\r\n      });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Failed to create template\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  // Schedule report mutation\r\n  const scheduleReportMutation = useMutation({\r\n    mutationFn: async ({ templateId, schedule }: { templateId: string; schedule: any }) => {\r\n      const response = await apiPut(`/api/admin/reports/templates/${templateId}/schedule`, schedule);\r\n      if (!response.ok) throw new Error('Failed to schedule report');\r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"Report scheduled successfully\" });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Failed to schedule report\", description: error.message, variant: \"destructive\" });\r\n    },\r\n  });\r\n\r\n  const handleConfigChange = (field: string, value: any) => {\r\n    setReportConfig(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSectionToggle = (section: keyof typeof reportConfig.sections) => {\r\n    setReportConfig(prev => ({\r\n      ...prev,\r\n      sections: {\r\n        ...prev.sections,\r\n        [section]: !prev.sections[section]\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleEmailRecipientsChange = () => {\r\n    const emails = emailList.split(',').map(email => email.trim()).filter(email => email);\r\n    setReportConfig(prev => ({\r\n      ...prev,\r\n      emailRecipients: emails\r\n    }));\r\n  };\r\n\r\n  const handleGenerateReport = () => {\r\n    if (!reportConfig.title) {\r\n      toast({ title: \"Please enter a report title\", variant: \"destructive\" });\r\n      return;\r\n    }\r\n    \r\n    const config = {\r\n      ...reportConfig,\r\n      emailRecipients: emailList.split(',').map(email => email.trim()).filter(email => email)\r\n    };\r\n    \r\n    generateReportMutation.mutate(config);\r\n  };\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    const icons = {\r\n      system: Settings,\r\n      analytics: BarChart3,\r\n      financial: DollarSign,\r\n      security: Shield,\r\n      user: Users,\r\n      ai: Bot,\r\n      custom: FileText\r\n    };\r\n    const IconComponent = icons[type as keyof typeof icons] || FileText;\r\n    return <IconComponent className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      completed: 'bg-green-100 text-green-800',\r\n      failed: 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    const units = ['B', 'KB', 'MB', 'GB'];\r\n    let size = bytes;\r\n    let unitIndex = 0;\r\n    \r\n    while (size >= 1024 && unitIndex < units.length - 1) {\r\n      size /= 1024;\r\n      unitIndex++;\r\n    }\r\n    \r\n    return `${size.toFixed(1)} ${units[unitIndex]}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-indigo-100 rounded-lg flex items-center justify-center\">\r\n            <FileText className=\"h-6 w-6 text-indigo-600\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-neutral-900\">Report Generator</h2>\r\n            <p className=\"text-neutral-600\">Generate comprehensive system and analytics reports</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList>\r\n          <TabsTrigger value=\"generator\">Generate Report</TabsTrigger>\r\n          <TabsTrigger value=\"templates\">Templates</TabsTrigger>\r\n          <TabsTrigger value=\"generated\">Generated Reports</TabsTrigger>\r\n          <TabsTrigger value=\"schedule\">Scheduled Reports</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"generator\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n            <div className=\"lg:col-span-2 space-y-6\">\r\n              {/* Basic Configuration */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Report Configuration</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label htmlFor=\"title\">Report Title</Label>\r\n                      <Input\r\n                        id=\"title\"\r\n                        value={reportConfig.title}\r\n                        onChange={(e) => handleConfigChange('title', e.target.value)}\r\n                        placeholder=\"Enter report title\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"type\">Report Type</Label>\r\n                      <Select value={reportConfig.type} onValueChange={(value) => handleConfigChange('type', value)}>\r\n                        <SelectTrigger>\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"system\">System Report</SelectItem>\r\n                          <SelectItem value=\"analytics\">Analytics Report</SelectItem>\r\n                          <SelectItem value=\"financial\">Financial Report</SelectItem>\r\n                          <SelectItem value=\"security\">Security Report</SelectItem>\r\n                          <SelectItem value=\"user\">User Report</SelectItem>\r\n                          <SelectItem value=\"ai\">AI Usage Report</SelectItem>\r\n                          <SelectItem value=\"custom\">Custom Report</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"start-date\">Start Date</Label>\r\n                      <Input\r\n                        id=\"start-date\"\r\n                        type=\"date\"\r\n                        value={reportConfig.timeRange.start}\r\n                        onChange={(e) => handleConfigChange('timeRange', { ...reportConfig.timeRange, start: e.target.value })}\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label htmlFor=\"end-date\">End Date</Label>\r\n                      <Input\r\n                        id=\"end-date\"\r\n                        type=\"date\"\r\n                        value={reportConfig.timeRange.end}\r\n                        onChange={(e) => handleConfigChange('timeRange', { ...reportConfig.timeRange, end: e.target.value })}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"description\">Description</Label>\r\n                    <Textarea\r\n                      id=\"description\"\r\n                      value={reportConfig.description}\r\n                      onChange={(e) => handleConfigChange('description', e.target.value)}\r\n                      placeholder=\"Enter report description\"\r\n                      rows={3}\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Report Sections */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Report Sections</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        checked={reportConfig.sections.userMetrics}\r\n                        onCheckedChange={() => handleSectionToggle('userMetrics')}\r\n                      />\r\n                      <Label className=\"flex items-center gap-2\">\r\n                        <Users className=\"h-4 w-4\" />\r\n                        User Metrics\r\n                      </Label>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        checked={reportConfig.sections.financialMetrics}\r\n                        onCheckedChange={() => handleSectionToggle('financialMetrics')}\r\n                      />\r\n                      <Label className=\"flex items-center gap-2\">\r\n                        <DollarSign className=\"h-4 w-4\" />\r\n                        Financial Metrics\r\n                      </Label>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        checked={reportConfig.sections.systemMetrics}\r\n                        onCheckedChange={() => handleSectionToggle('systemMetrics')}\r\n                      />\r\n                      <Label className=\"flex items-center gap-2\">\r\n                        <Settings className=\"h-4 w-4\" />\r\n                        System Metrics\r\n                      </Label>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        checked={reportConfig.sections.aiMetrics}\r\n                        onCheckedChange={() => handleSectionToggle('aiMetrics')}\r\n                      />\r\n                      <Label className=\"flex items-center gap-2\">\r\n                        <Bot className=\"h-4 w-4\" />\r\n                        AI Metrics\r\n                      </Label>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        checked={reportConfig.sections.securityMetrics}\r\n                        onCheckedChange={() => handleSectionToggle('securityMetrics')}\r\n                      />\r\n                      <Label className=\"flex items-center gap-2\">\r\n                        <Shield className=\"h-4 w-4\" />\r\n                        Security Metrics\r\n                      </Label>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Checkbox\r\n                        checked={reportConfig.sections.activityLogs}\r\n                        onCheckedChange={() => handleSectionToggle('activityLogs')}\r\n                      />\r\n                      <Label className=\"flex items-center gap-2\">\r\n                        <Activity className=\"h-4 w-4\" />\r\n                        Activity Logs\r\n                      </Label>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Export Options */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Export Options</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label>Output Format</Label>\r\n                      <Select value={reportConfig.format} onValueChange={(value) => handleConfigChange('format', value)}>\r\n                        <SelectTrigger>\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"pdf\">PDF</SelectItem>\r\n                          <SelectItem value=\"excel\">Excel</SelectItem>\r\n                          <SelectItem value=\"csv\">CSV</SelectItem>\r\n                          <SelectItem value=\"html\">HTML</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label>Include Charts and Graphs</Label>\r\n                    <Switch\r\n                      checked={reportConfig.includeCharts}\r\n                      onCheckedChange={(value) => handleConfigChange('includeCharts', value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <Label>Include Raw Data</Label>\r\n                    <Switch\r\n                      checked={reportConfig.includeRawData}\r\n                      onCheckedChange={(value) => handleConfigChange('includeRawData', value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"email-recipients\">Email Recipients (comma-separated)</Label>\r\n                    <Textarea\r\n                      id=\"email-recipients\"\r\n                      value={emailList}\r\n                      onChange={(e) => setEmailList(e.target.value)}\r\n                      onBlur={handleEmailRecipientsChange}\r\n                      placeholder=\"admin@example.com, manager@example.com\"\r\n                      rows={2}\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Preview Panel */}\r\n            <div>\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Report Preview</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div>\r\n                    <h3 className=\"font-medium\">{reportConfig.title || 'Untitled Report'}</h3>\r\n                    <p className=\"text-sm text-muted-foreground\">{reportConfig.description}</p>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label className=\"text-sm font-medium\">Type</Label>\r\n                    <div className=\"flex items-center gap-2 mt-1\">\r\n                      {getTypeIcon(reportConfig.type)}\r\n                      <span className=\"text-sm capitalize\">{reportConfig.type}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label className=\"text-sm font-medium\">Time Range</Label>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      {reportConfig.timeRange.start} to {reportConfig.timeRange.end}\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label className=\"text-sm font-medium\">Sections</Label>\r\n                    <div className=\"space-y-1 mt-1\">\r\n                      {Object.entries(reportConfig.sections)\r\n                        .filter(([, enabled]) => enabled)\r\n                        .map(([section]) => (\r\n                          <Badge key={section} variant=\"secondary\" className=\"mr-1\">\r\n                            {section.replace(/([A-Z])/g, ' $1').toLowerCase()}\r\n                          </Badge>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label className=\"text-sm font-medium\">Format</Label>\r\n                    <p className=\"text-sm text-muted-foreground uppercase\">{reportConfig.format}</p>\r\n                  </div>\r\n\r\n                  {reportConfig.emailRecipients.length > 0 && (\r\n                    <div>\r\n                      <Label className=\"text-sm font-medium\">Recipients</Label>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        {reportConfig.emailRecipients.length} recipient(s)\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n\r\n                  <Button \r\n                    onClick={handleGenerateReport}\r\n                    disabled={generateReportMutation.isPending}\r\n                    className=\"w-full\"\r\n                  >\r\n                    {generateReportMutation.isPending ? (\r\n                      <>\r\n                        <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                        Generating...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Zap className=\"h-4 w-4 mr-2\" />\r\n                        Generate Report\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"templates\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Create Template</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <Label htmlFor=\"template-name\">Template Name</Label>\r\n                  <Input\r\n                    id=\"template-name\"\r\n                    value={newTemplate.name}\r\n                    onChange={(e) => setNewTemplate({...newTemplate, name: e.target.value})}\r\n                    placeholder=\"Weekly System Report\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label htmlFor=\"template-description\">Description</Label>\r\n                  <Textarea\r\n                    id=\"template-description\"\r\n                    value={newTemplate.description}\r\n                    onChange={(e) => setNewTemplate({...newTemplate, description: e.target.value})}\r\n                    placeholder=\"Comprehensive weekly system performance report\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Template Type</Label>\r\n                  <Select \r\n                    value={newTemplate.type} \r\n                    onValueChange={(value: any) => setNewTemplate({...newTemplate, type: value})}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"system\">System</SelectItem>\r\n                      <SelectItem value=\"analytics\">Analytics</SelectItem>\r\n                      <SelectItem value=\"financial\">Financial</SelectItem>\r\n                      <SelectItem value=\"security\">Security</SelectItem>\r\n                      <SelectItem value=\"user\">User</SelectItem>\r\n                      <SelectItem value=\"ai\">AI</SelectItem>\r\n                      <SelectItem value=\"custom\">Custom</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <Button \r\n                  onClick={() => createTemplateMutation.mutate(newTemplate)}\r\n                  disabled={createTemplateMutation.isPending}\r\n                >\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Create Template\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Existing Templates</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {templates?.map((template) => (\r\n                    <div key={template.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                      <div>\r\n                        <div className=\"flex items-center gap-2 mb-1\">\r\n                          {getTypeIcon(template.type)}\r\n                          <h3 className=\"font-medium\">{template.name}</h3>\r\n                          <Badge variant=\"outline\">{template.type}</Badge>\r\n                        </div>\r\n                        <p className=\"text-sm text-muted-foreground\">{template.description}</p>\r\n                        {template.lastGenerated && (\r\n                          <p className=\"text-xs text-muted-foreground\">\r\n                            Last generated: {new Date(template.lastGenerated).toLocaleString()}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Button variant=\"outline\" size=\"sm\">\r\n                          <Copy className=\"h-4 w-4\" />\r\n                        </Button>\r\n                        <Button variant=\"outline\" size=\"sm\">\r\n                          <Send className=\"h-4 w-4\" />\r\n                        </Button>\r\n                        <Button variant=\"destructive\" size=\"sm\">\r\n                          <Trash2 className=\"h-4 w-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"generated\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <CardTitle>Generated Reports</CardTitle>\r\n                <Button onClick={() => refetchReports()} variant=\"outline\" size=\"sm\">\r\n                  <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                  Refresh\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {generatedReports?.map((report) => (\r\n                  <div key={report.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center gap-2 mb-1\">\r\n                        <h3 className=\"font-medium\">{report.name}</h3>\r\n                        <Badge className={getStatusColor(report.status)}>\r\n                          {report.status}\r\n                        </Badge>\r\n                        <Badge variant=\"outline\">{report.type}</Badge>\r\n                      </div>\r\n                      \r\n                      <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\r\n                        <span className=\"flex items-center\">\r\n                          <Clock className=\"h-3 w-3 mr-1\" />\r\n                          {new Date(report.generatedAt).toLocaleString()}\r\n                        </span>\r\n                        <span>By {report.generatedBy}</span>\r\n                        {report.status === 'completed' && (\r\n                          <span>{formatFileSize(report.fileSize)}</span>\r\n                        )}\r\n                      </div>\r\n\r\n                      {report.status === 'pending' && report.progress !== undefined && (\r\n                        <div className=\"mt-2\">\r\n                          <Progress value={report.progress} className=\"h-2\" />\r\n                          <p className=\"text-xs text-muted-foreground mt-1\">\r\n                            {report.progress}% complete\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n\r\n                      {report.status === 'failed' && report.error && (\r\n                        <p className=\"text-sm text-red-600 mt-1\">{report.error}</p>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-2\">\r\n                      {report.status === 'completed' && (\r\n                        <Button variant=\"outline\" size=\"sm\">\r\n                          <Download className=\"h-4 w-4 mr-2\" />\r\n                          Download\r\n                        </Button>\r\n                      )}\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Eye className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button variant=\"destructive\" size=\"sm\">\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {(!generatedReports || generatedReports.length === 0) && (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    <FileText className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                    <p>No reports have been generated yet.</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"schedule\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Scheduled Reports</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {templates?.filter(template => template.schedule?.enabled).map((template) => (\r\n                  <div key={template.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div>\r\n                      <div className=\"flex items-center gap-2 mb-1\">\r\n                        {getTypeIcon(template.type)}\r\n                        <h3 className=\"font-medium\">{template.name}</h3>\r\n                        <Badge variant=\"outline\">{template.schedule?.frequency}</Badge>\r\n                      </div>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        Runs {template.schedule?.frequency} at {template.schedule?.time}\r\n                      </p>\r\n                      <p className=\"text-xs text-muted-foreground\">\r\n                        Recipients: {template.schedule?.recipients.join(', ')}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Switch defaultChecked />\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        Edit\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {(!templates?.some(t => t.schedule?.enabled)) && (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    <Calendar className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                    <p>No scheduled reports configured.</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardHeader, CardContent, CardTitle } from \"@/components/ui/card\";\r\nimport { Table, TableHead, TableRow, TableCell, TableBody } from \"@/components/ui/table\";\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\r\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\r\nimport { User, MealAnalysis, WeeklyStats, appConfig, insertAppConfigSchema } from \"@shared/schema\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { useLocation } from \"wouter\";\r\nimport AIConfigPanel from \"@/components/admin/ai-config-panel\";\r\nimport EnhancedSystemMonitor from \"@/components/admin/enhanced-system-monitor\";\r\nimport AdvancedUserManagement from \"@/components/admin/advanced-user-management\";\r\nimport AnalyticsDashboard from \"@/components/admin/analytics-dashboard\";\r\nimport PaymentManagement from \"@/components/admin/payment-management\";\r\nimport SettingsPanel from \"@/components/admin/settings-panel\";\r\nimport BackupSystem from \"@/components/admin/backup-system\";\r\nimport SecurityCenter from \"@/components/admin/security-center\";\r\nimport NotificationCenter from \"@/components/admin/notification-center\";\r\nimport AdvancedDashboard from \"@/components/admin/advanced-dashboard\";\r\nimport ActivityLogger from \"@/components/admin/activity-logger\";\r\nimport ReportGenerator from \"@/components/admin/report-generator\";\r\n\r\nexport default function AdminPanel() {\r\n  const { user } = useAuth();\r\n  const [_, navigate] = useLocation();\r\n  const { toast } = useToast();\r\n  const [selectedTab, setSelectedTab] = useState(\"dashboard\");\r\n  const [userSearch, setUserSearch] = useState(\"\");\r\n  const [mealSearch, setMealSearch] = useState(\"\");\r\n  const [statsSearch, setStatsSearch] = useState(\"\");\r\n  const [editUser, setEditUser] = useState<User | null>(null);\r\n  const [editUserData, setEditUserData] = useState<Partial<User>>({});\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [deleteUserId, setDeleteUserId] = useState<number | null>(null);\r\n  const [showConfigDialog, setShowConfigDialog] = useState(false);\r\n  const [currentConfig, setCurrentConfig] = useState<Partial<typeof appConfig.$inferSelect> & { id?: number }>({});\r\n  const [isEditingConfig, setIsEditingConfig] = useState(false);\r\n\r\n  // Protect route: only allow admin\r\n  useEffect(() => {\r\n    if (!user || (user as any).role !== 'admin') {\r\n      toast({ title: \"Access Denied\", description: \"Admin access required.\", variant: \"destructive\" });\r\n      navigate(\"/login\");\r\n    }\r\n  }, [user, navigate, toast]);\r\n\r\n  // API queries\r\n  const { data: users = [], refetch: refetchUsers, isLoading: isLoadingUsers } = useQuery<User[]>({ // Added isLoadingUsers\r\n    queryKey: [\"/api/admin/users\"],\r\n  });\r\n  const { data: meals = [], refetch: refetchMeals, isLoading: isLoadingMeals } = useQuery<MealAnalysis[]>({ // Added isLoadingMeals\r\n    queryKey: [\"/api/admin/data/meal-analyses\"],\r\n  });\r\n  const { data: stats = [], refetch: refetchStats, isLoading: isLoadingStats } = useQuery<WeeklyStats[]>({ // Added isLoadingStats\r\n    queryKey: [\"/api/admin/data/weekly-stats\"],\r\n  });\r\n  const { data: fetchedAppConfigs = [], refetch: refetchAppConfigs, isLoading: isLoadingAppConfigs } = useQuery<typeof appConfig.$inferSelect[]>({ // Added isLoadingAppConfigs\r\n    queryKey: [\"/api/admin/config\"],\r\n  });\r\n\r\n  // Mutations\r\n  const updateUserMutation = useMutation({\r\n    mutationFn: async (data: Partial<User> & { id: number }) => {\r\n      const res = await fetch(`/api/admin/users/${data.id}`, {\r\n        method: \"PUT\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n      });\r\n      if (!res.ok) throw new Error('Failed to update user');\r\n      return res.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"User updated\" });\r\n      setEditUser(null);\r\n      refetchUsers();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error updating user\", description: error.message, variant: \"destructive\" });\r\n    }\r\n  });\r\n  const deleteUserMutation = useMutation({\r\n    mutationFn: async (id: number) => {\r\n      const res = await fetch(`/api/admin/users/${id}`, { method: \"DELETE\" });\r\n      if (!res.ok) throw new Error('Failed to delete user');\r\n      return res.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: \"User deleted\" });\r\n      setShowDeleteDialog(false);\r\n      refetchUsers();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: \"Error deleting user\", description: error.message, variant: \"destructive\" });\r\n    }\r\n  });\r\n\r\n  // App Config Mutations\r\n  const createAppConfigMutation = useMutation({\r\n    mutationFn: async (data: typeof insertAppConfigSchema._type) => {\r\n      const res = await fetch('/api/admin/config', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n      if (!res.ok) {\r\n        const errorData = await res.json().catch(() => ({ message: 'Failed to create config' }));\r\n        throw new Error(errorData.message || 'Failed to create config');\r\n      }\r\n      return res.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: 'App config created' });\r\n      setShowConfigDialog(false);\r\n      refetchAppConfigs();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: 'Error creating config', description: error.message, variant: 'destructive' });\r\n    },\r\n  });\r\n\r\n  const updateAppConfigMutation = useMutation({\r\n    mutationFn: async (data: Partial<typeof appConfig.$inferSelect> & { id: number }) => {\r\n      const res = await fetch(`/api/admin/config/${data.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n      if (!res.ok) {\r\n        const errorData = await res.json().catch(() => ({ message: 'Failed to update config' }));\r\n        throw new Error(errorData.message || 'Failed to update config');\r\n      }\r\n      return res.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: 'App config updated' });\r\n      setShowConfigDialog(false);\r\n      refetchAppConfigs();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: 'Error updating config', description: error.message, variant: 'destructive' });\r\n    },\r\n  });\r\n\r\n  const deleteAppConfigMutation = useMutation({\r\n    mutationFn: async (id: number) => {\r\n      const res = await fetch(`/api/admin/config/${id}`, { method: 'DELETE' });\r\n      if (!res.ok) {\r\n        const errorData = await res.json().catch(() => ({ message: 'Failed to delete config' }));\r\n        throw new Error(errorData.message || 'Failed to delete config');\r\n      }\r\n      return res.json();\r\n    },\r\n    onSuccess: () => {\r\n      toast({ title: 'App config deleted' });\r\n      refetchAppConfigs();\r\n    },\r\n    onError: (error: Error) => {\r\n      toast({ title: 'Error deleting config', description: error.message, variant: 'destructive' });\r\n    },\r\n  });\r\n\r\n  // Filtered data\r\n  const filteredUsers = users.filter(u =>\r\n    (u.username || '').toLowerCase().includes(userSearch.toLowerCase()) ||\r\n    (u.email || \"\").toLowerCase().includes(userSearch.toLowerCase()) ||\r\n    (u.role || '').toLowerCase().includes(userSearch.toLowerCase())\r\n  );\r\n  const filteredMeals = meals.filter(m =>\r\n    (m.foodName || '').toLowerCase().includes(mealSearch.toLowerCase()) ||\r\n    String(m.userId).includes(mealSearch)\r\n  );\r\n  const filteredStats = stats.filter(s =>\r\n    String(s.userId).includes(statsSearch)\r\n  );\r\n\r\n  const handleSaveConfig = () => {\r\n    if (isEditingConfig && currentConfig.id) {\r\n      updateAppConfigMutation.mutate(currentConfig as Partial<typeof appConfig.$inferSelect> & { id: number });\r\n    } else {\r\n      createAppConfigMutation.mutate(currentConfig as typeof insertAppConfigSchema._type);\r\n    }\r\n  };\r\n\r\n  const openEditConfigDialog = (config: typeof appConfig.$inferSelect) => {\r\n    setCurrentConfig(config);\r\n    setIsEditingConfig(true);\r\n    setShowConfigDialog(true);\r\n  };\r\n\r\n  const openNewConfigDialog = () => {\r\n    setCurrentConfig({ key: '', value: '', description: '', type: 'string' });\r\n    setIsEditingConfig(false);\r\n    setShowConfigDialog(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-neutral-900 to-neutral-800 p-8\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <Card className=\"card-gradient glass-effect shadow-xl\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-2xl text-primary-200\">Admin Panel</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"w-full\">\r\n              <TabsList className=\"mb-6 flex flex-wrap justify-start w-full overflow-auto\">\r\n                <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\r\n                <TabsTrigger value=\"users\">Users</TabsTrigger>\r\n                <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n                <TabsTrigger value=\"payments\">Payments</TabsTrigger>\r\n                <TabsTrigger value=\"system\">System</TabsTrigger>\r\n                <TabsTrigger value=\"meals\">Meals</TabsTrigger>\r\n                <TabsTrigger value=\"stats\">Stats</TabsTrigger>\r\n                <TabsTrigger value=\"content\">Content</TabsTrigger>\r\n                <TabsTrigger value=\"config\">Config</TabsTrigger>\r\n                <TabsTrigger value=\"ai-config\">AI Config</TabsTrigger>\r\n                <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n                <TabsTrigger value=\"backup\">Backup</TabsTrigger>\r\n                <TabsTrigger value=\"security\">Security</TabsTrigger>\r\n                <TabsTrigger value=\"notifications\">Notifications</TabsTrigger>\r\n                <TabsTrigger value=\"activity\">Activity</TabsTrigger>\r\n                <TabsTrigger value=\"reports\">Reports</TabsTrigger>\r\n              </TabsList>\r\n              <TabsContent value=\"dashboard\">\r\n                <AdvancedDashboard />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"users\">\r\n                <AdvancedUserManagement />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"analytics\">\r\n                <AnalyticsDashboard />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"payments\">\r\n                <PaymentManagement />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"system\">\r\n                <EnhancedSystemMonitor />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"meals\">\r\n                <div className=\"flex items-center mb-4 gap-4\">\r\n                  <Input placeholder=\"Search meals or user ID...\" value={mealSearch} onChange={e => setMealSearch(e.target.value)} className=\"w-64\" />\r\n                </div>\r\n                {isLoadingMeals && <div className=\"text-primary-100\">Loading meals...</div>}\r\n                {!isLoadingMeals && (\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>User ID</TableCell>\r\n                        <TableCell>Food</TableCell>\r\n                        <TableCell>Calories</TableCell>\r\n                        <TableCell>Protein</TableCell>\r\n                        <TableCell>Carbs</TableCell>\r\n                        <TableCell>Fat</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {filteredMeals.map((meal) => (\r\n                        <TableRow key={meal.id}>\r\n                          <TableCell>{meal.id}</TableCell>\r\n                          <TableCell>{meal.userId}</TableCell>\r\n                          <TableCell>{meal.foodName}</TableCell>\r\n                          <TableCell>{meal.estimatedCalories}</TableCell>\r\n                          <TableCell>{meal.estimatedProtein}</TableCell>\r\n                          <TableCell>{meal.estimatedCarbs}</TableCell>\r\n                          <TableCell>{meal.estimatedFat}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                )}\r\n              </TabsContent>\r\n              <TabsContent value=\"stats\">\r\n                <div className=\"flex items-center mb-4 gap-4\">\r\n                  <Input placeholder=\"Search by user ID...\" value={statsSearch} onChange={e => setStatsSearch(e.target.value)} className=\"w-64\" />\r\n                </div>\r\n                {isLoadingStats && <div className=\"text-primary-100\">Loading stats...</div>}\r\n                {!isLoadingStats && (\r\n                  <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>ID</TableCell>\r\n                      <TableCell>User ID</TableCell>\r\n                      <TableCell>Avg Calories</TableCell>\r\n                      <TableCell>Meals Tracked</TableCell>\r\n                      <TableCell>Protein</TableCell>\r\n                      <TableCell>Healthiest Day</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {filteredStats.map((stat) => (\r\n                      <TableRow key={stat.id}>\r\n                        <TableCell>{stat.id}</TableCell>\r\n                        <TableCell>{stat.userId}</TableCell>\r\n                        <TableCell>{stat.averageCalories}</TableCell>\r\n                        <TableCell>{stat.mealsTracked}</TableCell>\r\n                        <TableCell>{stat.averageProtein}</TableCell>\r\n                        <TableCell>{stat.healthiestDay}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n                )}\r\n              </TabsContent>\r\n              <TabsContent value=\"content\">\r\n                <h2 className=\"text-xl font-semibold mb-4 text-primary-100\">Edit Site Content</h2>\r\n                <ContentEditor />\r\n              </TabsContent>\r\n              <TabsContent value=\"config\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h2 className=\"text-xl font-semibold text-primary-100\">Application Configuration</h2>\r\n                  <Button variant=\"accent\" onClick={openNewConfigDialog}>Add New Config</Button>\r\n                </div>\r\n                {isLoadingAppConfigs && <p>Loading configurations...</p>}\r\n                {!isLoadingAppConfigs && fetchedAppConfigs.length === 0 && <p>No configurations found.</p>}\r\n                {!isLoadingAppConfigs && fetchedAppConfigs.length > 0 && (\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>Key</TableCell>\r\n                        <TableCell>Value</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                        <TableCell>Actions</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {fetchedAppConfigs.map((config) => (\r\n                        <TableRow key={config.id}>\r\n                          <TableCell>{config.id}</TableCell>\r\n                          <TableCell>{config.key}</TableCell>\r\n                          <TableCell className=\"max-w-xs truncate\">{String(config.value)}</TableCell>\r\n                          <TableCell>{config.type}</TableCell>\r\n                          <TableCell className=\"max-w-xs truncate\">{config.description}</TableCell>\r\n                          <TableCell className=\"flex gap-2\">\r\n                            <Button size=\"sm\" variant=\"outline\" onClick={() => openEditConfigDialog(config)}>Edit</Button>\r\n                            <Button size=\"sm\" variant=\"destructive\" onClick={() => deleteAppConfigMutation.mutate(config.id!)} disabled={deleteAppConfigMutation.isPending}>Delete</Button>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                )}\r\n                {/* App Config Dialog */}\r\n                <Dialog open={showConfigDialog} onOpenChange={v => { if (!v) setShowConfigDialog(false); }}>\r\n                  <DialogContent>\r\n                    <DialogHeader>\r\n                      <DialogTitle>{isEditingConfig ? 'Edit' : 'Add'} App Configuration</DialogTitle>\r\n                    </DialogHeader>\r\n                    <div className=\"space-y-4 py-2\">\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-primary-100 mb-1\">Key</label>\r\n                        <Input value={currentConfig.key || ''} onChange={e => setCurrentConfig((c: typeof currentConfig) => ({ ...c, key: e.target.value }))} />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-primary-100 mb-1\">Value</label>\r\n                        <Input value={currentConfig.value || ''} onChange={e => setCurrentConfig((c: typeof currentConfig) => ({ ...c, value: e.target.value }))} />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-primary-100 mb-1\">Type (string, boolean, number, json)</label>\r\n                        <Input value={currentConfig.type || 'string'} onChange={e => setCurrentConfig((c: typeof currentConfig) => ({ ...c, type: e.target.value }))} />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-primary-100 mb-1\">Description</label>\r\n                        <Input value={currentConfig.description || ''} onChange={e => setCurrentConfig((c: typeof currentConfig) => ({ ...c, description: e.target.value }))} />\r\n                      </div>\r\n                    </div>\r\n                    <DialogFooter>\r\n                      <Button variant=\"secondary\" onClick={() => setShowConfigDialog(false)}>Cancel</Button>\r\n                      <Button variant=\"accent\" onClick={handleSaveConfig} disabled={createAppConfigMutation.isPending || updateAppConfigMutation.isPending}>\r\n                        {isEditingConfig ? 'Save Changes' : 'Create Config'}\r\n                      </Button>\r\n                    </DialogFooter>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"ai-config\">\r\n                <AIConfigPanel />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"settings\">\r\n                <SettingsPanel />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"backup\">\r\n                <BackupSystem />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"security\">\r\n                <SecurityCenter />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"notifications\">\r\n                <NotificationCenter />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"activity\">\r\n                <ActivityLogger />\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"reports\">\r\n                <ReportGenerator />\r\n              </TabsContent>\r\n            </Tabs>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// --- ContentEditor component ---\r\nfunction ContentEditor() {\r\n  const { toast } = useToast();\r\n  const [contentItems, setContentItems] = useState<Array<{ key: string, value: string, label: string }>>([\r\n    { key: 'home', value: '', label: 'Home Page Main Text' },\r\n    { key: 'try-it', value: '', label: 'Try It Page Main Text' },\r\n    { key: 'pricing', value: '', label: 'Pricing Page Main Text' },\r\n    // Add more content keys here if needed\r\n  ]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Fetch content on mount\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Promise.all(\r\n      contentItems.map(item => \r\n        fetch(`/api/admin/content/${item.key}`)\r\n          .then(r => r.json())\r\n          .then(data => ({ key: item.key, value: data.value || '' }))\r\n      )\r\n    ).then(fetchedContents => {\r\n      setContentItems(currentItems => \r\n        currentItems.map(item => {\r\n          const fetched = fetchedContents.find(fc => fc.key === item.key);\r\n          return fetched ? { ...item, value: fetched.value } : item;\r\n        })\r\n      );\r\n      setLoading(false);\r\n    }).catch(e => {\r\n      console.error(\"Content loading error:\", e);\r\n      setError(\"Failed to load content. Check console for details.\");\r\n      setLoading(false);\r\n    });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []); // Only run once on mount, contentItems keys are static here\r\n\r\n  // Save handlers\r\n  const saveContent = async (key: string, value: string, label: string, itemIndex: number) => { // Added itemIndex\r\n    try {\r\n      const res = await fetch(`/api/admin/content/${key}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ value }),\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to update\");\r\n      toast({ title: `${label} content updated` });\r\n      // Optionally refetch or update local state if needed, though textarea is already bound\r\n    } catch (e) { // Catch error object\r\n      console.error(`Failed to update ${label} content:`, e);\r\n      const errorMsg = e instanceof Error ? e.message : 'Unknown error';\r\n      toast({ title: `Failed to update ${label} content`, variant: \"destructive\" });\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-primary-100\">Loading content...</div>;\r\n  if (error) return <div className=\"text-red-500\">{error}</div>;\r\n\r\n  const handleContentChange = (index: number, newValue: string) => {\r\n    setContentItems(currentItems => \r\n      currentItems.map((item, i) => i === index ? { ...item, value: newValue } : item)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {contentItems.map((item, index) => (\r\n        <div key={item.key} className=\"bg-neutral-900/80 rounded-lg p-6 shadow\">\r\n          <h3 className=\"text-lg font-bold text-primary-200 mb-2\">{item.label}</h3>\r\n          <textarea\r\n            className=\"w-full min-h-[80px] rounded p-2 bg-neutral-800 text-primary-100 border border-neutral-700\"\r\n            value={item.value}\r\n            onChange={e => handleContentChange(index, e.target.value)}\r\n          />\r\n          <Button className=\"mt-2\" variant=\"accent\" onClick={() => saveContent(item.key, item.value, item.label, index)}>Save</Button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useRef } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { apiRequest } from \"@/lib/queryClient\";\r\n\r\nexport function NutritionCoachChatbot({ userId }: { userId?: number }) {\r\n  const [messages, setMessages] = useState<Array<{ role: \"user\" | \"assistant\"; content: string }>>([\r\n    { role: \"assistant\", content: \"Hi! I'm your Nutrition Coach. Ask me anything about your meals, nutrition, or healthy eating!\" }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n    setMessages((msgs) => [...msgs, { role: \"user\", content: input }]);\r\n    setLoading(true);\r\n    setInput(\"\");\r\n    try {\r\n      const res = await apiRequest(\"POST\", \"/api/nutrition-coach-chat\", {\r\n        userId,\r\n        messages: [...messages, { role: \"user\", content: input }],\r\n      });\r\n      if (!res.ok) throw new Error(\"Failed to get response\");\r\n      const data = await res.json();\r\n      setMessages((msgs) => [...msgs, { role: \"assistant\", content: data.reply }]);\r\n    } catch (e: any) {\r\n      setMessages((msgs) => [...msgs, { role: \"assistant\", content: \"Sorry, I couldn't process your request.\" }]);\r\n    } finally {\r\n      setLoading(false);\r\n      inputRef.current?.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card-gradient glass-effect rounded-xl border border-neutral-800 max-w-xl mx-auto\">\r\n      <CardHeader>\r\n        <CardTitle>Nutrition Coach Chatbot</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"flex flex-col gap-3 h-72 overflow-y-auto bg-neutral-900/60 rounded p-3 mb-3\">\r\n          {messages.map((msg, i) => (\r\n            <div key={i} className={`text-sm ${msg.role === \"user\" ? \"text-right\" : \"text-left\"}`}>\r\n              <span className={`inline-block px-3 py-2 rounded-lg ${msg.role === \"user\" ? \"bg-primary-700 text-primary-50\" : \"bg-emerald-800 text-emerald-100\"}`}>{msg.content}</span>\r\n            </div>\r\n          ))}\r\n          {loading && <div className=\"text-xs text-emerald-400\">Coach is typing...</div>}\r\n        </div>\r\n        <form\r\n          className=\"flex gap-2\"\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            sendMessage();\r\n          }}\r\n        >\r\n          <input\r\n            ref={inputRef}\r\n            className=\"flex-1 rounded px-3 py-2 bg-neutral-800 text-neutral-100 border border-neutral-700 focus:outline-none\"\r\n            placeholder=\"Ask me about your meals, e.g. 'Was my breakfast healthy?'\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            disabled={loading}\r\n            autoFocus\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-emerald-700 hover:bg-emerald-600 text-emerald-50 font-semibold px-4 py-2 rounded shadow\"\r\n            disabled={loading || !input.trim()}\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import { Header } from \"@/components/layout/header\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\nimport { NutritionCoachChatbot } from \"@/components/nutrition-coach-chatbot\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\n\r\nexport default function ChatbotPage() {\r\n  const { user } = useAuth();\r\n\r\n  if (!user) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <Header />\r\n      <main className=\"flex-grow\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold text-neutral-900 mb-2\">\r\n              Nutrition Coach Chatbot\r\n            </h1>\r\n            <p className=\"text-neutral-500\">\r\n              Chat with your personal nutrition coach for advice on meals, nutrition, and healthy eating.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center\">\r\n            <NutritionCoachChatbot userId={user?.id} />\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Trophy, Share2, Calendar, Target, TrendingUp, Users, Star, Award } from \"lucide-react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getQueryFn } from \"@/lib/queryClient\";\r\nimport { WeeklyStats } from \"@shared/schema\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\nimport { Header } from \"@/components/layout/header\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\n\r\ninterface Achievement {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n  progress: number;\r\n  maxProgress: number;\r\n  unlocked: boolean;\r\n  unlockedDate?: string;\r\n  category: string;\r\n}\r\n\r\ninterface AchievementHistory {\r\n  id: number;\r\n  achievementId: number;\r\n  unlockedDate: string;\r\n  shared: boolean;\r\n}\r\n\r\nexport default function AchievementsPage() {\r\n  const { user } = useAuth();\r\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\r\n\r\n  // Fetch user's weekly stats for achievements calculation\r\n  const { data: stats } = useQuery<WeeklyStats>({\r\n    queryKey: [\"/api/user/stats\"],\r\n    queryFn: getQueryFn({ on401: \"returnNull\" })\r\n  });\r\n\r\n  // Mock achievements data - in real app this would come from API\r\n  const achievements: Achievement[] = [\r\n    {\r\n      id: 1,\r\n      title: \"First Steps\",\r\n      description: \"Log your first meal\",\r\n      icon: \"🥗\",\r\n      progress: 1,\r\n      maxProgress: 1,\r\n      unlocked: true,\r\n      unlockedDate: \"2024-01-15\",\r\n      category: \"getting-started\"\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Week Warrior\",\r\n      description: \"Complete 7 days of meal tracking\",\r\n      icon: \"📅\",\r\n      progress: 7,\r\n      maxProgress: 7,\r\n      unlocked: true,\r\n      unlockedDate: \"2024-01-22\",\r\n      category: \"consistency\"\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Calorie Master\",\r\n      description: \"Maintain calorie goals for 30 days\",\r\n      icon: \"🎯\",\r\n      progress: 25,\r\n      maxProgress: 30,\r\n      unlocked: false,\r\n      category: \"goals\"\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Protein Champion\",\r\n      description: \"Average 150g protein per day for a week\",\r\n      icon: \"💪\",\r\n      progress: 120,\r\n      maxProgress: 150,\r\n      unlocked: false,\r\n      category: \"nutrition\"\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Social Butterfly\",\r\n      description: \"Share 10 achievements with friends\",\r\n      icon: \"🦋\",\r\n      progress: 3,\r\n      maxProgress: 10,\r\n      unlocked: false,\r\n      category: \"social\"\r\n    }\r\n  ];\r\n\r\n  const categories = [\r\n    { id: \"all\", label: \"All\", icon: Trophy },\r\n    { id: \"getting-started\", label: \"Getting Started\", icon: Star },\r\n    { id: \"consistency\", label: \"Consistency\", icon: Calendar },\r\n    { id: \"goals\", label: \"Goals\", icon: Target },\r\n    { id: \"nutrition\", label: \"Nutrition\", icon: Award },\r\n    { id: \"social\", label: \"Social\", icon: Users }\r\n  ];\r\n\r\n  const filteredAchievements = selectedCategory === \"all\"\r\n    ? achievements\r\n    : achievements.filter(a => a.category === selectedCategory);\r\n\r\n  const unlockedCount = achievements.filter(a => a.unlocked).length;\r\n  const totalProgress = achievements.reduce((sum, a) => sum + (a.progress / a.maxProgress), 0);\r\n  const averageProgress = Math.round((totalProgress / achievements.length) * 100);\r\n\r\n  const handleShare = (achievement: Achievement) => {\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        title: `Achievement Unlocked: ${achievement.title}`,\r\n        text: `I just unlocked \"${achievement.title}\" in AI Calorie Tracker! ${achievement.description}`,\r\n        url: window.location.href\r\n      });\r\n    } else {\r\n      // Fallback: copy to clipboard\r\n      navigator.clipboard.writeText(\r\n        `I just unlocked \"${achievement.title}\" in AI Calorie Tracker! ${achievement.description} ${window.location.href}`\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <Header />\r\n      <main className=\"flex-grow\">\r\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold mb-2\">Achievements</h1>\r\n        <p className=\"text-muted-foreground\">\r\n          Track your progress and unlock rewards as you work towards your health goals.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Progress Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Achievements Unlocked</CardTitle>\r\n            <Trophy className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{unlockedCount}/{achievements.length}</div>\r\n            <Progress value={(unlockedCount / achievements.length) * 100} className=\"mt-2\" />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Overall Progress</CardTitle>\r\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{averageProgress}%</div>\r\n            <Progress value={averageProgress} className=\"mt-2\" />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Current Streak</CardTitle>\r\n            <Calendar className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {stats ? (() => {\r\n                const caloriesByDay = (stats.caloriesByDay ?? {}) as Record<string, number>;\r\n                const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n                let streak = 0;\r\n                for (let i = daysOfWeek.length - 1; i >= 0; i--) {\r\n                  const cals = caloriesByDay?.[daysOfWeek[i]] ?? 0;\r\n                  if (cals >= 1500 && cals <= 2200) streak++;\r\n                  else break;\r\n                }\r\n                return streak;\r\n              })() : 0} days\r\n            </div>\r\n            <p className=\"text-xs text-muted-foreground mt-1\">Keep it up!</p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Achievements Tabs */}\r\n      <Tabs value={selectedCategory} onValueChange={setSelectedCategory}>\r\n        <TabsList className=\"grid w-full grid-cols-3 lg:grid-cols-6 mb-6\">\r\n          {categories.map(category => (\r\n            <TabsTrigger key={category.id} value={category.id} className=\"flex items-center gap-2\">\r\n              <category.icon className=\"h-4 w-4\" />\r\n              <span className=\"hidden sm:inline\">{category.label}</span>\r\n            </TabsTrigger>\r\n          ))}\r\n        </TabsList>\r\n\r\n        <TabsContent value={selectedCategory} className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {filteredAchievements.map(achievement => (\r\n              <Card key={achievement.id} className={`relative ${achievement.unlocked ? 'border-green-200 bg-green-50' : ''}`}>\r\n                {achievement.unlocked && (\r\n                  <div className=\"absolute -top-2 -right-2\">\r\n                    <Badge className=\"bg-green-500\">Unlocked</Badge>\r\n                  </div>\r\n                )}\r\n\r\n                <CardHeader>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className=\"text-3xl\">{achievement.icon}</div>\r\n                    <div>\r\n                      <CardTitle className=\"text-lg\">{achievement.title}</CardTitle>\r\n                      <p className=\"text-sm text-muted-foreground\">{achievement.description}</p>\r\n                    </div>\r\n                  </div>\r\n                </CardHeader>\r\n\r\n                <CardContent>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <div className=\"flex justify-between text-sm mb-1\">\r\n                        <span>Progress</span>\r\n                        <span>{achievement.progress}/{achievement.maxProgress}</span>\r\n                      </div>\r\n                      <Progress value={(achievement.progress / achievement.maxProgress) * 100} />\r\n                    </div>\r\n\r\n                    {achievement.unlocked && achievement.unlockedDate && (\r\n                      <p className=\"text-xs text-muted-foreground\">\r\n                        Unlocked on {new Date(achievement.unlockedDate).toLocaleDateString()}\r\n                      </p>\r\n                    )}\r\n\r\n                    {achievement.unlocked && (\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleShare(achievement)}\r\n                        className=\"w-full\"\r\n                      >\r\n                        <Share2 className=\"h-4 w-4 mr-2\" />\r\n                        Share Achievement\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* Achievement History */}\r\n      <Card className=\"mt-8\">\r\n        <CardHeader>\r\n          <CardTitle>Achievement History</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            {achievements\r\n              .filter(a => a.unlocked)\r\n              .sort((a, b) => new Date(b.unlockedDate!).getTime() - new Date(a.unlockedDate!).getTime())\r\n              .map(achievement => (\r\n                <div key={achievement.id} className=\"flex items-center gap-4 p-4 border rounded-lg\">\r\n                  <div className=\"text-2xl\">{achievement.icon}</div>\r\n                  <div className=\"flex-1\">\r\n                    <h3 className=\"font-medium\">{achievement.title}</h3>\r\n                    <p className=\"text-sm text-muted-foreground\">{achievement.description}</p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <p className=\"text-sm font-medium\">\r\n                      {new Date(achievement.unlockedDate!).toLocaleDateString()}\r\n                    </p>\r\n                    <Badge variant=\"secondary\" className=\"mt-1\">Unlocked</Badge>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n            </div>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      );\r\n    }","import { useState, useMemo } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport {\r\n  Search,\r\n  Bookmark,\r\n  BookmarkCheck,\r\n  BookOpen,\r\n  Apple,\r\n  Beef,\r\n  Wheat,\r\n  Droplets,\r\n  CheckCircle,\r\n  Clock,\r\n  Star\r\n} from \"lucide-react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getQueryFn } from \"@/lib/queryClient\";\r\nimport { Header } from \"@/components/layout/header\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\n\r\ninterface NutritionTip {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n  category: string;\r\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\r\n  readTime: number;\r\n  tags: string[];\r\n  bookmarked?: boolean;\r\n  completed?: boolean;\r\n}\r\n\r\ninterface TipsResponse {\r\n  tips: string[];\r\n}\r\n\r\nexport default function NutritionEducationPage() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\r\n  const [bookmarkedTips, setBookmarkedTips] = useState<Set<number>>(new Set([1, 3, 5]));\r\n  const [completedTips, setCompletedTips] = useState<Set<number>>(new Set([1, 2]));\r\n\r\n  // Fetch nutrition tips from API\r\n  const { data, isLoading, error } = useQuery<TipsResponse>({\r\n    queryKey: [\"/api/nutrition-tips\"],\r\n    queryFn: getQueryFn({ on401: \"returnNull\" })\r\n  });\r\n\r\n  // Mock expanded nutrition education content\r\n  const nutritionTips: NutritionTip[] = [\r\n    {\r\n      id: 1,\r\n      title: \"Understanding Macronutrients\",\r\n      content: \"Macronutrients are the nutrients we need in large amounts: carbohydrates, proteins, and fats. Each plays a crucial role in our body's functions and energy production.\",\r\n      category: \"basics\",\r\n      difficulty: \"beginner\",\r\n      readTime: 5,\r\n      tags: [\"macronutrients\", \"basics\", \"nutrition\"],\r\n      bookmarked: true,\r\n      completed: true\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Protein: The Building Block of Life\",\r\n      content: \"Protein is essential for muscle repair, immune function, and hormone production. Learn how to calculate your daily protein needs and identify high-quality protein sources.\",\r\n      category: \"protein\",\r\n      difficulty: \"beginner\",\r\n      readTime: 8,\r\n      tags: [\"protein\", \"muscle\", \"health\"],\r\n      completed: true\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Carbohydrates: Energy for Performance\",\r\n      content: \"Carbs are your body's primary energy source. Discover the difference between simple and complex carbohydrates and how to optimize your carb intake for sustained energy.\",\r\n      category: \"carbs\",\r\n      difficulty: \"intermediate\",\r\n      readTime: 10,\r\n      tags: [\"carbohydrates\", \"energy\", \"performance\"],\r\n      bookmarked: true\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Healthy Fats: Essential for Health\",\r\n      content: \"Not all fats are created equal. Learn about omega-3s, omega-6s, and how to incorporate healthy fats into your diet while avoiding trans fats.\",\r\n      category: \"fats\",\r\n      difficulty: \"intermediate\",\r\n      readTime: 7,\r\n      tags: [\"fats\", \"omega-3\", \"health\"],\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Micronutrients: Vitamins and Minerals\",\r\n      content: \"While needed in smaller amounts, vitamins and minerals are crucial for optimal health. Understand the role of antioxidants, electrolytes, and essential minerals.\",\r\n      category: \"micronutrients\",\r\n      difficulty: \"advanced\",\r\n      readTime: 12,\r\n      tags: [\"vitamins\", \"minerals\", \"antioxidants\"],\r\n      bookmarked: true\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Hydration: More Than Just Water\",\r\n      content: \"Proper hydration affects everything from cognitive function to physical performance. Learn about electrolyte balance and how to stay optimally hydrated.\",\r\n      category: \"hydration\",\r\n      difficulty: \"beginner\",\r\n      readTime: 6,\r\n      tags: [\"hydration\", \"electrolytes\", \"performance\"]\r\n    },\r\n    {\r\n      id: 7,\r\n      title: \"Meal Timing and Frequency\",\r\n      content: \"When you eat can be as important as what you eat. Explore intermittent fasting, meal frequency, and timing strategies for optimal health.\",\r\n      category: \"meal-timing\",\r\n      difficulty: \"advanced\",\r\n      readTime: 15,\r\n      tags: [\"meal-timing\", \"intermittent-fasting\", \"metabolism\"]\r\n    },\r\n    {\r\n      id: 8,\r\n      title: \"Reading Nutrition Labels\",\r\n      content: \"Navigate food labels like a pro. Learn to identify hidden sugars, understand serving sizes, and make informed decisions at the grocery store.\",\r\n      category: \"label-reading\",\r\n      difficulty: \"beginner\",\r\n      readTime: 9,\r\n      tags: [\"labels\", \"shopping\", \"education\"]\r\n    }\r\n  ];\r\n\r\n  const categories = [\r\n    { id: \"all\", label: \"All Topics\", icon: BookOpen },\r\n    { id: \"basics\", label: \"Nutrition Basics\", icon: Apple },\r\n    { id: \"protein\", label: \"Protein\", icon: Beef },\r\n    { id: \"carbs\", label: \"Carbohydrates\", icon: Wheat },\r\n    { id: \"fats\", label: \"Healthy Fats\", icon: Droplets },\r\n    { id: \"micronutrients\", label: \"Vitamins & Minerals\", icon: Star },\r\n    { id: \"hydration\", label: \"Hydration\", icon: Droplets },\r\n    { id: \"meal-timing\", label: \"Meal Timing\", icon: Clock },\r\n    { id: \"label-reading\", label: \"Label Reading\", icon: Search }\r\n  ];\r\n\r\n  const filteredTips = useMemo(() => {\r\n    return nutritionTips.filter(tip => {\r\n      const matchesSearch = tip.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                           tip.content.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                           tip.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\r\n      const matchesCategory = selectedCategory === \"all\" || tip.category === selectedCategory;\r\n      return matchesSearch && matchesCategory;\r\n    });\r\n  }, [searchTerm, selectedCategory]);\r\n\r\n  const toggleBookmark = (tipId: number) => {\r\n    setBookmarkedTips(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(tipId)) {\r\n        newSet.delete(tipId);\r\n      } else {\r\n        newSet.add(tipId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const markAsCompleted = (tipId: number) => {\r\n    setCompletedTips(prev => new Set([...Array.from(prev), tipId]));\r\n  };\r\n\r\n  const completedCount = completedTips.size;\r\n  const totalTips = nutritionTips.length;\r\n  const progressPercentage = Math.round((completedCount / totalTips) * 100);\r\n\r\n  const getDifficultyColor = (difficulty: string) => {\r\n    switch (difficulty) {\r\n      case 'beginner': return 'bg-green-100 text-green-800';\r\n      case 'intermediate': return 'bg-yellow-100 text-yellow-800';\r\n      case 'advanced': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <Header />\r\n      <main className=\"flex-grow\">\r\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold mb-2\">Nutrition Education</h1>\r\n            <p className=\"text-muted-foreground\">\r\n              Expand your knowledge with comprehensive nutrition guides, tips, and educational content.\r\n            </p>\r\n          </div>\r\n\r\n      {/* Progress Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Learning Progress</CardTitle>\r\n            <BookOpen className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{completedCount}/{totalTips}</div>\r\n            <Progress value={progressPercentage} className=\"mt-2\" />\r\n            <p className=\"text-xs text-muted-foreground mt-1\">{progressPercentage}% Complete</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Bookmarked</CardTitle>\r\n            <Bookmark className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{bookmarkedTips.size}</div>\r\n            <p className=\"text-xs text-muted-foreground mt-1\">Saved for later</p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">This Week</CardTitle>\r\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">2</div>\r\n            <p className=\"text-xs text-muted-foreground mt-1\">Articles read</p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Search and Filter */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"flex flex-col md:flex-row gap-4 mb-4\">\r\n          <div className=\"relative flex-1\">\r\n            <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\r\n            <Input\r\n              placeholder=\"Search nutrition topics...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Tabs value={selectedCategory} onValueChange={setSelectedCategory}>\r\n          <TabsList className=\"grid w-full grid-cols-3 lg:grid-cols-5 xl:grid-cols-9\">\r\n            {categories.map(category => (\r\n              <TabsTrigger key={category.id} value={category.id} className=\"flex items-center gap-2 text-xs\">\r\n                <category.icon className=\"h-3 w-3\" />\r\n                <span className=\"hidden sm:inline\">{category.label}</span>\r\n              </TabsTrigger>\r\n            ))}\r\n          </TabsList>\r\n        </Tabs>\r\n      </div>\r\n\r\n      {/* Tips Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {filteredTips.map(tip => (\r\n          <Card key={tip.id} className=\"relative hover:shadow-lg transition-shadow\">\r\n            {bookmarkedTips.has(tip.id) && (\r\n              <div className=\"absolute -top-2 -right-2\">\r\n                <BookmarkCheck className=\"h-6 w-6 text-yellow-500 fill-current\" />\r\n              </div>\r\n            )}\r\n\r\n            <CardHeader>\r\n              <div className=\"flex items-start justify-between\">\r\n                <div className=\"flex-1\">\r\n                  <CardTitle className=\"text-lg mb-2\">{tip.title}</CardTitle>\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <Badge className={getDifficultyColor(tip.difficulty)}>\r\n                      {tip.difficulty}\r\n                    </Badge>\r\n                    <span className=\"text-xs text-muted-foreground flex items-center gap-1\">\r\n                      <Clock className=\"h-3 w-3\" />\r\n                      {tip.readTime} min\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n\r\n            <CardContent>\r\n              <p className=\"text-sm text-muted-foreground mb-4 line-clamp-3\">\r\n                {tip.content}\r\n              </p>\r\n\r\n              <div className=\"flex flex-wrap gap-1 mb-4\">\r\n                {tip.tags.slice(0, 3).map(tag => (\r\n                  <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\r\n                    {tag}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => toggleBookmark(tip.id)}\r\n                  className={bookmarkedTips.has(tip.id) ? \"text-yellow-600\" : \"\"}\r\n                >\r\n                  <Bookmark className=\"h-4 w-4 mr-1\" />\r\n                  {bookmarkedTips.has(tip.id) ? \"Saved\" : \"Save\"}\r\n                </Button>\r\n\r\n                {completedTips.has(tip.id) ? (\r\n                  <Badge className=\"bg-green-100 text-green-800\">\r\n                    <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                    Completed\r\n                  </Badge>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => markAsCompleted(tip.id)}\r\n                  >\r\n                    Mark Complete\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {filteredTips.length === 0 && (\r\n        <div className=\"text-center py-12\">\r\n          <BookOpen className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium mb-2\">No results found</h3>\r\n          <p className=\"text-muted-foreground\">\r\n            Try adjusting your search terms or browse all topics.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quick Tips from API */}\r\n      {data?.tips && (\r\n        <Card className=\"mt-8\">\r\n          <CardHeader>\r\n            <CardTitle>Daily Nutrition Tips</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <ul className=\"space-y-2\">\r\n              {data.tips.map((tip, index) => (\r\n                <li key={index} className=\"flex items-start gap-2\">\r\n                  <CheckCircle className=\"h-5 w-5 text-green-500 mt-0.5 flex-shrink-0\" />\r\n                  <span className=\"text-sm\">{tip}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n            </div>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      );\r\n}","\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","import { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { Header } from \"@/components/layout/header\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\nimport {\r\n  User,\r\n  Settings,\r\n  CreditCard,\r\n  Bell,\r\n  Shield,\r\n  DollarSign,\r\n  RefreshCw,\r\n  Crown,\r\n  Calendar,\r\n  TrendingUp,\r\n  Award,\r\n  Mail,\r\n  Phone,\r\n  MapPin\r\n} from \"lucide-react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getQueryFn } from \"@/lib/queryClient\";\r\nimport { useAuth } from \"@/hooks/use-auth\";\r\n\r\ninterface ReferralCommission {\r\n  id: number;\r\n  amount: number;\r\n  status: 'pending' | 'paid' | 'cancelled';\r\n  created_at: string;\r\n  is_recurring: boolean;\r\n}\r\n\r\ninterface UserStats {\r\n  totalMeals: number;\r\n  totalCalories: number;\r\n  streakDays: number;\r\n  achievements: number;\r\n  joinDate: string;\r\n}\r\n\r\nexport default function ProfilePage() {\r\n  const { user } = useAuth();\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n\r\n  // Fetch referral commissions\r\n  const { data: commissions, isLoading: commissionsLoading, refetch } = useQuery<ReferralCommission[]>({\r\n    queryKey: ['/api/user/referrals/commissions'],\r\n    queryFn: getQueryFn({ on401: \"returnNull\" })\r\n  });\r\n\r\n  // Mock user stats - in real app this would come from API\r\n  const userStats: UserStats = {\r\n    totalMeals: 1247,\r\n    totalCalories: 89250,\r\n    streakDays: 23,\r\n    achievements: 15,\r\n    joinDate: \"2024-01-15\"\r\n  };\r\n\r\n  const totalEarned = commissions?.reduce((sum, c) => sum + (c.status === 'paid' ? c.amount : 0), 0) || 0;\r\n  const pendingAmount = commissions?.reduce((sum, c) => sum + (c.status === 'pending' ? c.amount : 0), 0) || 0;\r\n\r\n  const subscriptionPlans = [\r\n    {\r\n      name: \"Free\",\r\n      price: \"$0\",\r\n      features: [\"Basic meal tracking\", \"Weekly reports\", \"Community support\"],\r\n      current: true\r\n    },\r\n    {\r\n      name: \"Premium\",\r\n      price: \"$9.99/month\",\r\n      features: [\"AI meal suggestions\", \"Advanced analytics\", \"Priority support\", \"Export data\"],\r\n      popular: true\r\n    },\r\n    {\r\n      name: \"Pro\",\r\n      price: \"$19.99/month\",\r\n      features: [\"All Premium features\", \"Personal coach\", \"Custom meal plans\", \"API access\"],\r\n      popular: false\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <Header />\r\n      <main className=\"flex-grow\">\r\n        <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold mb-2\">Profile & Account</h1>\r\n            <p className=\"text-muted-foreground\">\r\n              Manage your account settings, view your progress, and handle subscriptions.\r\n            </p>\r\n          </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList className=\"grid w-full grid-cols-4\">\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"referrals\">Referrals</TabsTrigger>\r\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n          <TabsTrigger value=\"subscription\">Subscription</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Overview Tab */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {/* Profile Header */}\r\n          <Card>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"flex items-center gap-6\">\r\n                <Avatar className=\"h-20 w-20\">\r\n                  <AvatarFallback className=\"text-lg\">\r\n                    {user?.firstName?.charAt(0)?.toUpperCase() || user?.username?.charAt(0)?.toUpperCase() || \"U\"}\r\n                  </AvatarFallback>\r\n                </Avatar>\r\n                <div className=\"flex-1\">\r\n                  <h2 className=\"text-2xl font-bold\">\r\n                    {user?.firstName && user?.lastName\r\n                      ? `${user.firstName} ${user.lastName}`\r\n                      : user?.username || \"User\"}\r\n                  </h2>\r\n                  <p className=\"text-muted-foreground\">{user?.email}</p>\r\n                  <div className=\"flex items-center gap-4 mt-2\">\r\n                    <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\r\n                      <Calendar className=\"h-3 w-3\" />\r\n                      Joined {new Date(userStats.joinDate).toLocaleDateString()}\r\n                    </Badge>\r\n                    <Badge variant=\"outline\" className=\"flex items-center gap-1\">\r\n                      <Crown className=\"h-3 w-3\" />\r\n                      Free Plan\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n                <Button variant=\"outline\">\r\n                  <Settings className=\"h-4 w-4 mr-2\" />\r\n                  Edit Profile\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Stats Grid */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Total Meals</CardTitle>\r\n                <Award className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{userStats.totalMeals.toLocaleString()}</div>\r\n                <p className=\"text-xs text-muted-foreground\">Meals logged</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Calories Tracked</CardTitle>\r\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{userStats.totalCalories.toLocaleString()}</div>\r\n                <p className=\"text-xs text-muted-foreground\">Total calories</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Current Streak</CardTitle>\r\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{userStats.streakDays}</div>\r\n                <p className=\"text-xs text-muted-foreground\">Days in a row</p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Achievements</CardTitle>\r\n                <Award className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{userStats.achievements}</div>\r\n                <p className=\"text-xs text-muted-foreground\">Unlocked</p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Recent Activity */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Recent Activity</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center gap-4\">\r\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"text-sm font-medium\">Completed daily calorie goal</p>\r\n                    <p className=\"text-xs text-muted-foreground\">2 hours ago</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-4\">\r\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"text-sm font-medium\">Unlocked \"Protein Master\" achievement</p>\r\n                    <p className=\"text-xs text-muted-foreground\">1 day ago</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-4\">\r\n                  <div className=\"w-2 h-2 bg-purple-500 rounded-full\"></div>\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"text-sm font-medium\">Generated new meal plan</p>\r\n                    <p className=\"text-xs text-muted-foreground\">3 days ago</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Referrals Tab */}\r\n        <TabsContent value=\"referrals\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Referral Commissions</CardTitle>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button onClick={() => refetch()} className=\"p-1 hover:bg-accent rounded\">\r\n                  <RefreshCw className=\"h-4 w-4\" />\r\n                </button>\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Total Earned</span>\r\n                  <span className=\"font-medium\">${totalEarned.toFixed(2)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Pending Commissions</span>\r\n                  <span className=\"font-medium\">${pendingAmount.toFixed(2)}</span>\r\n                </div>\r\n\r\n                <div className=\"mt-4\">\r\n                  <h3 className=\"text-sm font-medium mb-2\">Recent Commissions</h3>\r\n                  <div className=\"space-y-2\">\r\n                    {commissions?.slice(0, 5).map(commission => (\r\n                      <div key={commission.id} className=\"flex justify-between items-center text-sm\">\r\n                        <div>\r\n                          <span>${commission.amount.toFixed(2)}</span>\r\n                          {commission.is_recurring && (\r\n                            <Badge variant=\"secondary\" className=\"ml-2\">Recurring</Badge>\r\n                          )}\r\n                        </div>\r\n                        <Badge\r\n                          variant={commission.status === 'paid' ? 'default' :\r\n                                  commission.status === 'pending' ? 'secondary' : 'destructive'}>\r\n                          {commission.status}\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                    {commissions?.length === 0 && (\r\n                      <p className=\"text-sm text-muted-foreground\">No commissions yet</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Referral Link</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Share your referral link to earn commissions when friends sign up and subscribe.\r\n                </p>\r\n                <div className=\"flex gap-2\">\r\n                  <Input\r\n                    value={`${window.location.origin}/?ref=${user?.id || 'user123'}`}\r\n                    readOnly\r\n                    className=\"flex-1\"\r\n                  />\r\n                  <Button variant=\"outline\" onClick={() => {\r\n                    navigator.clipboard.writeText(`${window.location.origin}/?ref=${user?.id || 'user123'}`);\r\n                  }}>\r\n                    Copy\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Settings Tab */}\r\n        <TabsContent value=\"settings\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Personal Information</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"name\">Full Name</Label>\r\n                  <Input id=\"name\" defaultValue={\r\n                    user?.firstName && user?.lastName\r\n                      ? `${user.firstName} ${user.lastName}`\r\n                      : user?.username || \"\"\r\n                  } />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"email\">Email</Label>\r\n                  <Input id=\"email\" type=\"email\" defaultValue={user?.email || \"\"} />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"phone\">Phone</Label>\r\n                  <Input id=\"phone\" type=\"tel\" placeholder=\"+1 (555) 123-4567\" />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"location\">Location</Label>\r\n                  <Input id=\"location\" placeholder=\"City, Country\" />\r\n                </div>\r\n              </div>\r\n              <Button>Save Changes</Button>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Preferences</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <Label>Email Notifications</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Receive updates about your progress</p>\r\n                </div>\r\n                <Switch defaultChecked />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <Label>Weekly Reports</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Get weekly summary emails</p>\r\n                </div>\r\n                <Switch defaultChecked />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <Label>Achievement Notifications</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Celebrate your milestones</p>\r\n                </div>\r\n                <Switch defaultChecked />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Privacy & Security</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                <Shield className=\"h-4 w-4 mr-2\" />\r\n                Change Password\r\n              </Button>\r\n              <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                <Bell className=\"h-4 w-4 mr-2\" />\r\n                Privacy Settings\r\n              </Button>\r\n              <Button variant=\"outline\" className=\"w-full justify-start text-red-600\">\r\n                <User className=\"h-4 w-4 mr-2\" />\r\n                Delete Account\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Subscription Tab */}\r\n        <TabsContent value=\"subscription\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {subscriptionPlans.map((plan, index) => (\r\n              <Card key={index} className={`relative ${plan.popular ? 'ring-2 ring-blue-600' : ''}`}>\r\n                {plan.popular && (\r\n                  <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\r\n                    <Badge className=\"bg-blue-600 text-white px-4 py-1\">\r\n                      Most Popular\r\n                    </Badge>\r\n                  </div>\r\n                )}\r\n                <CardHeader className=\"text-center\">\r\n                  <CardTitle className=\"text-xl\">{plan.name}</CardTitle>\r\n                  <div className=\"mt-4\">\r\n                    <span className=\"text-3xl font-bold\">{plan.price}</span>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <ul className=\"space-y-2 mb-6\">\r\n                    {plan.features.map((feature, featureIndex) => (\r\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\r\n                        <Award className=\"h-4 w-4 text-green-500 mr-2 flex-shrink-0\" />\r\n                        <span>{feature}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  <Button\r\n                    className={`w-full ${plan.current ? 'bg-gray-100 text-gray-600' : plan.popular ? 'bg-blue-600 hover:bg-blue-700' : ''}`}\r\n                    disabled={plan.current}\r\n                  >\r\n                    {plan.current ? 'Current Plan' : 'Upgrade'}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Billing History</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between items-center py-2 border-b\">\r\n                  <div>\r\n                    <p className=\"font-medium\">Premium Plan - Monthly</p>\r\n                    <p className=\"text-sm text-muted-foreground\">Dec 1, 2024</p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <p className=\"font-medium\">$9.99</p>\r\n                    <Badge className=\"bg-green-100 text-green-800\">Paid</Badge>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex justify-between items-center py-2 border-b\">\r\n                  <div>\r\n                    <p className=\"font-medium\">Premium Plan - Monthly</p>\r\n                    <p className=\"text-sm text-muted-foreground\">Nov 1, 2024</p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <p className=\"font-medium\">$9.99</p>\r\n                    <Badge className=\"bg-green-100 text-green-800\">Paid</Badge>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n            </div>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      );\r\n}","import { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"../../components/ui/card\";\r\nimport { Button } from \"../../components/ui/button\";\r\nimport { Badge } from \"../../components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"../../components/ui/tabs\";\r\nimport { Progress } from \"../../components/ui/progress\";\r\nimport { \r\n  LineChart, \r\n  Line, \r\n  XAxis, \r\n  YAxis, \r\n  CartesianGrid, \r\n  Tooltip, \r\n  Legend, \r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  RadarChart,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis,\r\n  Radar\r\n} from \"recharts\";\r\nimport { \r\n  Activity, \r\n  Heart, \r\n  Brain, \r\n  TrendingUp, \r\n  Target, \r\n  AlertTriangle,\r\n  Calendar,\r\n  Award,\r\n  Users,\r\n  Download,\r\n  Share2,\r\n  Settings,\r\n  RefreshCw\r\n} from \"lucide-react\";\r\n\r\n// Mock data for demonstration\r\nconst generateMockHealthScores = () => [\r\n  { date: '2024-01-01', nutrition: 85, fitness: 78, recovery: 82, consistency: 75, overall: 80 },\r\n  { date: '2024-01-02', nutrition: 88, fitness: 82, recovery: 85, consistency: 78, overall: 83 },\r\n  { date: '2024-01-03', nutrition: 82, fitness: 80, recovery: 83, consistency: 80, overall: 81 },\r\n  { date: '2024-01-04', nutrition: 90, fitness: 85, recovery: 88, consistency: 82, overall: 86 },\r\n  { date: '2024-01-05', nutrition: 87, fitness: 83, recovery: 86, consistency: 85, overall: 85 },\r\n  { date: '2024-01-06', nutrition: 89, fitness: 87, recovery: 89, consistency: 88, overall: 88 },\r\n  { date: '2024-01-07', nutrition: 92, fitness: 90, recovery: 91, consistency: 90, overall: 91 },\r\n];\r\n\r\nconst generateMockPredictions = () => [\r\n  { type: 'Weight Projection', current: 75, predicted: 73, confidence: 85, trend: 'down' },\r\n  { type: 'Goal Achievement', current: 65, predicted: 78, confidence: 92, trend: 'up' },\r\n  { type: 'Health Risk', current: 20, predicted: 15, confidence: 78, trend: 'down' },\r\n  { type: 'Performance', current: 70, predicted: 82, confidence: 88, trend: 'up' },\r\n];\r\n\r\nconst generateMockPatternAnalysis = () => [\r\n  { pattern: 'Sleep-Nutrition', correlation: 0.78, strength: 'Strong' },\r\n  { pattern: 'Exercise-Nutrition', correlation: 0.65, strength: 'Moderate' },\r\n  { pattern: 'Stress-Eating', correlation: 0.45, strength: 'Weak' },\r\n  { pattern: 'Metabolic Rate', correlation: 0.82, strength: 'Strong' },\r\n];\r\n\r\nconst generateMockRealTimeData = () => [\r\n  { metric: 'Heart Rate', value: 72, target: 60-100, status: 'normal' },\r\n  { metric: 'Blood Pressure', value: '120/80', target: '<120/80', status: 'optimal' },\r\n  { metric: 'Sleep Quality', value: 85, target: '>80', status: 'good' },\r\n  { metric: 'Activity Level', value: 78, target: '>75', status: 'good' },\r\n  { metric: 'Stress Level', value: 32, target: '<35', status: 'good' },\r\n  { metric: 'Hydration', value: 68, target: '>80', status: 'low' },\r\n];\r\n\r\nconst COLORS = ['#4F46E5', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4'];\r\n\r\nexport function PremiumAnalyticsDashboard() {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [healthScores, setHealthScores] = useState<any[]>([]);\r\n  const [predictions, setPredictions] = useState<any[]>([]);\r\n  const [patternAnalysis, setPatternAnalysis] = useState<any[]>([]);\r\n  const [realTimeData, setRealTimeData] = useState<any[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      setHealthScores(generateMockHealthScores());\r\n      setPredictions(generateMockPredictions());\r\n      setPatternAnalysis(generateMockPatternAnalysis());\r\n      setRealTimeData(generateMockRealTimeData());\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const getScoreColor = (score: number) => {\r\n    if (score >= 85) return 'text-green-500';\r\n    if (score >= 70) return 'text-yellow-500';\r\n    return 'text-red-500';\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'normal':\r\n      case 'good':\r\n      case 'optimal':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'warning':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'critical':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getTrendIcon = (trend: string) => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return '📈';\r\n      case 'down':\r\n        return '📉';\r\n      default:\r\n        return '➡️';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-96\">\r\n        <div className=\"text-center\">\r\n          <RefreshCw className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\r\n          <p>Loading premium analytics...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Premium Analytics</h1>\r\n          <p className=\"text-gray-600\">Comprehensive health insights and predictions</p>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <Share2 className=\"h-4 w-4 mr-2\" />\r\n            Share\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <Settings className=\"h-4 w-4 mr-2\" />\r\n            Settings\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Health Scores Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Overall Health</CardTitle>\r\n            <Award className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">91</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              <span className=\"text-green-600\">+5%</span> from last week\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Nutrition</CardTitle>\r\n            <Brain className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">92</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              <span className=\"text-green-600\">+3%</span> from last week\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Fitness</CardTitle>\r\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">90</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              <span className=\"text-green-600\">+7%</span> from last week\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Recovery</CardTitle>\r\n            <Heart className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">91</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              <span className=\"text-green-600\">+2%</span> from last week\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"predictions\">Predictions</TabsTrigger>\r\n          <TabsTrigger value=\"patterns\">Patterns</TabsTrigger>\r\n          <TabsTrigger value=\"monitoring\">Monitoring</TabsTrigger>\r\n          <TabsTrigger value=\"reports\">Reports</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Overview Tab */}\r\n        <TabsContent value=\"overview\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Health Scores Trend */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Health Scores Trend</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <LineChart data={healthScores}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis domain={[0, 100]} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"overall\" stroke=\"#4F46E5\" strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"nutrition\" stroke=\"#10B981\" strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"fitness\" stroke=\"#F59E0B\" strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"recovery\" stroke=\"#EF4444\" strokeWidth={2} />\r\n                    <Line type=\"monotone\" dataKey=\"consistency\" stroke=\"#8B5CF6\" strokeWidth={2} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Score Distribution */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Current Score Distribution</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <BarChart data={healthScores.slice(-1)[0]}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis domain={[0, 100]} />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"nutrition\" fill=\"#10B981\" />\r\n                    <Bar dataKey=\"fitness\" fill=\"#F59E0B\" />\r\n                    <Bar dataKey=\"recovery\" fill=\"#EF4444\" />\r\n                    <Bar dataKey=\"consistency\" fill=\"#8B5CF6\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Recent Achievements */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Recent Achievements</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\r\n                    <Award className=\"h-5 w-5 text-green-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"font-medium\">Nutrition Master</p>\r\n                    <p className=\"text-sm text-gray-600\">7-day streak</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                    <Target className=\"h-5 w-5 text-blue-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"font-medium\">Goal Achiever</p>\r\n                    <p className=\"text-sm text-gray-600\">Weight loss target</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center\">\r\n                    <TrendingUp className=\"h-5 w-5 text-purple-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"font-medium\">Consistency King</p>\r\n                    <p className=\"text-sm text-gray-600\">30-day perfect</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Predictions Tab */}\r\n        <TabsContent value=\"predictions\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {predictions.map((prediction, index) => (\r\n              <Card key={index}>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center justify-between\">\r\n                    {prediction.type}\r\n                    <Badge variant={prediction.trend === 'up' ? 'default' : 'secondary'}>\r\n                      {getTrendIcon(prediction.trend)} {prediction.trend}\r\n                    </Badge>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <div className=\"flex justify-between text-sm mb-2\">\r\n                        <span>Current</span>\r\n                        <span className=\"font-medium\">{prediction.current}</span>\r\n                      </div>\r\n                      <Progress value={prediction.current} className=\"h-2\" />\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"flex justify-between text-sm mb-2\">\r\n                        <span>Predicted</span>\r\n                        <span className=\"font-medium\">{prediction.predicted}</span>\r\n                      </div>\r\n                      <Progress value={prediction.predicted} className=\"h-2\" />\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center pt-2 border-t\">\r\n                      <span className=\"text-sm text-gray-600\">Confidence</span>\r\n                      <span className=\"font-medium\">{prediction.confidence}%</span>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          {/* AI Insights */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>AI-Powered Insights</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-blue-900 mb-2\">Weight Management</h4>\r\n                  <p className=\"text-sm text-blue-700\">\r\n                    Based on your current trends, you're likely to reach your target weight in 3-4 weeks. \r\n                    Consider maintaining your current exercise routine and slightly increasing protein intake.\r\n                  </p>\r\n                </div>\r\n                <div className=\"p-4 bg-green-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-green-900 mb-2\">Performance Optimization</h4>\r\n                  <p className=\"text-sm text-green-700\">\r\n                    Your fitness performance is improving steadily. We predict a 15% increase in your \r\n                    workout efficiency over the next month if you continue your current regimen.\r\n                  </p>\r\n                </div>\r\n                <div className=\"p-4 bg-yellow-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-yellow-900 mb-2\">Health Risk Alert</h4>\r\n                  <p className=\"text-sm text-yellow-700\">\r\n                    Your stress levels show a slight upward trend. Consider incorporating meditation \r\n                    or relaxation techniques into your daily routine.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Patterns Tab */}\r\n        <TabsContent value=\"patterns\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Pattern Analysis */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Health Pattern Analysis</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {patternAnalysis.map((pattern, index) => (\r\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                      <div>\r\n                        <p className=\"font-medium\">{pattern.pattern}</p>\r\n                        <p className=\"text-sm text-gray-600\">Correlation: {pattern.correlation}</p>\r\n                      </div>\r\n                      <Badge variant={pattern.strength === 'Strong' ? 'default' : 'secondary'}>\r\n                        {pattern.strength}\r\n                      </Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Radar Chart */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Pattern Strength Analysis</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <RadarChart data={patternAnalysis}>\r\n                    <PolarGrid />\r\n                    <PolarAngleAxis dataKey=\"pattern\" />\r\n                    <PolarRadiusAxis angle={90} domain={[0, 1]} />\r\n                    <Radar\r\n                      name=\"Correlation\"\r\n                      dataKey=\"correlation\"\r\n                      stroke=\"#4F46E5\"\r\n                      fill=\"#4F46E5\"\r\n                      fillOpacity={0.6}\r\n                    />\r\n                  </RadarChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Detailed Pattern Insights */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Detailed Pattern Insights</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Sleep-Nutrition Correlation</h4>\r\n                  <p className=\"text-sm text-gray-600 mb-3\">\r\n                    Strong correlation (0.78) between sleep quality and nutrition consistency. \r\n                    Better sleep leads to better food choices.\r\n                  </p>\r\n                  <div className=\"h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n                    <div \r\n                      className=\"h-full bg-green-500\" \r\n                      style={{ width: `${0.78 * 100}%` }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Exercise-Nutrition Correlation</h4>\r\n                  <p className=\"text-sm text-gray-600 mb-3\">\r\n                    Moderate correlation (0.65) between exercise intensity and nutrition quality. \r\n                    More active days show better dietary choices.\r\n                  </p>\r\n                  <div className=\"h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n                    <div \r\n                      className=\"h-full bg-yellow-500\" \r\n                      style={{ width: `${0.65 * 100}%` }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Monitoring Tab */}\r\n        <TabsContent value=\"monitoring\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {realTimeData.map((metric, index) => (\r\n              <Card key={index}>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                  <CardTitle className=\"text-sm font-medium\">{metric.metric}</CardTitle>\r\n                  <div className={`w-2 h-2 rounded-full ${\r\n                    metric.status === 'optimal' || metric.status === 'good' ? 'bg-green-500' : \r\n                    metric.status === 'warning' ? 'bg-yellow-500' : 'bg-red-500'\r\n                  }`}></div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"text-2xl font-bold\">{metric.value}</div>\r\n                  <p className=\"text-xs text-muted-foreground\">\r\n                    Target: {metric.target}\r\n                  </p>\r\n                  <Badge className={getStatusColor(metric.status)}>\r\n                    {metric.status}\r\n                  </Badge>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Real-time Chart */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Real-time Health Metrics</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ResponsiveContainer width=\"100%\" height={400}>\r\n                <LineChart data={realTimeData}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"metric\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Bar dataKey=\"value\" fill=\"#4F46E5\" />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Reports Tab */}\r\n        <TabsContent value=\"reports\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center justify-between\">\r\n                  Weekly Summary\r\n                  <Badge>Ready</Badge>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-sm text-gray-600 mb-4\">\r\n                  Comprehensive weekly overview of your health metrics and progress.\r\n                </p>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Pages</span>\r\n                    <span>12</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Charts</span>\r\n                    <span>8</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Generated</span>\r\n                    <span>2 hours ago</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-2 mt-4\">\r\n                  <Button size=\"sm\" className=\"flex-1\">\r\n                    <Download className=\"h-4 w-4 mr-2\" />\r\n                    Download\r\n                  </Button>\r\n                  <Button size=\"sm\" variant=\"outline\">\r\n                    <Share2 className=\"h-4 w-4 mr-2\" />\r\n                    Share\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center justify-between\">\r\n                  Monthly Progress\r\n                  <Badge>Processing</Badge>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-sm text-gray-600 mb-4\">\r\n                  Detailed monthly progress tracking with trend analysis.\r\n                </p>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Pages</span>\r\n                    <span>24</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Charts</span>\r\n                    <span>15</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Estimated</span>\r\n                    <span>5 min</span>\r\n                  </div>\r\n                </div>\r\n                <Button size=\"sm\" className=\"w-full mt-4\" disabled>\r\n                  Generating...\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center justify-between\">\r\n                  Health Assessment\r\n                  <Badge>New</Badge>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-sm text-gray-600 mb-4\">\r\n                  Professional health assessment for medical consultation.\r\n                </p>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Pages</span>\r\n                    <span>18</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Charts</span>\r\n                    <span>12</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Format</span>\r\n                    <span>PDF</span>\r\n                  </div>\r\n                </div>\r\n                <Button size=\"sm\" className=\"w-full mt-4\">\r\n                  Generate Report\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Report Templates */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Report Templates</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                {[\r\n                  { name: 'Weekly Summary', icon: Calendar, desc: '7-day overview' },\r\n                  { name: 'Monthly Progress', icon: TrendingUp, desc: '30-day analysis' },\r\n                  { name: 'Quarterly Review', icon: Award, desc: '90-day assessment' },\r\n                  { name: 'Annual Journey', icon: Users, desc: 'Year in review' },\r\n                ].map((template, index) => (\r\n                  <div key={index} className=\"p-4 border rounded-lg cursor-pointer hover:bg-gray-50\">\r\n                    <template.icon className=\"h-8 w-8 text-blue-500 mb-2\" />\r\n                    <h4 className=\"font-medium\">{template.name}</h4>\r\n                    <p className=\"text-sm text-gray-600\">{template.desc}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { PremiumAnalyticsDashboard } from '../components/premium/PremiumAnalyticsDashboard';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';\r\nimport { Button } from '../components/ui/button';\r\nimport { Badge } from '../components/ui/badge';\r\nimport { ChartContainer } from \"@/components/ui/chart\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport { WeeklyStats } from \"@shared/schema\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getQueryFn } from \"@/lib/queryClient\";\r\nimport { BarChart2, PieChart } from \"lucide-react\";\r\nimport {\r\n  Star,\r\n  Crown,\r\n  Zap,\r\n  Shield,\r\n  TrendingUp,\r\n  Users,\r\n  CheckCircle,\r\n  ArrowRight\r\n} from 'lucide-react';\r\nimport { Header } from \"@/components/layout/header\";\r\nimport { Footer } from \"@/components/layout/footer\";\r\n\r\nexport default function PremiumAnalyticsPage() {\r\n   const [showPremiumFeatures, setShowPremiumFeatures] = useState(false);\r\n\r\n   // Fetch user's weekly stats for analytics\r\n   const { data: stats } = useQuery<WeeklyStats>({\r\n     queryKey: [\"/api/user/stats\"],\r\n     queryFn: getQueryFn({ on401: \"returnNull\" })\r\n   });\r\n\r\n   // Debug logging\r\n   console.log('DEBUG: PremiumAnalytics stats:', stats);\r\n   console.log('DEBUG: PremiumAnalytics stats.caloriesByDay:', stats?.caloriesByDay);\r\n\r\n   const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n   const selectedCondition = \"none\"; // Default to none for premium analytics\r\n\r\n  const premiumFeatures = [\r\n    {\r\n      icon: TrendingUp,\r\n      title: 'AI-Powered Insights',\r\n      description: 'Advanced machine learning algorithms provide personalized health predictions and recommendations',\r\n      benefits: ['Weight projections', 'Goal achievement forecasts', 'Health risk assessment']\r\n    },\r\n    {\r\n      icon: Zap,\r\n      title: 'Real-time Monitoring',\r\n      description: 'Live health tracking with instant alerts and continuous data synchronization',\r\n      benefits: ['24/7 health monitoring', 'Customizable alerts', 'Multi-device sync']\r\n    },\r\n    {\r\n      icon: Shield,\r\n      title: 'Healthcare Integration',\r\n      description: 'Secure data sharing with healthcare providers and professional-grade reports',\r\n      benefits: ['HIPAA compliant', 'Professional reports', 'Provider collaboration']\r\n    },\r\n    {\r\n      icon: Users,\r\n      title: 'Expert Analysis',\r\n      description: 'Access to nutritionists and fitness coaches for personalized guidance',\r\n      benefits: ['Expert consultations', 'Personalized plans', 'Progress tracking']\r\n    }\r\n  ];\r\n\r\n  const pricingPlans = [\r\n    {\r\n      name: 'Basic',\r\n      price: '$9.99',\r\n      period: 'month',\r\n      features: ['Basic analytics', 'Weekly reports', 'Email support'],\r\n      popular: false\r\n    },\r\n    {\r\n      name: 'Premium',\r\n      price: '$19.99',\r\n      period: 'month',\r\n      features: ['All Basic features', 'AI insights', 'Real-time monitoring', 'Healthcare integration', 'Priority support'],\r\n      popular: true\r\n    },\r\n    {\r\n      name: 'Professional',\r\n      price: '$39.99',\r\n      period: 'month',\r\n      features: ['All Premium features', 'Expert consultations', 'Custom reports', 'API access', 'Dedicated support'],\r\n      popular: false\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n      <Header />\r\n      <main className=\"flex-grow\">\r\n      {/* Hero Section */}\r\n      <div className=\"relative overflow-hidden\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\r\n          <div className=\"text-center\">\r\n            <div className=\"flex justify-center mb-6\">\r\n              <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 p-4 rounded-full\">\r\n                <Crown className=\"h-12 w-12 text-white\" />\r\n              </div>\r\n            </div>\r\n            <h1 className=\"text-4xl md:text-6xl font-bold text-gray-900 mb-6\">\r\n              Premium Analytics\r\n              <span className=\"block text-blue-600\">Unlock Your Health Potential</span>\r\n            </h1>\r\n            <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto\">\r\n              Transform your health journey with AI-powered insights, real-time monitoring, \r\n              and professional-grade analytics. Get the personalized guidance you need to achieve \r\n              your wellness goals.\r\n            </p>\r\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n              <Button \r\n                size=\"lg\" \r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 text-lg\"\r\n                onClick={() => setShowPremiumFeatures(true)}\r\n              >\r\n                Start Free Trial\r\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\r\n              </Button>\r\n              <Button \r\n                size=\"lg\" \r\n                variant=\"outline\" \r\n                className=\"px-8 py-3 text-lg\"\r\n                onClick={() => setShowPremiumFeatures(true)}\r\n              >\r\n                View Demo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Features Section */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\r\n        <div className=\"text-center mb-16\">\r\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n            Why Choose Premium Analytics?\r\n          </h2>\r\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\r\n            Experience the future of health tracking with our comprehensive premium features\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\r\n          {premiumFeatures.map((feature, index) => (\r\n            <Card key={index} className=\"text-center hover:shadow-lg transition-shadow\">\r\n              <CardHeader>\r\n                <div className=\"flex justify-center mb-4\">\r\n                  <feature.icon className=\"h-12 w-12 text-blue-600\" />\r\n                </div>\r\n                <CardTitle className=\"text-xl\">{feature.title}</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-gray-600 mb-4\">{feature.description}</p>\r\n                <ul className=\"text-left space-y-2\">\r\n                  {feature.benefits.map((benefit, benefitIndex) => (\r\n                    <li key={benefitIndex} className=\"flex items-center\">\r\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\r\n                      <span className=\"text-sm\">{benefit}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Demo Section */}\r\n      <div className=\"bg-white py-16\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center mb-12\">\r\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              See It in Action\r\n            </h2>\r\n            <p className=\"text-xl text-gray-600\">\r\n              Experience the power of premium analytics with our interactive demo\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-50 rounded-lg p-8\">\r\n            {showPremiumFeatures ? (\r\n              <PremiumAnalyticsDashboard />\r\n            ) : (\r\n              <div className=\"text-center py-12\">\r\n                <div className=\"mb-8\">\r\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-4\">\r\n                    <Star className=\"h-8 w-8 text-blue-600\" />\r\n                  </div>\r\n                  <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n                    Ready to Transform Your Health Journey?\r\n                  </h3>\r\n                  <p className=\"text-gray-600 max-w-2xl mx-auto mb-8\">\r\n                    Get started with our premium analytics dashboard and unlock powerful insights \r\n                    to help you achieve your health goals faster than ever before.\r\n                  </p>\r\n                  <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n                    <Button \r\n                      size=\"lg\" \r\n                      className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3\"\r\n                      onClick={() => setShowPremiumFeatures(true)}\r\n                    >\r\n                      View Live Demo\r\n                    </Button>\r\n                    <Button \r\n                      size=\"lg\" \r\n                      variant=\"outline\" \r\n                      className=\"px-8 py-3\"\r\n                      onClick={() => setShowPremiumFeatures(true)}\r\n                    >\r\n                      Explore Features\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Enhanced Analytics Charts */}\r\n      {stats && (\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\r\n          <div className=\"text-center mb-12\">\r\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Advanced Analytics Dashboard\r\n            </h2>\r\n            <p className=\"text-xl text-gray-600\">\r\n              Comprehensive charts and insights from your meal tracking data\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"space-y-8\">\r\n            {/* Calorie Trend */}\r\n            <Card className=\"p-6\">\r\n              <div className=\"flex items-center gap-2 mb-4\">\r\n                <BarChart2 className=\"w-5 h-5 text-primary-500\" />\r\n                <h3 className=\"font-medium text-neutral-900\">Calorie Trend</h3>\r\n              </div>\r\n              <div className=\"h-48 bg-gradient-to-br from-neutral-900 to-neutral-800 rounded-lg flex items-end justify-between p-4 shadow-inner\">\r\n                {daysOfWeek.map((day) => {\r\n                  const calories = (stats?.caloriesByDay as Record<string, number>)?.[day] || 0;\r\n                  const maxCalories = Math.max(...Object.values(stats?.caloriesByDay as Record<string, number> || {}));\r\n                  const percentage = maxCalories > 0 ? (calories / maxCalories) * 100 : 0;\r\n                  const today = new Date().getDay();\r\n                  const dayIndex = daysOfWeek.indexOf(day);\r\n                  const isPastOrToday = dayIndex <= today;\r\n                  const barClass = isPastOrToday ? \"bg-primary-400 w-full rounded-t-sm\" : \"bg-primary-900 w-full rounded-t-sm\";\r\n                  return (\r\n                    <div key={day} className=\"w-1/7 flex flex-col items-center\">\r\n                      <div\r\n                        className={barClass}\r\n                        style={{ height: `${percentage}%` }}\r\n                        aria-label={`Calories for ${day}: ${calories}`}\r\n                      ></div>\r\n                      <span className={`text-xs mt-2 ${isPastOrToday ? 'text-neutral-100' : 'text-neutral-500'}`}>{day.substring(0, 3)}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Card>\r\n\r\n            {/* Weekly Nutrition Breakdown */}\r\n            <Card className=\"p-6\">\r\n              <div className=\"flex items-center gap-2 mb-4\">\r\n                <BarChart2 className=\"w-5 h-5 text-primary-200\" />\r\n                <h3 className=\"font-medium text-primary-100\">Weekly Nutrition Breakdown</h3>\r\n              </div>\r\n              <div className=\"h-64 bg-gradient-to-br from-neutral-900 to-neutral-800 rounded-lg p-4 shadow-inner\">\r\n                <ChartContainer config={{ calories: { label: \"Calories\", color: \"#4CAF50\" } }}>\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <LineChart\r\n                      data={daysOfWeek.map((day) => {\r\n                        const macros = stats.macrosByDay?.[day] || { protein: 0, carbs: 0, fat: 0 };\r\n                        const calories = (stats?.caloriesByDay as Record<string, number>)?.[day] || 0;\r\n                        return {\r\n                          day: day.substring(0, 3),\r\n                          calories,\r\n                        };\r\n                      })}\r\n                      margin={{ top: 10, right: 20, left: 0, bottom: 0 }}\r\n                    >\r\n                      <XAxis dataKey=\"day\" stroke=\"#b5e3b6\" />\r\n                      <YAxis stroke=\"#b5e3b6\" />\r\n                      <Tooltip contentStyle={{ background: '#23272b', border: '1px solid #333', color: '#fff' }} />\r\n                      <Legend />\r\n                      <Line key=\"calories\" type=\"monotone\" dataKey=\"calories\" stroke=\"#4CAF50\" strokeWidth={2} dot={false} />\r\n                    </LineChart>\r\n                  </ResponsiveContainer>\r\n                </ChartContainer>\r\n              </div>\r\n            </Card>\r\n\r\n            {/* Macro Distribution */}\r\n            <Card className=\"p-6\">\r\n              <div className=\"flex items-center gap-2 mb-4\">\r\n                <PieChart className=\"w-5 h-5 text-amber-200\" />\r\n                <h3 className=\"font-medium text-amber-500\">Macro Distribution</h3>\r\n              </div>\r\n              <div className=\"h-56 bg-gradient-to-br from-neutral-900 to-neutral-800 rounded-lg p-4 flex items-center justify-center shadow-inner\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <LineChart\r\n                    data={daysOfWeek.map(day => {\r\n                      const macros = stats.macrosByDay?.[day] || { protein: 0, carbs: 0, fat: 0 };\r\n                      return {\r\n                        name: day.substring(0, 3),\r\n                        Protein: macros.protein,\r\n                        Carbs: macros.carbs,\r\n                        Fat: macros.fat,\r\n                      };\r\n                    })}\r\n                  >\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip contentStyle={{ background: '#23272b', border: '1px solid #333', color: '#fff' }} />\r\n                    <Legend />\r\n                    <Line key=\"protein\" type=\"monotone\" dataKey=\"Protein\" stroke=\"#a78bfa\" strokeWidth={2} dot />\r\n                    <Line key=\"carbs\" type=\"monotone\" dataKey=\"Carbs\" stroke=\"#2dd4bf\" strokeWidth={2} dot />\r\n                    <Line key=\"fat\" type=\"monotone\" dataKey=\"Fat\" stroke=\"#fbbf24\" strokeWidth={2} dot />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n              {/* Add a summary below the chart */}\r\n              <div className=\"mt-4 text-sm text-neutral-600 text-center\">\r\n                {(() => {\r\n                  let totalProtein = 0, totalCarbs = 0, totalFat = 0;\r\n                  for (const day of daysOfWeek) {\r\n                    const macros = stats.macrosByDay?.[day] || { protein: 0, carbs: 0, fat: 0 };\r\n                    totalProtein += macros.protein;\r\n                    totalCarbs += macros.carbs;\r\n                    totalFat += macros.fat;\r\n                  }\r\n                  const total = totalProtein + totalCarbs + totalFat;\r\n                  const pct = (val: number) => total > 0 ? Math.round((val / total) * 100) : 0;\r\n                  return (\r\n                    <>\r\n                      <span className=\"mr-4\">Protein: <span className=\"text-amber-600 font-semibold\">{totalProtein}g</span> ({pct(totalProtein)}%)</span>\r\n                      <span className=\"mr-4\">Carbs: <span className=\"text-teal-600 font-semibold\">{totalCarbs}g</span> ({pct(totalCarbs)}%)</span>\r\n                      <span>Fat: <span className=\"text-yellow-600 font-semibold\">{totalFat}g</span> ({pct(totalFat)}%)</span>\r\n                    </>\r\n                  );\r\n                })()}\r\n              </div>\r\n            </Card>\r\n\r\n            {/* AI Insights Section */}\r\n            <Card className=\"p-6\">\r\n              <h3 className=\"text-xl font-semibold mb-4\">AI-Powered Insights</h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-blue-900 mb-2\">Nutrition Optimization</h4>\r\n                  <p className=\"text-sm text-blue-700\">\r\n                    Your protein intake shows good consistency. Consider increasing healthy fats for better satiety.\r\n                  </p>\r\n                </div>\r\n                <div className=\"p-4 bg-green-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-green-900 mb-2\">Calorie Management</h4>\r\n                  <p className=\"text-sm text-green-700\">\r\n                    You're maintaining excellent calorie control. Your weekly average is within optimal range.\r\n                  </p>\r\n                </div>\r\n                <div className=\"p-4 bg-purple-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-purple-900 mb-2\">Progress Prediction</h4>\r\n                  <p className=\"text-sm text-purple-700\">\r\n                    Based on current trends, you're on track to achieve your goals within the next 4 weeks.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Pricing Section */}\r\n      <div className=\"bg-gray-50 py-16\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center mb-12\">\r\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Choose Your Plan\r\n            </h2>\r\n            <p className=\"text-xl text-gray-600\">\r\n              Select the perfect plan for your health journey\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto\">\r\n            {pricingPlans.map((plan, index) => (\r\n              <Card key={index} className={`relative ${plan.popular ? 'ring-2 ring-blue-600 scale-105' : ''}`}>\r\n                {plan.popular && (\r\n                  <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\r\n                    <Badge className=\"bg-blue-600 text-white px-4 py-1\">\r\n                      Most Popular\r\n                    </Badge>\r\n                  </div>\r\n                )}\r\n                <CardHeader className=\"text-center\">\r\n                  <CardTitle className=\"text-2xl\">{plan.name}</CardTitle>\r\n                  <div className=\"mt-4\">\r\n                    <span className=\"text-4xl font-bold\">{plan.price}</span>\r\n                    <span className=\"text-gray-600\">/{plan.period}</span>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <ul className=\"space-y-3 mb-8\">\r\n                    {plan.features.map((feature, featureIndex) => (\r\n                      <li key={featureIndex} className=\"flex items-center\">\r\n                        <CheckCircle className=\"h-5 w-5 text-green-500 mr-3\" />\r\n                        <span>{feature}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  <Button \r\n                    className={`w-full ${plan.popular ? 'bg-blue-600 hover:bg-blue-700' : 'bg-gray-200 hover:bg-gray-300'}`}\r\n                    size=\"lg\"\r\n                  >\r\n                    {plan.popular ? 'Get Started' : 'Choose Plan'}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"text-center mt-12\">\r\n            <p className=\"text-gray-600 mb-4\">\r\n              Not sure which plan is right for you?\r\n            </p>\r\n            <Button variant=\"outline\" size=\"lg\">\r\n              Contact Sales\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Testimonials Section */}\r\n      <div className=\"bg-white py-16\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center mb-12\">\r\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              What Our Users Say\r\n            </h2>\r\n            <p className=\"text-xl text-gray-600\">\r\n              Join thousands of satisfied users who have transformed their health\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n            {[\r\n              {\r\n                name: 'Sarah Johnson',\r\n                role: 'Fitness Enthusiast',\r\n                content: 'The AI insights have completely changed how I approach my health. My weight loss goals are finally within reach!',\r\n                rating: 5\r\n              },\r\n              {\r\n                name: 'Michael Chen',\r\n                role: 'Health Professional',\r\n                content: 'As a doctor, I appreciate the accuracy and depth of the analytics. It helps me provide better care for my patients.',\r\n                rating: 5\r\n              },\r\n              {\r\n                name: 'Emily Rodriguez',\r\n                role: 'Wellness Coach',\r\n                content: 'The real-time monitoring and professional reports have elevated my coaching practice to a whole new level.',\r\n                rating: 5\r\n              }\r\n            ].map((testimonial, index) => (\r\n              <Card key={index}>\r\n                <CardContent className=\"p-6\">\r\n                  <div className=\"flex mb-4\">\r\n                    {[...Array(testimonial.rating)].map((_, i) => (\r\n                      <Star key={i} className=\"h-5 w-5 text-yellow-400 fill-current\" />\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"text-gray-600 mb-4 italic\">\"{testimonial.content}\"</p>\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-10 h-10 bg-gray-200 rounded-full mr-3\"></div>\r\n                    <div>\r\n                      <p className=\"font-medium\">{testimonial.name}</p>\r\n                      <p className=\"text-sm text-gray-500\">{testimonial.role}</p>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* CTA Section */}\r\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 py-16\">\r\n        <div className=\"max-w-4xl mx-auto text-center px-4 sm:px-6 lg:px-8\">\r\n          <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-4\">\r\n            Ready to Transform Your Health Journey?\r\n          </h2>\r\n          <p className=\"text-xl text-blue-100 mb-8\">\r\n            Join thousands of users who have achieved their health goals with Premium Analytics\r\n          </p>\r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n            <Button \r\n              size=\"lg\" \r\n              variant=\"secondary\" \r\n              className=\"bg-white text-blue-600 hover:bg-gray-100 px-8 py-3 text-lg\"\r\n              onClick={() => setShowPremiumFeatures(true)}\r\n            >\r\n              Start Free Trial\r\n            </Button>\r\n            <Button \r\n              size=\"lg\" \r\n              variant=\"outline\" \r\n              className=\"border-white hover:bg-white hover:text-blue-600 px-8 py-3 text-lg\"\r\n            >\r\n              Learn More\r\n            </Button>\r\n          </div>\r\n          <p className=\"text-blue-100 mt-4 text-sm\">\r\n            14-day free trial • No credit card required • Cancel anytime\r\n          </p>\r\n        </div>\r\n      </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n  );\r\n}","import { useAuth } from \"@/hooks/use-auth\";\nimport { Loader2 } from \"lucide-react\";\nimport { Redirect, Route } from \"wouter\";\n\nexport function ProtectedRoute({\n  path,\n  component: Component,\n}: {\n  path: string;\n  component: () => React.ReactElement | null;\n}) {\n  const { user, isLoading } = useAuth();\n\n  return (\n    <Route path={path}>\n      {() => {\n        if (isLoading) {\n          return (\n            <div className=\"flex items-center justify-center min-h-screen\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            </div>\n          );\n        }\n        \n        if (!user) {\n          return <Redirect to=\"/login\" />;\n        }\n        \n        return <Component />;\n      }}\n    </Route>\n  );\n}\n","import { Switch, Route, useLocation } from \"wouter\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"next-themes\";\nimport NotFound from \"./pages/not-found\";\nimport HomePage from \"./pages/home-page\";\nimport AuthPage from \"./pages/auth-page\";\nimport HistoryPage from \"./pages/history-page\";\nimport LandingPage from \"./pages/landing-page\";\nimport TryItPage from \"./pages/try-it-page\";\nimport PricingPage from \"./pages/pricing-page\";\nimport AboutPage from \"./pages/about-page\";\nimport ContactPage from \"./pages/contact-page\";\nimport TermsPage from \"./pages/terms-page\";\nimport PrivacyPage from \"./pages/privacy-page\";\nimport MealPlanPage from \"./pages/meal-plan-page\";\nimport MealCalendarPage from \"./pages/meal-calendar-page\";\nimport RecipeImportPage from \"./pages/recipe-import-page\";\nimport OnboardingPage from \"./pages/onboarding-page\";\nimport AdminPanel from \"./pages/admin-panel\";\nimport ChatbotPage from \"./pages/chatbot\";\nimport AchievementsPage from \"./pages/achievements-page\";\nimport NutritionEducationPage from \"./pages/nutrition-education-page\";\nimport ProfilePage from \"./pages/profile-page\";\nimport PremiumAnalyticsPage from \"./pages/PremiumAnalytics\";\nimport { ProtectedRoute } from \"./lib/protected-route\";\nimport { ReactElement } from \"react\";\n\nconst RedirectToLogin = () => {\n  const [, setLocation] = useLocation();\n  setLocation('/login');\n  return null;\n};\n\nfunction Router(): ReactElement {\n  return (\n    <Switch>\n      <Route path=\"/\" component={LandingPage} />\n      <Route path=\"/try-it\" component={TryItPage} />\n      <Route path=\"/pricing\" component={PricingPage} />\n      <ProtectedRoute path=\"/dashboard\" component={HomePage} />\n      <ProtectedRoute path=\"/history\" component={HistoryPage} />\n      <Route path=\"/auth\" component={RedirectToLogin} />\n      <Route path=\"/login\" component={AuthPage} />\n      <Route path=\"/about\" component={AboutPage} />\n      <Route path=\"/contact\" component={ContactPage} />\n      <Route path=\"/terms\" component={TermsPage} />\n      <Route path=\"/privacy\" component={PrivacyPage} />\n      <ProtectedRoute path=\"/meal-plan\" component={MealPlanPage} />\n      <ProtectedRoute path=\"/meal-calendar\" component={MealCalendarPage} />\n      <ProtectedRoute path=\"/recipe-import\" component={RecipeImportPage} />\n      <ProtectedRoute path=\"/onboarding\" component={OnboardingPage} />\n      <ProtectedRoute path=\"/admin\" component={AdminPanel} />\n      <ProtectedRoute path=\"/chatbot\" component={ChatbotPage} />\n      <ProtectedRoute path=\"/achievements\" component={AchievementsPage} />\n      <ProtectedRoute path=\"/nutrition-education\" component={NutritionEducationPage} />\n      <ProtectedRoute path=\"/profile\" component={ProfilePage} />\n      <ProtectedRoute path=\"/premium-analytics\" component={PremiumAnalyticsPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App(): ReactElement {\n  return (\n    <ThemeProvider attribute=\"class\" defaultTheme=\"light\">\n      <TooltipProvider>\n        <Router />\n      </TooltipProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: 'en',\n    fallbackLng: 'en',\n    supportedLngs: ['en', 'ar', 'es', 'pt', 'fr'],\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import { createRoot } from \"react-dom/client\";\nimport App from \"@/App\";\nimport \"@/index.css\";\nimport \"@/lib/i18n\"; // Added i18n import\nimport { AuthProvider } from \"@/hooks/use-auth\";\nimport { ErrorProvider } from \"@/contexts/ErrorContext\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport { Toaster } from \"@/components/ui/toaster\";\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <QueryClientProvider client={queryClient}>\n    <ErrorProvider>\n      <AuthProvider>\n        <App />\n        <Toaster />\n      </AuthProvider>\n    </ErrorProvider>\n  </QueryClientProvider>\n);"],"file":"assets/js/index-Cr4Vn6rd.js"}