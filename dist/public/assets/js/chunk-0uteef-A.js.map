{"version":3,"file":"chunk-0uteef-A.js","sources":["../../../../client/node_modules/@tanstack/query-core/build/modern/subscribable.js","../../../../client/node_modules/@tanstack/query-core/build/modern/utils.js","../../../../client/node_modules/@tanstack/query-core/build/modern/focusManager.js","../../../../client/node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../../../client/node_modules/@tanstack/query-core/build/modern/thenable.js","../../../../client/node_modules/@tanstack/query-core/build/modern/retryer.js","../../../../client/node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../../../client/node_modules/@tanstack/query-core/build/modern/removable.js","../../../../client/node_modules/@tanstack/query-core/build/modern/query.js","../../../../client/node_modules/@tanstack/query-core/build/modern/queryCache.js","../../../../client/node_modules/@tanstack/query-core/build/modern/mutation.js","../../../../client/node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../../../client/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../../../client/node_modules/@tanstack/query-core/build/modern/queryClient.js","../../../../client/node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../../../client/node_modules/@tanstack/query-core/build/modern/mutationObserver.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        if (key === \"promise\" && !this.options.experimental_prefetchInRender && this.#currentThenable.status === \"pending\") {\n          this.#currentThenable.reject(\n            new Error(\n              \"experimental_prefetchInRender feature flag is not enabled\"\n            )\n          );\n        }\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map"],"names":["_focused","_cleanup","_setup","_a","_online","_b","_gcTimeout","_c","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","_Query_instances","dispatch_fn","_d","_queries","_e","_observers","_mutationCache","_Mutation_instances","_f","_mutations","_scopes","_mutationId","_g","_queryCache","_queryDefaults","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","_QueryObserver_instances","executeFetch_fn","updateStaleTimeout_fn","computeRefetchInterval_fn","updateRefetchInterval_fn","updateTimers_fn","clearStaleTimeout_fn","clearRefetchInterval_fn","updateQuery_fn","notify_fn","_i","_currentMutation","_j","Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","isValidTimeout","value","Infinity","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","hasOwn","prototype","hasOwnProperty","replaceEqualDeep","array","isPlainArray","aSize","length","bItems","bSize","copy","Array","equalItems","i","aItem","bItem","call","v","shallowEqualObjects","isArray","o","hasObjectPrototype","ctor","prot","getPrototypeOf","toString","replaceData","prevData","data","structuralSharing","addToEnd","items","item","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","shouldThrowError","throwOnError","params","focusManager","super","__privateAdd","__privateSet","onFocus","addEventListener","removeEventListener","__privateGet","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","WeakMap","onlineManager","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","pendingThenable","resolve","thenable","_resolve","_reject","finalize","assign","catch","reason","defaultRetryDelay","failureCount","min","canFetch","networkMode","CancelledError","revert","silent","createRetryer","config","continueFn","isRetryCancelled","isResolved","canContinue","canRun","canStart","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","onCancel","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","destroy","clearGcTimeout","scheduleGc","gcTime","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","defaultOptions","setOptions","observers","client","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","__privateMethod","manual","setState","setStateOptions","reset","some","observer","isDisabled","getObserversCount","isStatic","getCurrentResult","isStaleByTime","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","includes","notify","removeObserver","filter","invalidate","fetch","_h","_k","_l","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","abort","onSuccess","onSettled","onError","WeakSet","action","fetchState","newState","reducer","onQueryUpdate","QueryCache","Map","build","defaultQueryOptions","getQueryDefaults","has","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","queries","event","Mutation","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","_m","_n","_o","_p","_q","_r","_s","_t","mutationFn","restored","onMutate","runNext","onMutationUpdate","MutationCache","__privateWrapper","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","mutations","QueryObserver","bindMethods","shouldFetchOnMount","updateResult","shouldFetchOn","refetchOnWindowFocus","prevOptions","prevQuery","mounted","shouldFetchOptionally","nextRefetchInterval","getOptimisticResult","createResult","optimisticResult","shouldAssignObserverCurrentProperties","trackResult","onPropTracked","Proxy","target","trackProp","experimental_prefetchInRender","Reflect","getCurrentQuery","fetchOptimistic","prevResult","prevResultState","prevResultOptions","queryInitialState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","skipSelect","placeholderData","select","selectError","isPending","isError","isLoading","nextResult","isSuccess","isInitialLoading","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","isEnabled","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","shouldNotifyListeners","time","refetchInterval","nextInterval","setInterval","refetchIntervalInBackground","clearInterval","notifyOptions","retryOnMount","shouldLoadOnMount","refetchOnMount","field","MutationObserver","_MutationObserver_instances","_mutateOptions","updateResult_fn","mutate","isIdle"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}